[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2152",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2152/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2152/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2152/events",
    "html_url": "https://github.com/expressjs/express/issues/2152",
    "id": 34653618,
    "node_id": "MDU6SXNzdWUzNDY1MzYxOA==",
    "number": 2152,
    "title": "Download zip file",
    "user": {
      "login": "nukulb",
      "id": 701733,
      "node_id": "MDQ6VXNlcjcwMTczMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/701733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nukulb",
      "html_url": "https://github.com/nukulb",
      "followers_url": "https://api.github.com/users/nukulb/followers",
      "following_url": "https://api.github.com/users/nukulb/following{/other_user}",
      "gists_url": "https://api.github.com/users/nukulb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nukulb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nukulb/subscriptions",
      "organizations_url": "https://api.github.com/users/nukulb/orgs",
      "repos_url": "https://api.github.com/users/nukulb/repos",
      "events_url": "https://api.github.com/users/nukulb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nukulb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 26,
    "created_at": "2014-05-30T15:09:59Z",
    "updated_at": "2020-04-14T15:31:46Z",
    "closed_at": "2014-05-30T16:39:45Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I am looking for some help with my current issue.\n\nI am trying to download a zip file using `res.download`.\n\nMy code for downloading the file is very simple\n\n``` js\nres.download('bulk-output.zip');\n```\n\nbulk-output.zip is file that sits in the root of my repository.\n\nWhen I download this file from the browser I get the following error when unzipping the file.\n\n![image](https://cloud.githubusercontent.com/assets/701733/3132170/63b0c0f6-e80c-11e3-88a1-76106ee68922.png)\n\nAny thoughts on what is wrong here? I imagine the problem is on my end but I am unable to nail down the problem.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2152/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2151",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2151/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2151/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2151/events",
    "html_url": "https://github.com/expressjs/express/issues/2151",
    "id": 34582818,
    "node_id": "MDU6SXNzdWUzNDU4MjgxOA==",
    "number": 2151,
    "title": "Params registered on app available in routers used by app",
    "user": {
      "login": "adamterlson",
      "id": 2498418,
      "node_id": "MDQ6VXNlcjI0OTg0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2498418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamterlson",
      "html_url": "https://github.com/adamterlson",
      "followers_url": "https://api.github.com/users/adamterlson/followers",
      "following_url": "https://api.github.com/users/adamterlson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamterlson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamterlson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamterlson/subscriptions",
      "organizations_url": "https://api.github.com/users/adamterlson/orgs",
      "repos_url": "https://api.github.com/users/adamterlson/repos",
      "events_url": "https://api.github.com/users/adamterlson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamterlson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 34,
    "created_at": "2014-05-29T19:05:59Z",
    "updated_at": "2016-12-13T00:56:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I discovered today that it seems params registered on `app` are not respected in routes registered via a router (`express.Router()`).  Perhaps I'm just missing something though!\n\nWhile sectioning an application's routes via routers is super handy, having to re-register shared params on each of them is not.\n\nA use case to consider: an application that has a page which renders user details in which the view needs the user data, and in addition the app exposes an API to get the raw JSON response for use by a client-side app, mobile app, or third party.\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n// Shared Params\n\napp.param('user', function (req, res, next, id) {\n  req.user = { id: id, name: 'Fred' };\n  next();\n});\n\n// Website\n\napp.get('/users/:user', function (req, res) {\n  res.render('user', req.user);\n});\n\n// Application API (JSON Responses)\n\nvar APIRouter = express.Router();\n\nrouter.get('/users/:user', function (req, res) {\n  res.json(req.user); // req.user is undefined!\n});\n\napp.use('/api', APIRouter);\n\n// App Start\n\napp.listen(8000);\n```\n\nSeems that shared params across application \"sections\" when using routers would be a very common scenario.\n\n---\n\nMaybe this is going too far, but it'd make sense that any param registered on a parent router applied to its children, but possibly not visa-versa:\n\n``` javascript\nvar parent = express.Router();\nvar child = express.Router();\n\nparent.param('foo', function (req, res, next) {\n    req.foo = { ... };\n    next();\n});\n\nchild.param('bar', function (req, res, next) {\n    req.bar = { ... };\n    next();\n});\n\nparent.get('/:foo/:bar', function (req, res) {\n    res.json({\n        foo: req.foo, // OK!\n        bar: req.bar // undefined\n    });\n});\n\nchild.get('/:foo/:bar', function (req, res) {\n    res.json({\n        foo: req.foo, // OK!\n        bar: req.bar // OK!\n    });\n});\n\nparent.use(child);\n```\n\nThoughts/advice appreciated!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2151/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2150",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2150/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2150/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2150/events",
    "html_url": "https://github.com/expressjs/express/pull/2150",
    "id": 34572487,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0OTExMTQ=",
    "number": 2150,
    "title": "update send to 0.4.0",
    "user": {
      "login": "mscdex",
      "id": 54666,
      "node_id": "MDQ6VXNlcjU0NjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/54666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mscdex",
      "html_url": "https://github.com/mscdex",
      "followers_url": "https://api.github.com/users/mscdex/followers",
      "following_url": "https://api.github.com/users/mscdex/following{/other_user}",
      "gists_url": "https://api.github.com/users/mscdex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mscdex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mscdex/subscriptions",
      "organizations_url": "https://api.github.com/users/mscdex/orgs",
      "repos_url": "https://api.github.com/users/mscdex/repos",
      "events_url": "https://api.github.com/users/mscdex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mscdex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-29T17:01:23Z",
    "updated_at": "2014-07-29T04:18:19Z",
    "closed_at": "2014-05-31T02:17:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2150",
      "html_url": "https://github.com/expressjs/express/pull/2150",
      "diff_url": "https://github.com/expressjs/express/pull/2150.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2150.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2150/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2149",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2149/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2149/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2149/events",
    "html_url": "https://github.com/expressjs/express/issues/2149",
    "id": 34522947,
    "node_id": "MDU6SXNzdWUzNDUyMjk0Nw==",
    "number": 2149,
    "title": "bad .param(name, fn) behaviour when a parameter and route is matched more than once",
    "user": {
      "login": "swrh",
      "id": 195439,
      "node_id": "MDQ6VXNlcjE5NTQzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swrh",
      "html_url": "https://github.com/swrh",
      "followers_url": "https://api.github.com/users/swrh/followers",
      "following_url": "https://api.github.com/users/swrh/following{/other_user}",
      "gists_url": "https://api.github.com/users/swrh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swrh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swrh/subscriptions",
      "organizations_url": "https://api.github.com/users/swrh/orgs",
      "repos_url": "https://api.github.com/users/swrh/repos",
      "events_url": "https://api.github.com/users/swrh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swrh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-05-29T01:56:15Z",
    "updated_at": "2014-07-29T04:18:19Z",
    "closed_at": "2014-05-29T02:26:32Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I'm a very new Node.js and Express user (started using them this month) but I think if a parameter is rejected, like for example if `id` is not a number, all routes expecting that parameter should be avoided, but that doesn't happen in 4.3.1. If you have a `.param()` callback rejecting/skipping a value and there are more than one route expecting the variable related and matching the route pattern, the second route will be called instead of also being skipped like the first.\n\nThe test code below stopped working at 4.3.1 version. Instead of getting `get.new` we now get `get.id`. I tried to find the root cause of this issue but unfortunately I started using Express and Node.js last month and I do not know its internals enough to fix the problem. Anyway, it seems that it is somehow related to the commits 31b2e2d7b4774eed16a93f9a8a20a9967e91e524 and its reversion 7f049164b7f253166b43b789475971d6dd8ec2c0.\n\nShould I make a pull request to ask for this test to be merged even known that it still fails? Could someone please take a look at it?\n\n```\ndiff --git a/test/app.param.js b/test/app.param.js\nindex 923cbc3..15abaee 100644\n--- a/test/app.param.js\n+++ b/test/app.param.js\n@@ -194,5 +194,30 @@ describe('app', function(){\n       .get('/user/123')\n       .expect('name', done);\n     })\n+\n+    it('should defer all the param routes', function(done){\n+      var app = express();\n+\n+      app.param('id', function(req, res, next, val){\n+        if (val == 'new') return next('route');\n+        return next();\n+      });\n+\n+      app.all('/user/:id', function(req, res){\n+        res.send('all.id');\n+      });\n+\n+      app.get('/user/:id', function(req, res){\n+        res.send('get.id');\n+      });\n+\n+      app.get('/user/new', function(req, res){\n+        res.send('get.new');\n+      });\n+\n+      request(app)\n+      .get('/user/new')\n+      .expect('get.new', done);\n+    })\n   })\n })\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2149/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2148",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2148/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2148/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2148/events",
    "html_url": "https://github.com/expressjs/express/issues/2148",
    "id": 34425902,
    "node_id": "MDU6SXNzdWUzNDQyNTkwMg==",
    "number": 2148,
    "title": "mock requests and routing",
    "user": {
      "login": "jkarneges",
      "id": 521953,
      "node_id": "MDQ6VXNlcjUyMTk1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/521953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkarneges",
      "html_url": "https://github.com/jkarneges",
      "followers_url": "https://api.github.com/users/jkarneges/followers",
      "following_url": "https://api.github.com/users/jkarneges/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkarneges/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkarneges/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkarneges/subscriptions",
      "organizations_url": "https://api.github.com/users/jkarneges/orgs",
      "repos_url": "https://api.github.com/users/jkarneges/repos",
      "events_url": "https://api.github.com/users/jkarneges/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkarneges/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-05-28T00:33:25Z",
    "updated_at": "2015-04-10T05:12:00Z",
    "closed_at": "2014-05-28T00:38:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nHas anyone used https://github.com/howardabrams/node-mocks-http with express? I can pass the fake req/res objects to a specific handler but what I'd really like to do is inject them into Express' routing system so that Express chooses the correct handler for me based on the input, and also parses out the URL into params, etc. Maybe there are some internal Express hooks that I can start from?\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2148/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2147",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2147/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2147/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2147/events",
    "html_url": "https://github.com/expressjs/express/issues/2147",
    "id": 34397087,
    "node_id": "MDU6SXNzdWUzNDM5NzA4Nw==",
    "number": 2147,
    "title": "Multiple `router.VERB` on same route creates new stack object",
    "user": {
      "login": "clarle",
      "id": 686352,
      "node_id": "MDQ6VXNlcjY4NjM1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/686352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clarle",
      "html_url": "https://github.com/clarle",
      "followers_url": "https://api.github.com/users/clarle/followers",
      "following_url": "https://api.github.com/users/clarle/following{/other_user}",
      "gists_url": "https://api.github.com/users/clarle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clarle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clarle/subscriptions",
      "organizations_url": "https://api.github.com/users/clarle/orgs",
      "repos_url": "https://api.github.com/users/clarle/repos",
      "events_url": "https://api.github.com/users/clarle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clarle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-05-27T18:01:05Z",
    "updated_at": "2014-05-27T18:15:27Z",
    "closed_at": "2014-05-27T18:02:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there,\n\nWas messing around with Express internals and I found some inconsistent behavior with how routes worked with a new `express.Router` object vs. the default `_router` of an app.\n\nUsing the default router:\n\n``` js\nvar express = require('express'),\n      app = express();\n\napp.get('/test', function (req, res) {\n    res.json({a:'b'});\n});\n\napp.post('/test', function (req, res) {\n    res.json({c:'d'});\n});\n\n// app._router.stack[2]\n/* \n{ \n  keys: [],\n  regexp: /^\\/test\\/?$/i,\n  handle: [Function],\n  route: \n   { path: '/test',\n     stack: [ [Object], [Object] ],\n     methods: { get: true, post: true } \n   } \n}\n*/\n```\n\nWith Router:\n\n``` js\nvar express = require('express'),\n      app = express(),\n      router = express.Router();\n\nrouter.get('/test', function (req, res) {\n    res.json({a:'b'});\n});\n\nrouter.post('/test', function (req, res) {\n    res.json({c:'d'});\n});\n\n// router.stack\n/*\n[ { \n    keys: [],\n    regexp: /^\\/test\\/?$/i,\n    handle: [Function],\n    route: \n     { path: '/test',\n       stack: [Object],\n       methods: { get: true } \n  }, { \n    keys: [],\n    regexp: /^\\/test\\/?$/i,\n    handle: [Function],\n    route: \n     { path: '/test',\n       stack: [Object],\n       methods: { post: true } \n} ]\n*/\n```\n\nHaving multiple route objects in the stack doesn't happen if I use `app.route()` or `router.route()`. It's only when `router.VERB()` is used that this is happening. I was wondering if this was expected behavior, since we were working on an Express extension that would use some of the data from there.\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2147/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2146",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2146/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2146/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2146/events",
    "html_url": "https://github.com/expressjs/express/issues/2146",
    "id": 34383814,
    "node_id": "MDU6SXNzdWUzNDM4MzgxNA==",
    "number": 2146,
    "title": "Error in a dependencies package.json file",
    "user": {
      "login": "SupremeTechnopriest",
      "id": 2261598,
      "node_id": "MDQ6VXNlcjIyNjE1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2261598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SupremeTechnopriest",
      "html_url": "https://github.com/SupremeTechnopriest",
      "followers_url": "https://api.github.com/users/SupremeTechnopriest/followers",
      "following_url": "https://api.github.com/users/SupremeTechnopriest/following{/other_user}",
      "gists_url": "https://api.github.com/users/SupremeTechnopriest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SupremeTechnopriest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SupremeTechnopriest/subscriptions",
      "organizations_url": "https://api.github.com/users/SupremeTechnopriest/orgs",
      "repos_url": "https://api.github.com/users/SupremeTechnopriest/repos",
      "events_url": "https://api.github.com/users/SupremeTechnopriest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SupremeTechnopriest/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-05-27T15:30:49Z",
    "updated_at": "2014-05-27T15:56:38Z",
    "closed_at": "2014-05-27T15:39:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nI cant install express due to a bad package.json file in one of express.js's dependencies.\n\nHere's the non verbose output and steps to reproduce the problem. \n\n``` bash\n ~/Desktop/test  npm install express --save\nnpm WARN package.json test@0.0.0 No description\nnpm WARN package.json test@0.0.0 No repository field.\nnpm WARN package.json test@0.0.0 No README data\nnpm ERR! Failed to parse json\nnpm ERR! Unexpected end of input\nnpm ERR! File: /Users/rl/.npm/debug/0.8.0/package/package.json\nnpm ERR! Failed to parse package.json data.\nnpm ERR! package.json must be actual JSON, not just JavaScript.\nnpm ERR!\nnpm ERR! This is not a bug in npm.\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\n\nnpm ERR! System Darwin 13.1.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"express\" \"--save\"\nnpm ERR! cwd /Users/rl/Desktop/test\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.13\nnpm ERR! file /Users/rl/.npm/debug/0.8.0/package/package.json\nnpm ERR! code EJSONPARSE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/rl/Desktop/test/npm-debug.log\nnpm ERR! not ok code 0\n ✘  ~/Desktop/test  node --version\nv0.10.28\n ~/Desktop/test  npm --version\n1.4.13\n ~/Desktop/test \n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2146/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2145",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2145/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2145/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2145/events",
    "html_url": "https://github.com/expressjs/express/issues/2145",
    "id": 34350411,
    "node_id": "MDU6SXNzdWUzNDM1MDQxMQ==",
    "number": 2145,
    "title": "Express 4 with Socket.io",
    "user": {
      "login": "programming-kid",
      "id": 4522965,
      "node_id": "MDQ6VXNlcjQ1MjI5NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4522965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/programming-kid",
      "html_url": "https://github.com/programming-kid",
      "followers_url": "https://api.github.com/users/programming-kid/followers",
      "following_url": "https://api.github.com/users/programming-kid/following{/other_user}",
      "gists_url": "https://api.github.com/users/programming-kid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/programming-kid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/programming-kid/subscriptions",
      "organizations_url": "https://api.github.com/users/programming-kid/orgs",
      "repos_url": "https://api.github.com/users/programming-kid/repos",
      "events_url": "https://api.github.com/users/programming-kid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/programming-kid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-05-27T08:17:39Z",
    "updated_at": "2014-07-06T18:40:02Z",
    "closed_at": "2014-05-27T12:33:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am new to Express 4 & socket.io i can't get a working example of express4 with socket.io ,all examples are about express 3 and socket.io\n\nhere is my app.js\n\n``` javascript\nvar express = require('express');\nvar io = require('socket.io');\nvar path = require('path');\nvar swig = require('swig');\nvar favicon = require('static-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\n\nvar app = express(),\n    server = require('http').createServer(app),\n    sio = io.listen(server);\n\n// view engine setup\n\napp.engine('html', swig.renderFile);\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'html');\n\napp.use(favicon());\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded());\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', routes);\napp.use('/users', users);\n\n/// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\nsio.sockets.on('connection', function(socket) {\n    socket.emit('news', {\n        hello: 'world'\n    });\n    socket.on('my other event', function(data) {\n        console.log(data);\n    });\n});\n\n/// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use(function(err, req, res, next) {\n        res.status(err.status || 500);\n        res.render('error', {\n            message: err.message,\n            error: err\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n        message: err.message,\n        error: {}\n    });\n});\n\n\nmodule.exports = app;\n```\n\nhere is my client code\n\n``` html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Express</title>\n</head>\n<body>\n<h3>Hello Express</h3>\n\n    <script src=\"/socket.io/socket.io.js\"></script>\n<script>\n  var socket = io.connect('http://localhost:3000');\n  socket.on('news', function (data) {\n    console.log(data);\n    socket.emit('my other event', { my: 'data' });\n  });\n</script>\n</body>\n</html>\n```\n\ni can't get it working \n/socket.io\\socket.io.js return 404 on client side\n\nCan anyone please help me get setup with socket.io with Express4.2\n\nthanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2145/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2144",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2144/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2144/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2144/events",
    "html_url": "https://github.com/expressjs/express/issues/2144",
    "id": 34331328,
    "node_id": "MDU6SXNzdWUzNDMzMTMyOA==",
    "number": 2144,
    "title": "VIM jslint won't work in directories with local installed Express",
    "user": {
      "login": "gbukauskas",
      "id": 422575,
      "node_id": "MDQ6VXNlcjQyMjU3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/422575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbukauskas",
      "html_url": "https://github.com/gbukauskas",
      "followers_url": "https://api.github.com/users/gbukauskas/followers",
      "following_url": "https://api.github.com/users/gbukauskas/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbukauskas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbukauskas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbukauskas/subscriptions",
      "organizations_url": "https://api.github.com/users/gbukauskas/orgs",
      "repos_url": "https://api.github.com/users/gbukauskas/repos",
      "events_url": "https://api.github.com/users/gbukauskas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbukauskas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-26T22:02:26Z",
    "updated_at": "2014-05-31T18:33:29Z",
    "closed_at": "2014-05-26T22:06:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Operating system: Windows 7\nMy .vimrc.local contains settings:\n\n```\nsetlocal makeprg=jslint\\ %\nsetlocal errorformat=%-P%f,\n    \\%A%>%\\\\s%\\\\?#%*\\\\d\\ %m,%Z%.%#Line\\ %l\\\\,\\ Pos\\ %c,\n    \\%-G%f\\ is\\ OK.,%-Q\nnmap <silent> <F4> :w<CR>:make<CR>:cw<CR>\n```\n\nVIM works perfect for plain NodeJS files but fails in directories after local Express installation with npm (creating ‘package.json’ and issuing ‘npm install’). It looks that something overwrites quickFix window. What should I correct here?\nIt would be interest to note that VIM works correctly in folders created by globally installed `express-generator`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2144/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2143",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2143/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2143/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2143/events",
    "html_url": "https://github.com/expressjs/express/issues/2143",
    "id": 34327350,
    "node_id": "MDU6SXNzdWUzNDMyNzM1MA==",
    "number": 2143,
    "title": "passing % as value for name parameter in path",
    "user": {
      "login": "imme-emosol",
      "id": 487989,
      "node_id": "MDQ6VXNlcjQ4Nzk4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/487989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imme-emosol",
      "html_url": "https://github.com/imme-emosol",
      "followers_url": "https://api.github.com/users/imme-emosol/followers",
      "following_url": "https://api.github.com/users/imme-emosol/following{/other_user}",
      "gists_url": "https://api.github.com/users/imme-emosol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imme-emosol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imme-emosol/subscriptions",
      "organizations_url": "https://api.github.com/users/imme-emosol/orgs",
      "repos_url": "https://api.github.com/users/imme-emosol/repos",
      "events_url": "https://api.github.com/users/imme-emosol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imme-emosol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-05-26T20:13:27Z",
    "updated_at": "2014-05-27T06:07:14Z",
    "closed_at": "2014-05-26T20:18:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I don't know if this really is an issue,\nto me it was however something unexpected.\nI haven't looked up if a percent-sign is or is not allowed within the path-part of an uri but 'fixed' it for the one case that i came across but think it 'should handle more then just this case' as mentioned in the code.\n\nthis is the 'fix' in express/lib/router/layer.js : \n\n``` javascript\nLayer.prototype.match = function(path){\n  var keys = this.keys;\n  var params = this.params = {};\n  var m = this.regexp.exec(path);\n  var n = 0;\n  var key;\n  var val;\n\n  if (!m) return false;\n\n  this.path = m[0];\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    key = keys[i - 1];\n\n    if ( 'string' !== typeof m[i] ) {\n      val = m[i];\n    } else {\n      try {\n        if ( '%' === m[i] ) {// should handle more then just this case\n          val = m[i];\n        } else {\n          val = decodeURIComponent(m[i]);\n        }\n      } catch(e) {\n        var err = new Error(\"Failed to decode param '\" + m[i] + \"'\");\n        err.status = 400;\n        throw err;\n      }\n    }\n\n    if (key) {\n      params[key.name] = val;\n    } else {\n      params[n++] = val;\n    }\n  }\n\n  return true;\n};\n```\n\nAnd here i've tried to add a proper test to express/test/app.param.js : \n\n``` javascript\n\nvar express = require('../')\n  , request = require('supertest');\n\ndescribe('app', function(){\n  describe('.param(fn)', function(){\n    it('should map app.param(name, ...) logic', function(done){\n      var app = express();\n\n      app.param(function(name, regexp){\n        if (Object.prototype.toString.call(regexp) == '[object RegExp]') { // See #1557\n          return function(req, res, next, val){\n            var captures;\n            if (captures = regexp.exec(String(val))) {\n              req.params[name] = captures[1];\n              next();\n            } else {\n              next('route');\n            }\n          }\n        }\n      })\n\n      app.param(':name', /^([a-zA-Z]+)$/);\n\n      app.get('/user/:name', function(req, res){\n        res.send(req.params.name);\n      });\n\n      request(app)\n      .get('/user/tj')\n      .end(function(err, res){\n        res.text.should.equal('tj');\n        request(app)\n        .get('/user/123')\n        .expect(404, done);\n      });\n\n    })\n\n    it('should map app.param(name, ...) logic with value \\'%\\'', function(done){\n      var app = express();\n\n      app.param(function(name, regexp){\n        if (Object.prototype.toString.call(regexp) == '[object RegExp]') { // See #1557\n          return function(req, res, next, val){\n            var captures;\n            if (captures = regexp.exec(String(val))) {\n              req.params[name] = captures[1];\n              next();\n            } else {\n              next('route');\n            }\n          }\n        }\n      })\n\n\n      app.get('/user/:name/:id', function(req, res){\n        res.send(req.params.name);\n      });\n\n      request(app)\n      .get('/user/%/4')\n      .expect('%', done);\n\n    })\n\n    it('should fail if not given fn', function(){\n      var app = express();\n      app.param.bind(app, ':name', 'bob').should.throw();\n    })\n  })\n\n  describe('.param(names, fn)', function(){\n    it('should map the array', function(done){\n      var app = express();\n\n      app.param(['id', 'uid'], function(req, res, next, id){\n        id = Number(id);\n        if (isNaN(id)) return next('route');\n        req.params.id = id;\n        next();\n      });\n\n      app.get('/post/:id', function(req, res){\n        var id = req.params.id;\n        id.should.be.a.Number;\n        res.send('' + id);\n      });\n\n      app.get('/user/:uid', function(req, res){\n        var id = req.params.id;\n        id.should.be.a.Number;\n        res.send('' + id);\n      });\n\n      request(app)\n      .get('/user/123')\n      .end(function(err, res){\n        res.text.should.equal('123');\n\n        request(app)\n        .get('/post/123')\n        .expect('123', done);\n      })\n    })\n  })\n\n  describe('.param(name, fn)', function(){\n    it('should map logic for a single param', function(done){\n      var app = express();\n\n      app.param('id', function(req, res, next, id){\n        id = Number(id);\n        if (isNaN(id)) return next('route');\n        req.params.id = id;\n        next();\n      });\n\n      app.get('/user/:id', function(req, res){\n        var id = req.params.id;\n        id.should.be.a.Number;\n        res.send('' + id);\n      });\n\n      request(app)\n      .get('/user/123')\n      .expect('123', done);\n    })\n\n    it('should only call once per request', function(done) {\n      var app = express();\n      var called = 0;\n      var count = 0;\n\n      app.param('user', function(req, res, next, user) {\n        called++;\n        req.user = user;\n        next();\n      });\n\n      app.get('/foo/:user', function(req, res, next) {\n        count++;\n        next();\n      });\n      app.get('/foo/:user', function(req, res, next) {\n        count++;\n        next();\n      });\n      app.use(function(req, res) {\n        res.end([count, called, req.user].join(' '));\n      });\n\n      request(app)\n      .get('/foo/bob')\n      .expect('2 1 bob', done);\n    })\n\n    it('should call when values differ', function(done) {\n      var app = express();\n      var called = 0;\n      var count = 0;\n\n      app.param('user', function(req, res, next, user) {\n        called++;\n        req.users = (req.users || []).concat(user);\n        next();\n      });\n\n      app.get('/:user/bob', function(req, res, next) {\n        count++;\n        next();\n      });\n      app.get('/foo/:user', function(req, res, next) {\n        count++;\n        next();\n      });\n      app.use(function(req, res) {\n        res.end([count, called, req.users.join(',')].join(' '));\n      });\n\n      request(app)\n      .get('/foo/bob')\n      .expect('2 2 foo,bob', done);\n    })\n\n    it('should catch thrown error', function(done){\n      var app = express();\n\n      app.param('id', function(req, res, next, id){\n        throw new Error('err!');\n      });\n\n      app.get('/user/:id', function(req, res){\n        var id = req.params.id;\n        res.send('' + id);\n      });\n\n      request(app)\n      .get('/user/123')\n      .expect(500, done);\n    })\n\n    it('should defer to next route', function(done){\n      var app = express();\n\n      app.param('id', function(req, res, next, id){\n        next('route');\n      });\n\n      app.get('/user/:id', function(req, res){\n        var id = req.params.id;\n        res.send('' + id);\n      });\n\n      app.get('/:name/123', function(req, res){\n        res.send('name');\n      });\n\n      request(app)\n      .get('/user/123')\n      .expect('name', done);\n    })\n  })\n})\n```\n\nIf so desired i could fork and do a pull-request with the code i show here, i did a local clone of the repository today so i guess that's an easy thing?\n( yes, i'm not all that experienced with this ^_^ )\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2143/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2142",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2142/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2142/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2142/events",
    "html_url": "https://github.com/expressjs/express/issues/2142",
    "id": 34324501,
    "node_id": "MDU6SXNzdWUzNDMyNDUwMQ==",
    "number": 2142,
    "title": "Route.param() regex + callback",
    "user": {
      "login": "dresende",
      "id": 157494,
      "node_id": "MDQ6VXNlcjE1NzQ5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/157494?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dresende",
      "html_url": "https://github.com/dresende",
      "followers_url": "https://api.github.com/users/dresende/followers",
      "following_url": "https://api.github.com/users/dresende/following{/other_user}",
      "gists_url": "https://api.github.com/users/dresende/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dresende/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dresende/subscriptions",
      "organizations_url": "https://api.github.com/users/dresende/orgs",
      "repos_url": "https://api.github.com/users/dresende/repos",
      "events_url": "https://api.github.com/users/dresende/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dresende/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-05-26T18:59:13Z",
    "updated_at": "2014-08-13T11:28:43Z",
    "closed_at": "2014-05-26T20:42:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Is there a way to defining a parameter to be used by specifying a regex and also a callback to do something with the parameter? I want to do something like this:\n\n``` js\nvar R = express.Router();\n\nR.param(\"user\", /^\\d+$/, function (req, res, next, id) {\n    // do something...\n    req.user = {}; // foo\n\n    return next();\n});\n```\n\nI have several Routers created and when they have conflicts is because of `/foo/bar` is called but since `/foo/:user` was defined first it gets matched (when I don't want it to match).\n\nI really didn't want to sort the Routers.. :(\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2142/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2141",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2141/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2141/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2141/events",
    "html_url": "https://github.com/expressjs/express/issues/2141",
    "id": 34299566,
    "node_id": "MDU6SXNzdWUzNDI5OTU2Ng==",
    "number": 2141,
    "title": "500 Error: Failed to lookup view",
    "user": {
      "login": "gahula",
      "id": 1808699,
      "node_id": "MDQ6VXNlcjE4MDg2OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1808699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gahula",
      "html_url": "https://github.com/gahula",
      "followers_url": "https://api.github.com/users/gahula/followers",
      "following_url": "https://api.github.com/users/gahula/following{/other_user}",
      "gists_url": "https://api.github.com/users/gahula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gahula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gahula/subscriptions",
      "organizations_url": "https://api.github.com/users/gahula/orgs",
      "repos_url": "https://api.github.com/users/gahula/repos",
      "events_url": "https://api.github.com/users/gahula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gahula/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2014-05-26T10:59:41Z",
    "updated_at": "2014-05-26T23:46:38Z",
    "closed_at": "2014-05-26T15:39:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is a sub directory in views called errors and within that errors file there is '404.html' and '500.html'. In my app I have which is where the error happens (This is the same thing I had with the previous SWIG which worked fine)....\n\n``` js\napp.use(function(req, res, next){\n\nres.status(404);\n\n// respond with html page\nif(req.accepts('html')) {\n    res.render('/errors/404.html', {error: 'Not found'});\n    return;\n};\n\n// respond with json\nif(req.accepts('json')) {\n    res.send({ error: 'Not found' });\n    return;\n}\n\n// default to plain-text. send()\nres.type('txt').send('Not found');\n});\n\n}\n```\n\n500 Error: Failed to lookup view \"/errors/500.html\" in views directory \"/home/dc/webapps/app/views\"\n\nIt isn't going into the subdirectory \"errors\"!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2141/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2140",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2140/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2140/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2140/events",
    "html_url": "https://github.com/expressjs/express/issues/2140",
    "id": 34293214,
    "node_id": "MDU6SXNzdWUzNDI5MzIxNA==",
    "number": 2140,
    "title": "session with cookie or  using mysql store slow responsiveness",
    "user": {
      "login": "zucatti",
      "id": 939116,
      "node_id": "MDQ6VXNlcjkzOTExNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/939116?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zucatti",
      "html_url": "https://github.com/zucatti",
      "followers_url": "https://api.github.com/users/zucatti/followers",
      "following_url": "https://api.github.com/users/zucatti/following{/other_user}",
      "gists_url": "https://api.github.com/users/zucatti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zucatti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zucatti/subscriptions",
      "organizations_url": "https://api.github.com/users/zucatti/orgs",
      "repos_url": "https://api.github.com/users/zucatti/repos",
      "events_url": "https://api.github.com/users/zucatti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zucatti/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-26T09:08:24Z",
    "updated_at": "2014-05-26T15:29:15Z",
    "closed_at": "2014-05-26T15:29:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I use nodejs express to launch a mkvextract process. All running fine without session cookie. When I use session cookies or session store and mkvextract task is running, the whole responsiveness or my site is awfully long running. When I kill the mkvextract task, all running fine. Don't know why ! \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2140/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2139",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2139/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2139/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2139/events",
    "html_url": "https://github.com/expressjs/express/issues/2139",
    "id": 34292245,
    "node_id": "MDU6SXNzdWUzNDI5MjI0NQ==",
    "number": 2139,
    "title": "res.download cannot popup save dialog",
    "user": {
      "login": "EricCat",
      "id": 4900138,
      "node_id": "MDQ6VXNlcjQ5MDAxMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4900138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EricCat",
      "html_url": "https://github.com/EricCat",
      "followers_url": "https://api.github.com/users/EricCat/followers",
      "following_url": "https://api.github.com/users/EricCat/following{/other_user}",
      "gists_url": "https://api.github.com/users/EricCat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EricCat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EricCat/subscriptions",
      "organizations_url": "https://api.github.com/users/EricCat/orgs",
      "repos_url": "https://api.github.com/users/EricCat/repos",
      "events_url": "https://api.github.com/users/EricCat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EricCat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-05-26T08:52:45Z",
    "updated_at": "2016-10-16T14:30:54Z",
    "closed_at": "2014-05-26T15:34:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "when I use the Express(3.6.0)\n\n```\nres.download(path, file, function(err){\n      if (err) throw err;\n      console.log('popup download save dialog!');\n})\n\n```\n\nThe console.log() can display normal. but the browser can't popup download dialog.\nI think it must be response lack of somethings.\nIt is likely to be this kind of situation? \n`https://github.com/felixge/node-formidable/issues/169`\nWhere I can debug it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2139/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2138",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2138/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2138/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2138/events",
    "html_url": "https://github.com/expressjs/express/issues/2138",
    "id": 34274138,
    "node_id": "MDU6SXNzdWUzNDI3NDEzOA==",
    "number": 2138,
    "title": "app level param middlewares don't work for mounted routers",
    "user": {
      "login": "bithavoc",
      "id": 219289,
      "node_id": "MDQ6VXNlcjIxOTI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/219289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bithavoc",
      "html_url": "https://github.com/bithavoc",
      "followers_url": "https://api.github.com/users/bithavoc/followers",
      "following_url": "https://api.github.com/users/bithavoc/following{/other_user}",
      "gists_url": "https://api.github.com/users/bithavoc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bithavoc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bithavoc/subscriptions",
      "organizations_url": "https://api.github.com/users/bithavoc/orgs",
      "repos_url": "https://api.github.com/users/bithavoc/repos",
      "events_url": "https://api.github.com/users/bithavoc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bithavoc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-05-25T22:19:40Z",
    "updated_at": "2014-05-29T19:23:56Z",
    "closed_at": "2014-05-25T22:37:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need to subscribe a middleware in the root of the app but it doesn't seem to work unless I add it to the router that needs it.\n\nExample:\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\n/**\n * Parses :id and puts a message in req.id_message\n */\nfunction idMessageMiddleware(req, res, next, id) {\n    req.id_message = \"Param middleware executed\";\n    return next();\n}\napp.param('id', idMessageMiddleware); // this should work for all the mounted routers\n\n// this router explicitely uses middleware for the 'id' param and it works\nvar paramRouter = express.Router();\nparamRouter.param('id', idMessageMiddleware); // add the middleware\nparamRouter.get('/paramInRouter/:id', function(req, res) {\n  res.send(req.id_message + \"\\n\\r\");\n});\napp.use('/', paramRouter);\n\n// this router expects the middleware for the 'id' param in the root app to be executed but it doesn't\nvar noParamRouter = express.Router();\nnoParamRouter.get('/paramInRoot/:id', function(req, res) {\n  res.send(req.id_message + \"\\n\\r\");\n});\napp.use('/', noParamRouter);\n\nmodule.exports = app;\n\n```\n\nThe param middleware at `app`(root) level never gets executed:\n\n``` bash\ncurl localhost:3000/paramInRoot/aa\nundefined\n```\n\nHowever, it works when you explicitly add it to all the mounted routers:\n\n``` bash\ncurl localhost:3000/paramInRouter/aa\nParam middleware executed\n```\n\nIt makes sense to me, that if I add a param middleware in the root router, it should apply to all the nested routers as well.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2138/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2137",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2137/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2137/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2137/events",
    "html_url": "https://github.com/expressjs/express/issues/2137",
    "id": 34242898,
    "node_id": "MDU6SXNzdWUzNDI0Mjg5OA==",
    "number": 2137,
    "title": "app.param now support only one callback",
    "user": {
      "login": "btd",
      "id": 334851,
      "node_id": "MDQ6VXNlcjMzNDg1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/334851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btd",
      "html_url": "https://github.com/btd",
      "followers_url": "https://api.github.com/users/btd/followers",
      "following_url": "https://api.github.com/users/btd/following{/other_user}",
      "gists_url": "https://api.github.com/users/btd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btd/subscriptions",
      "organizations_url": "https://api.github.com/users/btd/orgs",
      "repos_url": "https://api.github.com/users/btd/repos",
      "events_url": "https://api.github.com/users/btd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-24T21:18:15Z",
    "updated_at": "2014-05-24T21:36:15Z",
    "closed_at": "2014-05-24T21:30:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In express 3.x it was possible to set middleware functions for app.param (https://github.com/visionmedia/express/blob/3.x/lib/application.js#L213)\n\nnow it is possible to add just one callback (https://github.com/visionmedia/express/blob/master/lib/router/index.js#L73).\n\nThat break my app after migration.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2137/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2136",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2136/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2136/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2136/events",
    "html_url": "https://github.com/expressjs/express/issues/2136",
    "id": 34237675,
    "node_id": "MDU6SXNzdWUzNDIzNzY3NQ==",
    "number": 2136,
    "title": "req bug",
    "user": {
      "login": "tiangooden",
      "id": 1486597,
      "node_id": "MDQ6VXNlcjE0ODY1OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1486597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tiangooden",
      "html_url": "https://github.com/tiangooden",
      "followers_url": "https://api.github.com/users/tiangooden/followers",
      "following_url": "https://api.github.com/users/tiangooden/following{/other_user}",
      "gists_url": "https://api.github.com/users/tiangooden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tiangooden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tiangooden/subscriptions",
      "organizations_url": "https://api.github.com/users/tiangooden/orgs",
      "repos_url": "https://api.github.com/users/tiangooden/repos",
      "events_url": "https://api.github.com/users/tiangooden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tiangooden/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-05-24T16:45:28Z",
    "updated_at": "2014-05-24T17:09:08Z",
    "closed_at": "2014-05-24T16:48:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "req.is('json') always returns null\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2136/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2135",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2135/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2135/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2135/events",
    "html_url": "https://github.com/expressjs/express/issues/2135",
    "id": 34205721,
    "node_id": "MDU6SXNzdWUzNDIwNTcyMQ==",
    "number": 2135,
    "title": "Lots of little modules is not better",
    "user": {
      "login": "willisblackburn",
      "id": 178697,
      "node_id": "MDQ6VXNlcjE3ODY5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willisblackburn",
      "html_url": "https://github.com/willisblackburn",
      "followers_url": "https://api.github.com/users/willisblackburn/followers",
      "following_url": "https://api.github.com/users/willisblackburn/following{/other_user}",
      "gists_url": "https://api.github.com/users/willisblackburn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willisblackburn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willisblackburn/subscriptions",
      "organizations_url": "https://api.github.com/users/willisblackburn/orgs",
      "repos_url": "https://api.github.com/users/willisblackburn/repos",
      "events_url": "https://api.github.com/users/willisblackburn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willisblackburn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-23T19:56:15Z",
    "updated_at": "2014-05-28T06:28:06Z",
    "closed_at": "2014-05-23T19:56:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Please take this issue as a vote against splitting Express up into lots of little modules and in favor of offering a complete, tested platform for web development.\n\nOf course applications should be able to use, or not use, features as they see fit.  But it's discouraging for developers who are new to the platform to discover that Express does very little \"out of the box\" and that the onus is on each developer to cobble together a unique web development platform out of this and that.\n\nFor example, what possible value is there to requiring developers to pull in a separate module just to parse the body of each request?  There was nothing preventing developers from replacing the built-in body parser with their own before.  But now all developers, even those who could have used the built-in body parser before, have to go find and install body-parser module.\n\nI had started to upgrade to 4.x but now I'm backing out.  There's no point.  Upgrading to 4.x just produces headaches without any offsetting benefit.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2135/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2134",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2134/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2134/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2134/events",
    "html_url": "https://github.com/expressjs/express/issues/2134",
    "id": 34172019,
    "node_id": "MDU6SXNzdWUzNDE3MjAxOQ==",
    "number": 2134,
    "title": "Allow `+` quantifier into path pattern",
    "user": {
      "login": "lazdmx",
      "id": 1035026,
      "node_id": "MDQ6VXNlcjEwMzUwMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1035026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lazdmx",
      "html_url": "https://github.com/lazdmx",
      "followers_url": "https://api.github.com/users/lazdmx/followers",
      "following_url": "https://api.github.com/users/lazdmx/following{/other_user}",
      "gists_url": "https://api.github.com/users/lazdmx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lazdmx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lazdmx/subscriptions",
      "organizations_url": "https://api.github.com/users/lazdmx/orgs",
      "repos_url": "https://api.github.com/users/lazdmx/repos",
      "events_url": "https://api.github.com/users/lazdmx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lazdmx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-05-23T12:54:10Z",
    "updated_at": "2014-06-12T00:37:36Z",
    "closed_at": "2014-05-23T14:49:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Idea is simple. Addressable resources in hierarchy may have url like `/a/b/c/....`. So I can `GET /a/b` or `GET /a` but cannot `GET /a/c`. To handle it I simply define path by regexp and it works well, but I think that `+` quantifier will help to save a couple of lines of code.\n\nThat is I would define path like this `/:id+` and if it applied to path `/a/b/c` then `req.params.id` should have  `[ 'a', 'b', 'c' ]`\n\nMy suggestion is to add `+` quantifier that allow to define \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2134/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2133",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2133/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2133/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2133/events",
    "html_url": "https://github.com/expressjs/express/issues/2133",
    "id": 34171020,
    "node_id": "MDU6SXNzdWUzNDE3MTAyMA==",
    "number": 2133,
    "title": "Routes execution order not honored",
    "user": {
      "login": "suprMax",
      "id": 789031,
      "node_id": "MDQ6VXNlcjc4OTAzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/789031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suprMax",
      "html_url": "https://github.com/suprMax",
      "followers_url": "https://api.github.com/users/suprMax/followers",
      "following_url": "https://api.github.com/users/suprMax/following{/other_user}",
      "gists_url": "https://api.github.com/users/suprMax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suprMax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suprMax/subscriptions",
      "organizations_url": "https://api.github.com/users/suprMax/orgs",
      "repos_url": "https://api.github.com/users/suprMax/repos",
      "events_url": "https://api.github.com/users/suprMax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suprMax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 30,
    "created_at": "2014-05-23T12:39:54Z",
    "updated_at": "2014-07-29T04:18:20Z",
    "closed_at": "2014-05-23T22:36:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\n\nI have an app where routes look like this (simplified)\n\n``` javascript\napp.get('/stuff', doStuff)\n# ... (more routes)\napp.get('*', catchAll)\n```\n\nAfter upgrading from 4.2.0 to 4.3.0 route '/stuff' stopped getting executed, though it is assigned first, it calls render and it should stop there. If you change the catch all route to '/*' it works again.\n\nI was wondering if it is an expected change (didn't notice in the History.md) and if it is going to change again. Currently it looks like defining a catch all basically kills your routing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2133/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2132",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2132/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2132/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2132/events",
    "html_url": "https://github.com/expressjs/express/issues/2132",
    "id": 34157313,
    "node_id": "MDU6SXNzdWUzNDE1NzMxMw==",
    "number": 2132,
    "title": "On some mobile phone, set cookie in header with expires does not work.",
    "user": {
      "login": "zack-lin",
      "id": 2063703,
      "node_id": "MDQ6VXNlcjIwNjM3MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2063703?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zack-lin",
      "html_url": "https://github.com/zack-lin",
      "followers_url": "https://api.github.com/users/zack-lin/followers",
      "following_url": "https://api.github.com/users/zack-lin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zack-lin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zack-lin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zack-lin/subscriptions",
      "organizations_url": "https://api.github.com/users/zack-lin/orgs",
      "repos_url": "https://api.github.com/users/zack-lin/repos",
      "events_url": "https://api.github.com/users/zack-lin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zack-lin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-23T09:06:12Z",
    "updated_at": "2014-05-23T14:41:19Z",
    "closed_at": "2014-05-23T14:41:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "On Samsung GT-I9300 used Android 4.3, we visited a page which  used\n\n```\nres.cookie('keyword', 'hello world', {maxAge: 18000, httpOnly: false});\n```\n\nWe used  `document.cookie` and couldn't get `keyword` value on mobile browser, ,like chrome, uc browser and other webkit browse, because this cookie hadn't set in cookie.\n\nand we changed the program, used\n\n```\nres.writeHead(200, {\n    'set-Cookie': 'keyword=hello world; Max-Age=18; Path=/; ',\n    ...\n```\n\nand get `keyword` value on mobile browser.\n\nIn order to make sure if the expires code influence this action, we use this code\n\n```\nres.writeHead(200, {\n    'set-Cookie': 'keyword=hello world; Max-Age=18; Path=/; Expires=Fri, 23 May 2014 02:47:27 GMT',\n    ...\n```\n\nIt also couldn't get `keyword` value on mobile browser.\n\nfind at https://github.com/visionmedia/express/blob/master/lib/response.js#L633\nIt set the expires.\n\nIt's not difficult to make a result that sometimes on some machine when set cookie with expires in http header, the mobile webkit browser may not set cookie at document.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2132/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2131",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2131/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2131/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2131/events",
    "html_url": "https://github.com/expressjs/express/issues/2131",
    "id": 34135110,
    "node_id": "MDU6SXNzdWUzNDEzNTExMA==",
    "number": 2131,
    "title": "Document app.route / app.mountpath",
    "user": {
      "login": "stuartpb",
      "id": 572196,
      "node_id": "MDQ6VXNlcjU3MjE5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/572196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stuartpb",
      "html_url": "https://github.com/stuartpb",
      "followers_url": "https://api.github.com/users/stuartpb/followers",
      "following_url": "https://api.github.com/users/stuartpb/following{/other_user}",
      "gists_url": "https://api.github.com/users/stuartpb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stuartpb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stuartpb/subscriptions",
      "organizations_url": "https://api.github.com/users/stuartpb/orgs",
      "repos_url": "https://api.github.com/users/stuartpb/repos",
      "events_url": "https://api.github.com/users/stuartpb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stuartpb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-23T00:53:42Z",
    "updated_at": "2014-05-23T00:57:42Z",
    "closed_at": "2014-05-23T00:55:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I only found out about this by reading https://github.com/visionmedia/express/wiki/Migrating-from-3.x-to-4.x - I'd been creating my own version of it on `req` based on slicing `originalUrl` at the length of `url`, which is so common _it's a top-rated suggestion on Stack Overflow_.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2131/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2130",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2130/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2130/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2130/events",
    "html_url": "https://github.com/expressjs/express/pull/2130",
    "id": 34059907,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYyMDYxMzM=",
    "number": 2130,
    "title": "variable of app.locals should be accessible in mounted app",
    "user": {
      "login": "xudejian",
      "id": 974259,
      "node_id": "MDQ6VXNlcjk3NDI1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/974259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xudejian",
      "html_url": "https://github.com/xudejian",
      "followers_url": "https://api.github.com/users/xudejian/followers",
      "following_url": "https://api.github.com/users/xudejian/following{/other_user}",
      "gists_url": "https://api.github.com/users/xudejian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xudejian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xudejian/subscriptions",
      "organizations_url": "https://api.github.com/users/xudejian/orgs",
      "repos_url": "https://api.github.com/users/xudejian/repos",
      "events_url": "https://api.github.com/users/xudejian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xudejian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-05-22T08:11:07Z",
    "updated_at": "2014-05-23T01:41:48Z",
    "closed_at": "2014-05-22T15:28:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2130",
      "html_url": "https://github.com/expressjs/express/pull/2130",
      "diff_url": "https://github.com/expressjs/express/pull/2130.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2130.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2130/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2129",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2129/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2129/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2129/events",
    "html_url": "https://github.com/expressjs/express/issues/2129",
    "id": 34053148,
    "node_id": "MDU6SXNzdWUzNDA1MzE0OA==",
    "number": 2129,
    "title": "Allow overriding etag function in application",
    "user": {
      "login": "ashi009",
      "id": 687367,
      "node_id": "MDQ6VXNlcjY4NzM2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/687367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashi009",
      "html_url": "https://github.com/ashi009",
      "followers_url": "https://api.github.com/users/ashi009/followers",
      "following_url": "https://api.github.com/users/ashi009/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashi009/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashi009/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashi009/subscriptions",
      "organizations_url": "https://api.github.com/users/ashi009/orgs",
      "repos_url": "https://api.github.com/users/ashi009/repos",
      "events_url": "https://api.github.com/users/ashi009/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashi009/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2014-05-22T05:52:29Z",
    "updated_at": "2015-06-01T14:08:18Z",
    "closed_at": "2014-05-31T02:17:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Current express calculates etag via `utils.etag()`, which is a private function, and could be overrided by:\n1. `res.set('etag', 'etag value')` before `res.send()`, or \n2. override by wrapping `res.send()` by setting `res.set('etag', 'etag value')` before forward arguments to the old `res.send()`.\n\nThese two method works, but all come with catches:\n1. require to call `res.set()` explicitly in every route, which is very inconvenient;\n2. new `res.send()` must handle all supported method signatures, to generate `etag` correctly based on modified [`body`](https://github.com/visionmedia/express/blob/master/lib/response.js#L92-126). Which comes with performance penalty and may lead to forward compatibility issue.\n\nSo a more clean solution is to expose `etag` on application and response level, which allows override by doing:\n\n``` js\napp.etag = function(buf) {\n  return '\"' + crc32c.calculate(buf) + '\"';\n};\n```\n\nor\n\n``` js\nfunction strongEtag(buf) {\n  return '\"' + crypto.createHash('sha1').update(buf).digest('hex') + '\"';\n}\n\nfunction strongEtagMiddleware(req, res, next) {\n  res.etag = strongEtag;\n  next();\n}\n\napp.get('/critical', strongEtagMiddleware, function(req, res) {\n  res.send('critical data');\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2129/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2128",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2128/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2128/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2128/events",
    "html_url": "https://github.com/expressjs/express/pull/2128",
    "id": 34048314,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYxOTk4MjE=",
    "number": 2128,
    "title": "Replace buffer-crc32 to improve performance",
    "user": {
      "login": "ashi009",
      "id": 687367,
      "node_id": "MDQ6VXNlcjY4NzM2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/687367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashi009",
      "html_url": "https://github.com/ashi009",
      "followers_url": "https://api.github.com/users/ashi009/followers",
      "following_url": "https://api.github.com/users/ashi009/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashi009/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashi009/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashi009/subscriptions",
      "organizations_url": "https://api.github.com/users/ashi009/orgs",
      "repos_url": "https://api.github.com/users/ashi009/repos",
      "events_url": "https://api.github.com/users/ashi009/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashi009/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2014-05-22T03:17:39Z",
    "updated_at": "2014-06-18T06:04:31Z",
    "closed_at": "2014-05-22T04:22:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2128",
      "html_url": "https://github.com/expressjs/express/pull/2128",
      "diff_url": "https://github.com/expressjs/express/pull/2128.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2128.patch",
      "merged_at": null
    },
    "body": "As buffer-crc32 is used to calculate etag for each response, it's performance is\ncritical for express.  buffer-crc32 is a Javascript CRC-32 implementation, which\ncould result in performance penalty due to the language it self.\n\nI propose to use fast-crc32c to replace current CRC-32 implementation, as it may\nuse hardware acceleration when possible, and will gracefully fall back to js\nimplementation of CRC-32C whichs result is consistent with hardware accelerated\nversion.\n\nHere is the benchmark result for different implementations\n\n| res size | fast-crc32c hw | fast-crc32c js | buffer-crc32 | change |\n| --: | --: | --: | --: | --- |\n| 128B | 7883.30 req/s | 8153.78 req/s | 8100.85 req/s | -2.7% / 0.7% |\n| 512B | 8099.78 req/s | 8112.71 req/s | 8022.18 req/s | 1.0% / 1.1% |\n| 1024B | 7942.10 req/s | 8127.20 req/s | 7801.90 req/s | 1.8% / 4.2% |\n| 2048B | 8030.10 req/s | 7837.05 req/s | 7613.33 req/s | 5.5% / 2.9% |\n| 4096B | 7554.95 req/s | 7283.39 req/s | 6911.11 req/s | 9.3% / 5.4% |\n| 16384 | 7205.52 req/s | 5623.53 req/s | 4860.64 req/s | 48.2% / 15.7% |\n| 65536 | 5203.17 req/s | 1925.98 req/s | 2126.77 req/s | 144.7% / -9.4% |\n\nand charted as\n![screen shot 2014-05-22 at 10 45 54 am](https://cloud.githubusercontent.com/assets/687367/3049402/1eee873c-e15e-11e3-9864-6efbdf5e55dc.png)\n\n[Scripts used for benchmark](https://gist.github.com/ashi009/294f125ade6f7a9e11cb)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2128/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2127",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2127/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2127/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2127/events",
    "html_url": "https://github.com/expressjs/express/issues/2127",
    "id": 34013380,
    "node_id": "MDU6SXNzdWUzNDAxMzM4MA==",
    "number": 2127,
    "title": "Named predefined params",
    "user": {
      "login": "rodrigok",
      "id": 234261,
      "node_id": "MDQ6VXNlcjIzNDI2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/234261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodrigok",
      "html_url": "https://github.com/rodrigok",
      "followers_url": "https://api.github.com/users/rodrigok/followers",
      "following_url": "https://api.github.com/users/rodrigok/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodrigok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodrigok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodrigok/subscriptions",
      "organizations_url": "https://api.github.com/users/rodrigok/orgs",
      "repos_url": "https://api.github.com/users/rodrigok/repos",
      "events_url": "https://api.github.com/users/rodrigok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodrigok/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-21T19:00:09Z",
    "updated_at": "2014-05-23T19:11:03Z",
    "closed_at": "2014-05-23T14:52:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using this code from doc\n\n``` coffeescript\napp.param (name, regexp) ->\n    if Object.prototype.toString.call(regexp) == '[object RegExp]'\n        return (req, res, next, val) ->\n            if captures = regexp.exec(String(val))\n                req.params[name] = captures[0]\n                next()\n            else\n                next('route')\n```\n\nI can use named params with regex match, but I can't use this param more than 1 time and generic names make the url a little messy.\n\nI can't do this\n\n``` coffeescript\napp.get '/purchase/:objectId/:objectId', (req, res, next) ->\n```\n\nThere are some way to name this params like below?\n\n``` coffeescript\napp.get '/purchase/:(objectId)place/:(objectId)user', (req, res, next) ->\n    console.log req.params.place, req.params.user\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2127/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2126",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2126/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2126/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2126/events",
    "html_url": "https://github.com/expressjs/express/issues/2126",
    "id": 33990878,
    "node_id": "MDU6SXNzdWUzMzk5MDg3OA==",
    "number": 2126,
    "title": "Most middleware (like json) is no longer bundled with Express and must be installed separately.",
    "user": {
      "login": "BedouiMouoifek",
      "id": 5154388,
      "node_id": "MDQ6VXNlcjUxNTQzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5154388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BedouiMouoifek",
      "html_url": "https://github.com/BedouiMouoifek",
      "followers_url": "https://api.github.com/users/BedouiMouoifek/followers",
      "following_url": "https://api.github.com/users/BedouiMouoifek/following{/other_user}",
      "gists_url": "https://api.github.com/users/BedouiMouoifek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BedouiMouoifek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BedouiMouoifek/subscriptions",
      "organizations_url": "https://api.github.com/users/BedouiMouoifek/orgs",
      "repos_url": "https://api.github.com/users/BedouiMouoifek/repos",
      "events_url": "https://api.github.com/users/BedouiMouoifek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BedouiMouoifek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-21T15:02:45Z",
    "updated_at": "2014-05-21T15:07:53Z",
    "closed_at": "2014-05-21T15:07:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "my node version is v0.10.4 ,express version is v 3.4.8\nI'm going to use Sharefest project .\nhttps://github.com/peer5/sharefest\nSo I have changed some code in order to limit error like :: \napp.configure('production', function(){\nwill be\nif ('production' == app.get('env')) {\nbut the problem is related to app.use(express.json()) and app.use(express.compress())\ndespite that i edit the package.json file by adding \n{\n\"json\": \"*\", \n}\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2126/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2125",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2125/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2125/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2125/events",
    "html_url": "https://github.com/expressjs/express/issues/2125",
    "id": 33986964,
    "node_id": "MDU6SXNzdWUzMzk4Njk2NA==",
    "number": 2125,
    "title": "Express stops taking requests after many hours",
    "user": {
      "login": "Nelrann",
      "id": 503587,
      "node_id": "MDQ6VXNlcjUwMzU4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/503587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nelrann",
      "html_url": "https://github.com/Nelrann",
      "followers_url": "https://api.github.com/users/Nelrann/followers",
      "following_url": "https://api.github.com/users/Nelrann/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nelrann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nelrann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nelrann/subscriptions",
      "organizations_url": "https://api.github.com/users/Nelrann/orgs",
      "repos_url": "https://api.github.com/users/Nelrann/repos",
      "events_url": "https://api.github.com/users/Nelrann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nelrann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-05-21T14:23:44Z",
    "updated_at": "2014-05-22T15:53:23Z",
    "closed_at": "2014-05-21T14:53:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello\n\nI have a problem with express, I have create a simple express server .\n\n```\nvar connections = new Connections();\n\nvar app = express(),\n    bodyParser = require('body-parser'),\n    morgan  = require('morgan'),\n    expressServer = http.createServer(app);\n\n    app.use(bodyParser());\n    app.use(morgan());\n\napp.get('/users', function(req, res) {\n    var route = req.query.route ? req.query.route : null;\n    var users;\n\n    if (route != null) {\n        users = connections.getUsers(route);\n    } else {\n        users = connections.getUsers();\n    }\n\n    res.json(users);\n});\n```\n\neverything works fine, but after many hours, it returns a blank page, express stops taking requests.\n\nBut I have no errors in the logs and server does not stop ... \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2125/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2124",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2124/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2124/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2124/events",
    "html_url": "https://github.com/expressjs/express/issues/2124",
    "id": 33883982,
    "node_id": "MDU6SXNzdWUzMzg4Mzk4Mg==",
    "number": 2124,
    "title": "Persistent changes to route",
    "user": {
      "login": "gabzim",
      "id": 804281,
      "node_id": "MDQ6VXNlcjgwNDI4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/804281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gabzim",
      "html_url": "https://github.com/gabzim",
      "followers_url": "https://api.github.com/users/gabzim/followers",
      "following_url": "https://api.github.com/users/gabzim/following{/other_user}",
      "gists_url": "https://api.github.com/users/gabzim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gabzim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gabzim/subscriptions",
      "organizations_url": "https://api.github.com/users/gabzim/orgs",
      "repos_url": "https://api.github.com/users/gabzim/repos",
      "events_url": "https://api.github.com/users/gabzim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gabzim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-05-20T12:40:40Z",
    "updated_at": "2014-05-20T13:24:40Z",
    "closed_at": "2014-05-20T12:57:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a route like this:\n\n``` javascript\napp.all('/api/users/:userId/*', users.meToUserId);\n```\n\nThis line is meant to take the :userId and check if it's \"me\" (/users/me), and replace \"me\" with req.user._id.. That way, all the middleware that comes after it doesn't really have to care about the param being \"me\". I tried to achieve this by doing \n\n``` javascript\nreq.params.userId = req.user._id\n```\n\nThis works fine for that specific line, but if below that I have another route, say:\n\n``` javascript\napp.route('/api/users/:userId/posts')\n   .get(posts.findAllByUser);\n```\n\nThe actions that take place for route: /users/me/posts are:\n1. First route matches, executes users.meToUserId.\n2. \"Me\" becomes \"81741faeef230182\" (for instance).\n3. Second route matches, params object is recreated.\n4. posts.findAllByUser is called with :userId being \"me\"\n\nIs there any way to persist the changes I made to the param object throughout all routes? I realize that I could store the param in something like req.userId, but simply replacing the param value is more reusable and clean. one day if I change my routes I don't really have to worry about where the \"req.userId\" is coming from.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2124/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2123",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2123/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2123/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2123/events",
    "html_url": "https://github.com/expressjs/express/issues/2123",
    "id": 33790169,
    "node_id": "MDU6SXNzdWUzMzc5MDE2OQ==",
    "number": 2123,
    "title": "Why \"#!/usr/bin/env node\" in www?",
    "user": {
      "login": "victorwoo",
      "id": 173351,
      "node_id": "MDQ6VXNlcjE3MzM1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/173351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/victorwoo",
      "html_url": "https://github.com/victorwoo",
      "followers_url": "https://api.github.com/users/victorwoo/followers",
      "following_url": "https://api.github.com/users/victorwoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/victorwoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/victorwoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/victorwoo/subscriptions",
      "organizations_url": "https://api.github.com/users/victorwoo/orgs",
      "repos_url": "https://api.github.com/users/victorwoo/repos",
      "events_url": "https://api.github.com/users/victorwoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/victorwoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-19T11:23:49Z",
    "updated_at": "2014-05-19T13:22:11Z",
    "closed_at": "2014-05-19T12:54:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Why the default template of express 4 conatins \"#!/usr/bin/env node\" in the head of ./bin/www?\n\nIt couldn't be recognized by JSLint, etc,.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2123/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2122",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2122/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2122/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2122/events",
    "html_url": "https://github.com/expressjs/express/issues/2122",
    "id": 33764127,
    "node_id": "MDU6SXNzdWUzMzc2NDEyNw==",
    "number": 2122,
    "title": "twitter account",
    "user": {
      "login": "benatkin",
      "id": 4126,
      "node_id": "MDQ6VXNlcjQxMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benatkin",
      "html_url": "https://github.com/benatkin",
      "followers_url": "https://api.github.com/users/benatkin/followers",
      "following_url": "https://api.github.com/users/benatkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/benatkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benatkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benatkin/subscriptions",
      "organizations_url": "https://api.github.com/users/benatkin/orgs",
      "repos_url": "https://api.github.com/users/benatkin/repos",
      "events_url": "https://api.github.com/users/benatkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benatkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-05-18T23:54:28Z",
    "updated_at": "2014-06-23T05:43:41Z",
    "closed_at": "2014-06-23T05:43:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I wanted to mention express on twitter and found [@expressjs](https://twitter.com/expressjs) to be an account with mostly spam. It appears not to be owned by anyone on the express team, yet they mention express.js in their latest post.\n\nTwitter takes impersonation pretty seriously. They require someone who owns the mark to report it, though. If one of the leaders (@visionmedia and @defunctzombie) wants to secure this, you can start the process by [going to the account](https://twitter.com/expressjs), clicking the gear, clicking \"Block or Report\", and selecting \"This user is abusive\".\n\nThe account could just tweet news, and have a link to the site. A mention is often the best way to link to something on twitter, it takes two clicks to get to the home page of a mention, and only takes the number of characters of the name including the @ symbol, rather than 20 for a URL.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2122/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2121",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2121/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2121/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2121/events",
    "html_url": "https://github.com/expressjs/express/issues/2121",
    "id": 33753161,
    "node_id": "MDU6SXNzdWUzMzc1MzE2MQ==",
    "number": 2121,
    "title": "Repeated call parameters and context changes id",
    "user": {
      "login": "nook-scheel",
      "id": 824669,
      "node_id": "MDQ6VXNlcjgyNDY2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nook-scheel",
      "html_url": "https://github.com/nook-scheel",
      "followers_url": "https://api.github.com/users/nook-scheel/followers",
      "following_url": "https://api.github.com/users/nook-scheel/following{/other_user}",
      "gists_url": "https://api.github.com/users/nook-scheel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nook-scheel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nook-scheel/subscriptions",
      "organizations_url": "https://api.github.com/users/nook-scheel/orgs",
      "repos_url": "https://api.github.com/users/nook-scheel/repos",
      "events_url": "https://api.github.com/users/nook-scheel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nook-scheel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/10",
      "html_url": "https://github.com/expressjs/express/milestone/10",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/10/labels",
      "id": 661448,
      "node_id": "MDk6TWlsZXN0b25lNjYxNDQ4",
      "number": 10,
      "title": "4.3.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 4,
      "state": "closed",
      "created_at": "2014-05-16T19:07:43Z",
      "updated_at": "2014-05-23T22:37:20Z",
      "due_on": null,
      "closed_at": "2014-05-23T22:37:20Z"
    },
    "comments": 12,
    "created_at": "2014-05-18T14:57:48Z",
    "updated_at": "2014-05-19T12:55:21Z",
    "closed_at": "2014-05-18T20:21:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "test.js\n\n``` JavaScript\nvar express = require('express')\n  , Router = express.Router\n  , assert = require('assert')\n  , pending = require('./support/pending')\n\ndescribe('Router', function () {\n  it('should not call a repeat', function (done) {\n    done = pending(3, done);\n\n    var users = Router()\n      , messages = Router()\n      , comments = Router();\n\n    comments.get('/comments', function (req, res, next) {\n      res.end(req.user);\n    });\n\n    users.param('_user', function (req, res, next, _user) {\n      setTimeout(function () {\n        req.user = _user;\n        next();\n      }, 0);\n    });\n\n    users\n      .use('/users/:_user/', messages)\n      .use('/users/:_user/', comments);\n\n    users.handle({ url: '/users/1/comments', method: 'GET' }, {\n      end: function (user) {\n        return assert.equal(user, 1);\n      }\n    }, done);\n    users.handle({ url: '/users/2/comments', method: 'GET' }, {\n      end: function (user) {\n        return assert.equal(user, 2);\n      }  \n    }, done);\n    users.handle({ url: '/users/3/comments', method: 'GET' }, {\n      end: function (user) {\n        return assert.equal(user, 3);\n      }  \n    }, done);\n  })\n})\n```\n\npending.js\n\n``` JavaScript\nmodule.exports = function(n, fn){\n  return function(err){\n    if (err) return fn(err);\n    --n || fn();\n  }\n};\n```\n1. When you use nested routers params is called as many times as the same routers and embedded.\n2. When done several synchronous requests and parameters used in the output of the flow is lost context parameter and all parameters in requests are the last parameter.\n\nThe main role is played here `setTimeout` in param and multi use nested routers.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2121/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2120",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2120/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2120/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2120/events",
    "html_url": "https://github.com/expressjs/express/pull/2120",
    "id": 33723243,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwMTcxMjg=",
    "number": 2120,
    "title": "Redirect Fallback",
    "user": {
      "login": "pemrouz",
      "id": 2184177,
      "node_id": "MDQ6VXNlcjIxODQxNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2184177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pemrouz",
      "html_url": "https://github.com/pemrouz",
      "followers_url": "https://api.github.com/users/pemrouz/followers",
      "following_url": "https://api.github.com/users/pemrouz/following{/other_user}",
      "gists_url": "https://api.github.com/users/pemrouz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pemrouz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pemrouz/subscriptions",
      "organizations_url": "https://api.github.com/users/pemrouz/orgs",
      "repos_url": "https://api.github.com/users/pemrouz/repos",
      "events_url": "https://api.github.com/users/pemrouz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pemrouz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2014-05-17T04:33:40Z",
    "updated_at": "2014-06-25T15:56:16Z",
    "closed_at": "2014-05-17T15:09:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2120",
      "html_url": "https://github.com/expressjs/express/pull/2120",
      "diff_url": "https://github.com/expressjs/express/pull/2120.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2120.patch",
      "merged_at": null
    },
    "body": "When you use `res.redirect()` the browser is automatically redirected to the new page. But in cases where there previously was a `res.write()` call, the redirect fails and you see [this message](https://github.com/visionmedia/express/blob/master/lib/response.js#L713) instead:\n\n``` javascript\n'<p>' + statusCodes[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>';\n```\n\nWould it be better to prepend to that something along the lines of the below so the redirect still works?:\n\n``` javascript\n'<script>window.location=\"'+url+'\"</script>'\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2120/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2119",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2119/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2119/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2119/events",
    "html_url": "https://github.com/expressjs/express/issues/2119",
    "id": 33707766,
    "node_id": "MDU6SXNzdWUzMzcwNzc2Ng==",
    "number": 2119,
    "title": "Explain req.body in doc",
    "user": {
      "login": "Vadorequest",
      "id": 3807458,
      "node_id": "MDQ6VXNlcjM4MDc0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3807458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Vadorequest",
      "html_url": "https://github.com/Vadorequest",
      "followers_url": "https://api.github.com/users/Vadorequest/followers",
      "following_url": "https://api.github.com/users/Vadorequest/following{/other_user}",
      "gists_url": "https://api.github.com/users/Vadorequest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Vadorequest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Vadorequest/subscriptions",
      "organizations_url": "https://api.github.com/users/Vadorequest/orgs",
      "repos_url": "https://api.github.com/users/Vadorequest/repos",
      "events_url": "https://api.github.com/users/Vadorequest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Vadorequest/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-05-16T20:42:05Z",
    "updated_at": "2014-05-16T21:58:15Z",
    "closed_at": "2014-05-16T20:47:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "http://stackoverflow.com/questions/23703867/how-log-express-js-post-parameters/23703896?noredirect=1#23703896\n\nI used some time to find out how get all parameters.\nShouldn't we add some indication in the API doc, just by saying that a proper solution to get all parameters send by GET or POST are available through req.body? (And bodyparser)\n\nI think it could save some time, because it's not obvious at all.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2119/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2118",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2118/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2118/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2118/events",
    "html_url": "https://github.com/expressjs/express/issues/2118",
    "id": 33602511,
    "node_id": "MDU6SXNzdWUzMzYwMjUxMQ==",
    "number": 2118,
    "title": "Doc error (req.route.params)",
    "user": {
      "login": "RasterBurn",
      "id": 184899,
      "node_id": "MDQ6VXNlcjE4NDg5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/184899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RasterBurn",
      "html_url": "https://github.com/RasterBurn",
      "followers_url": "https://api.github.com/users/RasterBurn/followers",
      "following_url": "https://api.github.com/users/RasterBurn/following{/other_user}",
      "gists_url": "https://api.github.com/users/RasterBurn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RasterBurn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RasterBurn/subscriptions",
      "organizations_url": "https://api.github.com/users/RasterBurn/orgs",
      "repos_url": "https://api.github.com/users/RasterBurn/repos",
      "events_url": "https://api.github.com/users/RasterBurn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RasterBurn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-15T16:33:22Z",
    "updated_at": "2014-05-15T22:19:57Z",
    "closed_at": "2014-05-15T16:54:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "http://expressjs.com/4x/api.html#req.route\n\nI had some legacy code that broke upon migration from express 3 to 4.  It was using `req.route.params`, but upon upgrade to express 4, the `params` attribute was gone.  The above linked docs has `req.route.params` in the sample output.  Should that be removed?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2118/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2116",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2116/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2116/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2116/events",
    "html_url": "https://github.com/expressjs/express/issues/2116",
    "id": 33578975,
    "node_id": "MDU6SXNzdWUzMzU3ODk3NQ==",
    "number": 2116,
    "title": "wrong method calling on HEAD request",
    "user": {
      "login": "Arsey",
      "id": 1629335,
      "node_id": "MDQ6VXNlcjE2MjkzMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Arsey",
      "html_url": "https://github.com/Arsey",
      "followers_url": "https://api.github.com/users/Arsey/followers",
      "following_url": "https://api.github.com/users/Arsey/following{/other_user}",
      "gists_url": "https://api.github.com/users/Arsey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Arsey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Arsey/subscriptions",
      "organizations_url": "https://api.github.com/users/Arsey/orgs",
      "repos_url": "https://api.github.com/users/Arsey/repos",
      "events_url": "https://api.github.com/users/Arsey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Arsey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2014-05-15T12:04:22Z",
    "updated_at": "2014-06-14T06:18:22Z",
    "closed_at": "2014-06-14T06:18:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi! \ni'm trying to send the HEAD request, but express calls app.get() method instead app.head(). The issue appeared after upgraded from veriosn 3 to version 4.2. Before the upgrade it worked fine.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2116/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2115",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2115/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2115/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2115/events",
    "html_url": "https://github.com/expressjs/express/issues/2115",
    "id": 33574352,
    "node_id": "MDU6SXNzdWUzMzU3NDM1Mg==",
    "number": 2115,
    "title": "app.use() usage clarification",
    "user": {
      "login": "d-adamkiewicz",
      "id": 412643,
      "node_id": "MDQ6VXNlcjQxMjY0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/412643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d-adamkiewicz",
      "html_url": "https://github.com/d-adamkiewicz",
      "followers_url": "https://api.github.com/users/d-adamkiewicz/followers",
      "following_url": "https://api.github.com/users/d-adamkiewicz/following{/other_user}",
      "gists_url": "https://api.github.com/users/d-adamkiewicz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d-adamkiewicz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d-adamkiewicz/subscriptions",
      "organizations_url": "https://api.github.com/users/d-adamkiewicz/orgs",
      "repos_url": "https://api.github.com/users/d-adamkiewicz/repos",
      "events_url": "https://api.github.com/users/d-adamkiewicz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d-adamkiewicz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-15T10:46:09Z",
    "updated_at": "2014-05-15T13:46:21Z",
    "closed_at": "2014-05-15T13:46:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just noticed - to restrict middleware to be called on \n'/' use '//' as route argument ie app.use('//', fn)\neg http://some_domain:3003/ but not http://some_domain:3003/test\n\n'/*' use '/' as route argument or omit it ie app.use(fn)\neg http://some_domain:3003/ but also http://some_domain:3003/test etc etc\n\nIs this correct? Is this intended?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2115/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2114",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2114/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2114/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2114/events",
    "html_url": "https://github.com/expressjs/express/issues/2114",
    "id": 33503460,
    "node_id": "MDU6SXNzdWUzMzUwMzQ2MA==",
    "number": 2114,
    "title": "Programmatic inclusion of mixins?",
    "user": {
      "login": "braco",
      "id": 2449172,
      "node_id": "MDQ6VXNlcjI0NDkxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2449172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/braco",
      "html_url": "https://github.com/braco",
      "followers_url": "https://api.github.com/users/braco/followers",
      "following_url": "https://api.github.com/users/braco/following{/other_user}",
      "gists_url": "https://api.github.com/users/braco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/braco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/braco/subscriptions",
      "organizations_url": "https://api.github.com/users/braco/orgs",
      "repos_url": "https://api.github.com/users/braco/repos",
      "events_url": "https://api.github.com/users/braco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/braco/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-05-14T15:31:37Z",
    "updated_at": "2014-05-14T15:40:16Z",
    "closed_at": "2014-05-14T15:39:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "-- oops, Jade\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2114/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2113",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2113/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2113/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2113/events",
    "html_url": "https://github.com/expressjs/express/issues/2113",
    "id": 33430420,
    "node_id": "MDU6SXNzdWUzMzQzMDQyMA==",
    "number": 2113,
    "title": "Standardization of VERB method signatures (GET, etc)",
    "user": {
      "login": "adamterlson",
      "id": 2498418,
      "node_id": "MDQ6VXNlcjI0OTg0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2498418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamterlson",
      "html_url": "https://github.com/adamterlson",
      "followers_url": "https://api.github.com/users/adamterlson/followers",
      "following_url": "https://api.github.com/users/adamterlson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamterlson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamterlson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamterlson/subscriptions",
      "organizations_url": "https://api.github.com/users/adamterlson/orgs",
      "repos_url": "https://api.github.com/users/adamterlson/repos",
      "events_url": "https://api.github.com/users/adamterlson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamterlson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-05-13T19:26:07Z",
    "updated_at": "2014-05-30T20:29:06Z",
    "closed_at": "2014-05-13T19:39:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I found that depending on whether `.get()` is used on app, route or on the router, accepting a path string parameter is not consistent.\n\n``` javascript\n// App\n\napp.get('/my/path', handler); // Works\napp.get(handler); // Works UPDATE: Doesn't actually work.  Whoops.\n\n// Router\n\nvar router = express.Router();\n\nrouter.get('/my/path', handler); // Works\nrouter.get(handler); // Does not work\nrouter.get('', handler); // Works, oddly.  Means the former could be made to work?\n\n// Route\n\nrouter.route('/my')\n    .get('/path', handler); // Does not work\nrouter.route('/my')\n    .get(handler); // Works\n```\n\nIt'd be nice if `get` and the other verb methods had the same signature and worked the same so matter the context in which they are called.  A use case I was trying to make work using `route`:\n\n``` javascript\nrouter.route('/rest/entity')\n    .get(list)\n    .get('/:id', read)\n    .post(create)\n    .put('/:id', update)\n    .del('/:id', delete);\n```\n\nThe work-around that presently exists:\n\n``` javascript\nrouter\n  .get('/', this.list)\n  .get('/:id', this.read)\n  .post('/', this.create)\n  .put('/:id', this.update)\n  .del('/:id', this.del);\n\napp.use('/rest/entity', router);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2113/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2112",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2112/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2112/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2112/events",
    "html_url": "https://github.com/expressjs/express/issues/2112",
    "id": 33364721,
    "node_id": "MDU6SXNzdWUzMzM2NDcyMQ==",
    "number": 2112,
    "title": "about req.next in route",
    "user": {
      "login": "undoZen",
      "id": 2306358,
      "node_id": "MDQ6VXNlcjIzMDYzNTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2306358?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/undoZen",
      "html_url": "https://github.com/undoZen",
      "followers_url": "https://api.github.com/users/undoZen/followers",
      "following_url": "https://api.github.com/users/undoZen/following{/other_user}",
      "gists_url": "https://api.github.com/users/undoZen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/undoZen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/undoZen/subscriptions",
      "organizations_url": "https://api.github.com/users/undoZen/orgs",
      "repos_url": "https://api.github.com/users/undoZen/repos",
      "events_url": "https://api.github.com/users/undoZen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/undoZen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-13T02:41:23Z",
    "updated_at": "2014-05-13T03:08:35Z",
    "closed_at": "2014-05-13T02:43:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![screen shot 2014-05-13 at 10 39 32 am](https://cloud.githubusercontent.com/assets/2306358/2952913/d6031b18-da47-11e3-9b68-ed1f8330716f.png)\n\nIs this all right? I expect it print all true.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2112/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2111",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2111/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2111/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2111/events",
    "html_url": "https://github.com/expressjs/express/issues/2111",
    "id": 33336131,
    "node_id": "MDU6SXNzdWUzMzMzNjEzMQ==",
    "number": 2111,
    "title": "Minor grammar mistake in app.configure method, 3.x docs",
    "user": {
      "login": "omkarv",
      "id": 4481885,
      "node_id": "MDQ6VXNlcjQ0ODE4ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4481885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omkarv",
      "html_url": "https://github.com/omkarv",
      "followers_url": "https://api.github.com/users/omkarv/followers",
      "following_url": "https://api.github.com/users/omkarv/following{/other_user}",
      "gists_url": "https://api.github.com/users/omkarv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omkarv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omkarv/subscriptions",
      "organizations_url": "https://api.github.com/users/omkarv/orgs",
      "repos_url": "https://api.github.com/users/omkarv/repos",
      "events_url": "https://api.github.com/users/omkarv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omkarv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-12T18:58:07Z",
    "updated_at": "2014-05-12T19:36:33Z",
    "closed_at": "2014-05-12T19:36:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is a minor grammar mistake in the app.configure method in the 3.x documentation.  \"This method remains for legacy reason\" should be corrected to \"This method remains for legacy reasons\".\n\nThe attached screenshot shows the minor Grammar mistake.\n\n![screen shot 2014-05-12 at 11 53 20](https://cloud.githubusercontent.com/assets/4481885/2948776/d110d5d2-da06-11e3-99ce-061a36be377d.png)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2111/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2110",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2110/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2110/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2110/events",
    "html_url": "https://github.com/expressjs/express/issues/2110",
    "id": 33238729,
    "node_id": "MDU6SXNzdWUzMzIzODcyOQ==",
    "number": 2110,
    "title": "app.set() bug",
    "user": {
      "login": "KyivJunta",
      "id": 1730837,
      "node_id": "MDQ6VXNlcjE3MzA4Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1730837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KyivJunta",
      "html_url": "https://github.com/KyivJunta",
      "followers_url": "https://api.github.com/users/KyivJunta/followers",
      "following_url": "https://api.github.com/users/KyivJunta/following{/other_user}",
      "gists_url": "https://api.github.com/users/KyivJunta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KyivJunta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KyivJunta/subscriptions",
      "organizations_url": "https://api.github.com/users/KyivJunta/orgs",
      "repos_url": "https://api.github.com/users/KyivJunta/repos",
      "events_url": "https://api.github.com/users/KyivJunta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KyivJunta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-05-10T14:22:17Z",
    "updated_at": "2014-05-10T14:27:28Z",
    "closed_at": "2014-05-10T14:27:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In my code I have something like this:\n\n``` javascript\n// set app name for later use\napp.set('name', 'web-' + config.ID + '.example.com')\n```\n\nand later in that file:\n\n``` javascript\n// mounting modules\n['landing', 'errors'].forEach(function(moduleName) {\n  try {\n    require('modules/' + moduleName + '/routes')(app);\n  } catch(err) {\n    log(err.message);\n  }\n});\n```\n\nwhich trowing:\n\n```\n/Users/alekmych/Documents/example.com/web/app/server.js:24\n['landing', 'errors'].forEach(function(moduleName) {\n                      ^\nTypeError: Cannot call method 'forEach' of undefined\n    at Object.<anonymous> (/Users/alekmych/Documents/example.com/web/app/server.js:24:23)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/alekmych/Documents/example.com/web/index.js:1:63)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n```\n\nbut if firstly Ill get somehow that property, e.g.:\n\n``` javascript\napp.get('name')\n```\n\nits fine...\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2110/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2109",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2109/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2109/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2109/events",
    "html_url": "https://github.com/expressjs/express/issues/2109",
    "id": 33189107,
    "node_id": "MDU6SXNzdWUzMzE4OTEwNw==",
    "number": 2109,
    "title": "Documentation refers to \"res.headerSent\"",
    "user": {
      "login": "AMKohn",
      "id": 2001842,
      "node_id": "MDQ6VXNlcjIwMDE4NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2001842?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AMKohn",
      "html_url": "https://github.com/AMKohn",
      "followers_url": "https://api.github.com/users/AMKohn/followers",
      "following_url": "https://api.github.com/users/AMKohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/AMKohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AMKohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AMKohn/subscriptions",
      "organizations_url": "https://api.github.com/users/AMKohn/orgs",
      "repos_url": "https://api.github.com/users/AMKohn/repos",
      "events_url": "https://api.github.com/users/AMKohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AMKohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-05-09T16:54:35Z",
    "updated_at": "2014-06-30T21:06:34Z",
    "closed_at": "2014-05-09T17:48:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The Express documentation ([here](http://expressjs.com/4x/api.html#res.download)) incorrectly says in a comment \"so check res.headerSent\".\n\nThat's the only mention of `res.headersSent` in the documentation, so I used it as `res.headerSent` throughout my app, which of course threw errors.\n\nThank you for all of the work you've put into Express!\n\nAvi\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2109/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2108",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2108/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2108/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2108/events",
    "html_url": "https://github.com/expressjs/express/issues/2108",
    "id": 33152020,
    "node_id": "MDU6SXNzdWUzMzE1MjAyMA==",
    "number": 2108,
    "title": "4.x vs 3.x performance benchmarks?",
    "user": {
      "login": "mgcrea",
      "id": 108273,
      "node_id": "MDQ6VXNlcjEwODI3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/108273?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgcrea",
      "html_url": "https://github.com/mgcrea",
      "followers_url": "https://api.github.com/users/mgcrea/followers",
      "following_url": "https://api.github.com/users/mgcrea/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgcrea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgcrea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgcrea/subscriptions",
      "organizations_url": "https://api.github.com/users/mgcrea/orgs",
      "repos_url": "https://api.github.com/users/mgcrea/repos",
      "events_url": "https://api.github.com/users/mgcrea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgcrea/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 95025063,
        "node_id": "MDU6TGFiZWw5NTAyNTA2Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-05-09T07:46:35Z",
    "updated_at": "2019-01-14T19:06:04Z",
    "closed_at": "2019-01-14T19:06:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Looks like there might be a (small) latency hit from switching to v3.x to v4.x around 100req/s:\n\n```\n$ bin/flod -c 100..400 -n 10000 examples/express\\@3.2.4/index.js examples/express\\@4.1.2/index.js \nThis is Flod, version 0.2.2\nCopyright 2013 Walmart, http://github.com/spumko/flod\n\nBenchmarking (hold on)...\n\nServer         Requests/sec  Latency (ms)     Memory    Load       \n-------------  ------------  ---------------  --------  -----------\nexpress@3.2.4  100           43.04 ± 8.39     64M ± 7M  1.89 ± 0.23\nexpress@3.2.4  200           111.72 ± 25.42   65M ± 7M  1.62 ± 0.14\nexpress@3.2.4  300           222.78 ± 40.36   68M ± 7M  1.87 ± 0.15\nexpress@3.2.4  400           485.58 ± 120.50  67M ± 7M  2.21 ± 0.32\nexpress@4.1.2  100           61.01 ± 43.82    66M ± 6M  1.92 ± 0.37\nexpress@4.1.2  200           109.92 ± 19.00   67M ± 7M  1.79 ± 0.09\nexpress@4.1.2  300           241.53 ± 54.77   67M ± 7M  1.82 ± 0.12\nexpress@4.1.2  400           458.87 ± 187.46  68M ± 7M  2.19 ± 0.22\n```\n\nWould be nice to publish performance benchmark along every minor release. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2108/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2107",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2107/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2107/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2107/events",
    "html_url": "https://github.com/expressjs/express/pull/2107",
    "id": 33131018,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2Nzg0MzE=",
    "number": 2107,
    "title": "3.x fix default order of json jsonp",
    "user": {
      "login": "pconerly",
      "id": 469808,
      "node_id": "MDQ6VXNlcjQ2OTgwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pconerly",
      "html_url": "https://github.com/pconerly",
      "followers_url": "https://api.github.com/users/pconerly/followers",
      "following_url": "https://api.github.com/users/pconerly/following{/other_user}",
      "gists_url": "https://api.github.com/users/pconerly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pconerly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pconerly/subscriptions",
      "organizations_url": "https://api.github.com/users/pconerly/orgs",
      "repos_url": "https://api.github.com/users/pconerly/repos",
      "events_url": "https://api.github.com/users/pconerly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pconerly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025092,
        "node_id": "MDU6TGFiZWw5NTAyNTA5Mg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-05-08T22:47:20Z",
    "updated_at": "2014-06-12T06:04:21Z",
    "closed_at": "2014-05-09T21:35:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2107",
      "html_url": "https://github.com/expressjs/express/pull/2107",
      "diff_url": "https://github.com/expressjs/express/pull/2107.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2107.patch",
      "merged_at": null
    },
    "body": "3.x version of the pull request here: https://github.com/visionmedia/express/pull/2106   Let's keep discussion in #2106\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2107/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2106",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2106/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2106/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2106/events",
    "html_url": "https://github.com/expressjs/express/pull/2106",
    "id": 33130585,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2NzgxNDM=",
    "number": 2106,
    "title": "Maintain json|jsonp(status,object) as the default order when both args are numbers",
    "user": {
      "login": "pconerly",
      "id": 469808,
      "node_id": "MDQ6VXNlcjQ2OTgwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/469808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pconerly",
      "html_url": "https://github.com/pconerly",
      "followers_url": "https://api.github.com/users/pconerly/followers",
      "following_url": "https://api.github.com/users/pconerly/following{/other_user}",
      "gists_url": "https://api.github.com/users/pconerly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pconerly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pconerly/subscriptions",
      "organizations_url": "https://api.github.com/users/pconerly/orgs",
      "repos_url": "https://api.github.com/users/pconerly/repos",
      "events_url": "https://api.github.com/users/pconerly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pconerly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025092,
        "node_id": "MDU6TGFiZWw5NTAyNTA5Mg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/9",
      "html_url": "https://github.com/expressjs/express/milestone/9",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/9/labels",
      "id": 648502,
      "node_id": "MDk6TWlsZXN0b25lNjQ4NTAy",
      "number": 9,
      "title": "4.2.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 5,
      "state": "closed",
      "created_at": "2014-05-04T17:42:39Z",
      "updated_at": "2014-05-13T03:25:41Z",
      "due_on": null,
      "closed_at": "2014-05-13T03:25:41Z"
    },
    "comments": 5,
    "created_at": "2014-05-08T22:40:02Z",
    "updated_at": "2014-06-12T06:04:20Z",
    "closed_at": "2014-05-09T21:35:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2106",
      "html_url": "https://github.com/expressjs/express/pull/2106",
      "diff_url": "https://github.com/expressjs/express/pull/2106.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2106.patch",
      "merged_at": null
    },
    "body": "I added tests and changed the logic.\n\nHow would I get this added to the next 3.x release?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2106/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2105",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2105/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2105/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2105/events",
    "html_url": "https://github.com/expressjs/express/issues/2105",
    "id": 33129732,
    "node_id": "MDU6SXNzdWUzMzEyOTczMg==",
    "number": 2105,
    "title": "layouts and partials in 4.x?",
    "user": {
      "login": "kevinSuttle",
      "id": 95672,
      "node_id": "MDQ6VXNlcjk1Njcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/95672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinSuttle",
      "html_url": "https://github.com/kevinSuttle",
      "followers_url": "https://api.github.com/users/kevinSuttle/followers",
      "following_url": "https://api.github.com/users/kevinSuttle/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinSuttle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinSuttle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinSuttle/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinSuttle/orgs",
      "repos_url": "https://api.github.com/users/kevinSuttle/repos",
      "events_url": "https://api.github.com/users/kevinSuttle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinSuttle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-05-08T22:26:43Z",
    "updated_at": "2014-05-16T20:38:22Z",
    "closed_at": "2014-05-08T22:48:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Wondering what happened to layouts and partials in 4.x. Was this considered middleware, and thus was removed? (Forgive my ignorance. I'm new to Express). \n\nJust wondering if I should be using EJS for layouts and partials, or if it's still built in somewhere. Seems to be removed from the 4.x docs.\n\nTo be clear, this is what I mean by layouts: http://middlemanapp.com/basics/templates/#layouts\nAnd this is what I mean by partials: http://middlemanapp.com/basics/templates/#partials\n\nOf interest: http://stackoverflow.com/questions/8790891/layouts-in-expressjs\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2105/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2104",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2104/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2104/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2104/events",
    "html_url": "https://github.com/expressjs/express/issues/2104",
    "id": 33103965,
    "node_id": "MDU6SXNzdWUzMzEwMzk2NQ==",
    "number": 2104,
    "title": "res.jsonp throws when callback is object",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-05-08T17:17:57Z",
    "updated_at": "2014-05-08T18:46:48Z",
    "closed_at": "2014-05-08T18:46:48Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The following will cause an error:\n\n``` javascript\n// curl http://localhost:3000/ping?callback[a]=something\napp.get('/ping',function(req,res){\n  res.jsonp('pong');\n});\n```\n\nThank you, query parsing with fancy object interpretation :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2104/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2103",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2103/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2103/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2103/events",
    "html_url": "https://github.com/expressjs/express/issues/2103",
    "id": 33050544,
    "node_id": "MDU6SXNzdWUzMzA1MDU0NA==",
    "number": 2103,
    "title": "HIJAX?",
    "user": {
      "login": "kevinSuttle",
      "id": 95672,
      "node_id": "MDQ6VXNlcjk1Njcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/95672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinSuttle",
      "html_url": "https://github.com/kevinSuttle",
      "followers_url": "https://api.github.com/users/kevinSuttle/followers",
      "following_url": "https://api.github.com/users/kevinSuttle/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinSuttle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinSuttle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinSuttle/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinSuttle/orgs",
      "repos_url": "https://api.github.com/users/kevinSuttle/repos",
      "events_url": "https://api.github.com/users/kevinSuttle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinSuttle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-05-08T03:25:05Z",
    "updated_at": "2014-05-08T04:03:36Z",
    "closed_at": "2014-05-08T03:30:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Thought you'd be the best person to ask @visionmedia. \nhttp://stackoverflow.com/questions/23529629/progressive-enhancement-with-node-express-routing-hijax-pattern\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2103/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2102",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2102/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2102/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2102/events",
    "html_url": "https://github.com/expressjs/express/issues/2102",
    "id": 33008960,
    "node_id": "MDU6SXNzdWUzMzAwODk2MA==",
    "number": 2102,
    "title": "req.host does not work with IPv6 literal addresses",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-05-07T17:57:59Z",
    "updated_at": "2014-05-08T18:46:48Z",
    "closed_at": "2014-05-08T18:46:48Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "When access a web site using an IPv6 literal address (like `http://[::1]:3000/`) the value of `req.host` will be garbled (specifically, `[`).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2102/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2101",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2101/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2101/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2101/events",
    "html_url": "https://github.com/expressjs/express/issues/2101",
    "id": 33006284,
    "node_id": "MDU6SXNzdWUzMzAwNjI4NA==",
    "number": 2101,
    "title": "3.x -> 4.x Docs",
    "user": {
      "login": "azat-co",
      "id": 1137314,
      "node_id": "MDQ6VXNlcjExMzczMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1137314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azat-co",
      "html_url": "https://github.com/azat-co",
      "followers_url": "https://api.github.com/users/azat-co/followers",
      "following_url": "https://api.github.com/users/azat-co/following{/other_user}",
      "gists_url": "https://api.github.com/users/azat-co/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azat-co/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azat-co/subscriptions",
      "organizations_url": "https://api.github.com/users/azat-co/orgs",
      "repos_url": "https://api.github.com/users/azat-co/repos",
      "events_url": "https://api.github.com/users/azat-co/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azat-co/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-07T17:26:06Z",
    "updated_at": "2014-05-07T17:37:43Z",
    "closed_at": "2014-05-07T17:30:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the removed section it says:\n\n```\nres.headerSent - use node's res.headersSent instead\n```\n\nWhat does it mean? A typo? Should it be \n\n```\nres.setHeader() -> res.headersSent\n```\n\ninstead?\n\nhttps://github.com/visionmedia/express/wiki/Migrating-from-3.x-to-4.x#connect-patches\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2101/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2100",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2100/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2100/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2100/events",
    "html_url": "https://github.com/expressjs/express/issues/2100",
    "id": 33002325,
    "node_id": "MDU6SXNzdWUzMzAwMjMyNQ==",
    "number": 2100,
    "title": "Redirect inside Router is not relative",
    "user": {
      "login": "felixrabe",
      "id": 400795,
      "node_id": "MDQ6VXNlcjQwMDc5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/400795?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felixrabe",
      "html_url": "https://github.com/felixrabe",
      "followers_url": "https://api.github.com/users/felixrabe/followers",
      "following_url": "https://api.github.com/users/felixrabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixrabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixrabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixrabe/subscriptions",
      "organizations_url": "https://api.github.com/users/felixrabe/orgs",
      "repos_url": "https://api.github.com/users/felixrabe/repos",
      "events_url": "https://api.github.com/users/felixrabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixrabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-05-07T16:38:28Z",
    "updated_at": "2014-09-08T10:31:33Z",
    "closed_at": "2014-05-07T16:55:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have this router:\n\n``` javascript\nvar campaign = express.Router();\n\ncampaign.post('/', function(req, res) {\n  // enter new subscription here...\n  res.redirect('welcome');\n});\n\ncampaign.get('/welcome', function(req, res) {\n  res.send('welcome!');\n});\n\napp.use('/my-newest-campaign', campaign);\n```\n\nThe `res.redirect` over there does not redirect to `/my-newest-campaign/welcome`, but to `/welcome` instead. Is this a bug or is there something else that I can do short of `res.redirect('/my-newest-campaign/welcome')` to do a router-relative redirect?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2100/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2099",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2099/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2099/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2099/events",
    "html_url": "https://github.com/expressjs/express/issues/2099",
    "id": 32775276,
    "node_id": "MDU6SXNzdWUzMjc3NTI3Ng==",
    "number": 2099,
    "title": "Better handling of X-Forwarded-For header to get client ip address",
    "user": {
      "login": "ashtuchkin",
      "id": 627997,
      "node_id": "MDQ6VXNlcjYyNzk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/627997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashtuchkin",
      "html_url": "https://github.com/ashtuchkin",
      "followers_url": "https://api.github.com/users/ashtuchkin/followers",
      "following_url": "https://api.github.com/users/ashtuchkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashtuchkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashtuchkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashtuchkin/subscriptions",
      "organizations_url": "https://api.github.com/users/ashtuchkin/orgs",
      "repos_url": "https://api.github.com/users/ashtuchkin/repos",
      "events_url": "https://api.github.com/users/ashtuchkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashtuchkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/10",
      "html_url": "https://github.com/expressjs/express/milestone/10",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/10/labels",
      "id": 661448,
      "node_id": "MDk6TWlsZXN0b25lNjYxNDQ4",
      "number": 10,
      "title": "4.3.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 4,
      "state": "closed",
      "created_at": "2014-05-16T19:07:43Z",
      "updated_at": "2014-05-23T22:37:20Z",
      "due_on": null,
      "closed_at": "2014-05-23T22:37:20Z"
    },
    "comments": 18,
    "created_at": "2014-05-04T19:48:51Z",
    "updated_at": "2014-05-18T15:18:57Z",
    "closed_at": "2014-05-18T15:18:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, if the proxy is trusted, express uses first (leftmost) ip address in `X-Forwarded-For` header as the client ip address. This value cannot be trusted (easily spoofed by clients) and it's usage is not recommended. Please see discussion about this issue applied to Ruby:\n\nhttp://blog.gingerlime.com/2012/rails-ip-spoofing-vulnerabilities-and-protection/\n\n> In a scenario where we have more than one proxy we can trust, the rightmost IP address will be of one of those proxies. The leftmost IP however cannot be blindly trusted. The recommended procedure is therefore to follow the chain, from the rightmost-element to the left, ignoring IP addresses of the proxies we trust. Once we hit the first unknown IP addresses when traversing from right to left, we use this as our client’s IP.\n> \n> This seems like the best-practice, and implemented both with Apache mod_remoteip and nginx realip module.\n\nQuote from Apache:\n\n> When multiple, comma delimited useragent IP addresses are listed in the header value, they are processed in Right-to-Left order. Processing halts when a given useragent IP address is not trusted to present the preceding IP address.\n\nI'd suggest the following algorithm:\n1. Filter out all non-ip entries in X-Forwarded-For array.\n2. Add a setting with a name like \"trust proxy levels\" and if it's set to N, return N-th rightmost ip in the array (skip N proxy levels).\n3. Else, remove all private ip addresses from the end of array (they are probably trusted) and return the rightmost (last) element as the client ip.\n\nPlease also see Ruby pull request that solves this https://github.com/rails/rails/pull/7980\n\nI could write a pull request to fix it, please let me know if you're interested.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2099/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2099/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2098",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2098/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2098/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2098/events",
    "html_url": "https://github.com/expressjs/express/pull/2098",
    "id": 32772675,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0NzM1NTI=",
    "number": 2098,
    "title": "Adds support for replacer in json/jsonp calls",
    "user": {
      "login": "gvaish",
      "id": 266251,
      "node_id": "MDQ6VXNlcjI2NjI1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gvaish",
      "html_url": "https://github.com/gvaish",
      "followers_url": "https://api.github.com/users/gvaish/followers",
      "following_url": "https://api.github.com/users/gvaish/following{/other_user}",
      "gists_url": "https://api.github.com/users/gvaish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gvaish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gvaish/subscriptions",
      "organizations_url": "https://api.github.com/users/gvaish/orgs",
      "repos_url": "https://api.github.com/users/gvaish/repos",
      "events_url": "https://api.github.com/users/gvaish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gvaish/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-05-04T17:28:54Z",
    "updated_at": "2014-10-29T16:09:46Z",
    "closed_at": "2014-05-11T16:59:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2098",
      "html_url": "https://github.com/expressjs/express/pull/2098",
      "diff_url": "https://github.com/expressjs/express/pull/2098.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2098.patch",
      "merged_at": null
    },
    "body": "See #2097\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2098/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2097",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2097/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2097/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2097/events",
    "html_url": "https://github.com/expressjs/express/issues/2097",
    "id": 32762733,
    "node_id": "MDU6SXNzdWUzMjc2MjczMw==",
    "number": 2097,
    "title": "Allow replacer in res.jsonp",
    "user": {
      "login": "gvaish",
      "id": 266251,
      "node_id": "MDQ6VXNlcjI2NjI1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gvaish",
      "html_url": "https://github.com/gvaish",
      "followers_url": "https://api.github.com/users/gvaish/followers",
      "following_url": "https://api.github.com/users/gvaish/following{/other_user}",
      "gists_url": "https://api.github.com/users/gvaish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gvaish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gvaish/subscriptions",
      "organizations_url": "https://api.github.com/users/gvaish/orgs",
      "repos_url": "https://api.github.com/users/gvaish/repos",
      "events_url": "https://api.github.com/users/gvaish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gvaish/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-05-04T06:31:41Z",
    "updated_at": "2014-05-11T16:59:28Z",
    "closed_at": "2014-05-11T16:59:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, `res.jsonp` supports only `([status, ] object)` which does not allow returning keys in an object in a specific order per request.\n\n`jsonp replacer` is set only at `app` level which is no good.\n\nCan you add support for `res.jsonp([status, ] object [, replacer])` so that `replacer` can be customized per request?\n\nI can submit a PR if needed :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2097/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2096",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2096/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2096/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2096/events",
    "html_url": "https://github.com/expressjs/express/issues/2096",
    "id": 32748180,
    "node_id": "MDU6SXNzdWUzMjc0ODE4MA==",
    "number": 2096,
    "title": "Double dot notation in filenames produces module error",
    "user": {
      "login": "braco",
      "id": 2449172,
      "node_id": "MDQ6VXNlcjI0NDkxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2449172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/braco",
      "html_url": "https://github.com/braco",
      "followers_url": "https://api.github.com/users/braco/followers",
      "following_url": "https://api.github.com/users/braco/following{/other_user}",
      "gists_url": "https://api.github.com/users/braco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/braco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/braco/subscriptions",
      "organizations_url": "https://api.github.com/users/braco/orgs",
      "repos_url": "https://api.github.com/users/braco/repos",
      "events_url": "https://api.github.com/users/braco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/braco/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-03T14:46:15Z",
    "updated_at": "2014-05-05T15:53:22Z",
    "closed_at": "2014-05-05T15:52:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Trying to include this file:\n\nfilename.mobile.jade\n\nProduces:\n\nError: Cannot find module 'mobile'\n\nPresumably to support\ninclude foo.bar\nwhere bar is not the default engine.\n\nBetter behavior would probably be:\n1. If this view engine (mobile) is available, use that (result cached)\n2. else try to load view \"filename.mobile.jade\"\n\nBecause not having the ability to name files foo.bar.jade is a pretty big side effect.\n\nI'll make a PR for this if it will be accepted, what do you guys think?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2096/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2095",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2095/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2095/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2095/events",
    "html_url": "https://github.com/expressjs/express/pull/2095",
    "id": 32742592,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0NjA3NDg=",
    "number": 2095,
    "title": "Router and Route should support .del",
    "user": {
      "login": "xudejian",
      "id": 974259,
      "node_id": "MDQ6VXNlcjk3NDI1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/974259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xudejian",
      "html_url": "https://github.com/xudejian",
      "followers_url": "https://api.github.com/users/xudejian/followers",
      "following_url": "https://api.github.com/users/xudejian/following{/other_user}",
      "gists_url": "https://api.github.com/users/xudejian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xudejian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xudejian/subscriptions",
      "organizations_url": "https://api.github.com/users/xudejian/orgs",
      "repos_url": "https://api.github.com/users/xudejian/repos",
      "events_url": "https://api.github.com/users/xudejian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xudejian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025092,
        "node_id": "MDU6TGFiZWw5NTAyNTA5Mg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/9",
      "html_url": "https://github.com/expressjs/express/milestone/9",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/9/labels",
      "id": 648502,
      "node_id": "MDk6TWlsZXN0b25lNjQ4NTAy",
      "number": 9,
      "title": "4.2.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 5,
      "state": "closed",
      "created_at": "2014-05-04T17:42:39Z",
      "updated_at": "2014-05-13T03:25:41Z",
      "due_on": null,
      "closed_at": "2014-05-13T03:25:41Z"
    },
    "comments": 16,
    "created_at": "2014-05-03T08:28:23Z",
    "updated_at": "2014-06-12T06:04:17Z",
    "closed_at": "2014-05-09T21:35:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2095",
      "html_url": "https://github.com/expressjs/express/pull/2095",
      "diff_url": "https://github.com/expressjs/express/pull/2095.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2095.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2095/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2094",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2094/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2094/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2094/events",
    "html_url": "https://github.com/expressjs/express/pull/2094",
    "id": 32714458,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0NDQyOTA=",
    "number": 2094,
    "title": "Do not override previous Content-Type for jsonp response.",
    "user": {
      "login": "albertoleal",
      "id": 15064,
      "node_id": "MDQ6VXNlcjE1MDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertoleal",
      "html_url": "https://github.com/albertoleal",
      "followers_url": "https://api.github.com/users/albertoleal/followers",
      "following_url": "https://api.github.com/users/albertoleal/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertoleal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertoleal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertoleal/subscriptions",
      "organizations_url": "https://api.github.com/users/albertoleal/orgs",
      "repos_url": "https://api.github.com/users/albertoleal/repos",
      "events_url": "https://api.github.com/users/albertoleal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertoleal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/9",
      "html_url": "https://github.com/expressjs/express/milestone/9",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/9/labels",
      "id": 648502,
      "node_id": "MDk6TWlsZXN0b25lNjQ4NTAy",
      "number": 9,
      "title": "4.2.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 5,
      "state": "closed",
      "created_at": "2014-05-04T17:42:39Z",
      "updated_at": "2014-05-13T03:25:41Z",
      "due_on": null,
      "closed_at": "2014-05-13T03:25:41Z"
    },
    "comments": 1,
    "created_at": "2014-05-02T18:32:11Z",
    "updated_at": "2014-06-12T06:04:16Z",
    "closed_at": "2014-05-02T19:02:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2094",
      "html_url": "https://github.com/expressjs/express/pull/2094",
      "diff_url": "https://github.com/expressjs/express/pull/2094.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2094.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2094/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2093",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2093/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2093/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2093/events",
    "html_url": "https://github.com/expressjs/express/issues/2093",
    "id": 32678283,
    "node_id": "MDU6SXNzdWUzMjY3ODI4Mw==",
    "number": 2093,
    "title": "router - req.route is undefined when using next(err) or throw err",
    "user": {
      "login": "samzilverberg",
      "id": 229485,
      "node_id": "MDQ6VXNlcjIyOTQ4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samzilverberg",
      "html_url": "https://github.com/samzilverberg",
      "followers_url": "https://api.github.com/users/samzilverberg/followers",
      "following_url": "https://api.github.com/users/samzilverberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/samzilverberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samzilverberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samzilverberg/subscriptions",
      "organizations_url": "https://api.github.com/users/samzilverberg/orgs",
      "repos_url": "https://api.github.com/users/samzilverberg/repos",
      "events_url": "https://api.github.com/users/samzilverberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samzilverberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-05-02T09:14:59Z",
    "updated_at": "2018-05-17T14:00:31Z",
    "closed_at": "2014-05-05T16:01:24Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "using express 3.x\n\nA common practice to throw/handle errors is setting up general error handler \"middleware\" that:\n- is registered as the last middleware with the (err,req,res,next) signature\n- catches errors that former middleware issue using either next(err) or throw err.\n- convert this error into a res.send (or json) with useful info.\n\nAn annoyance is that when doing this the error handler middleware cannot get useful information from req.route property, it is undefined.\n\nThis happens because the call to next(err) (or throw err) while the router middleware is at work actually makes the router to continue looking for routes. While doing so it can't find a route for the original url + current err combo (because using an error handler per url is not common).\nAnd so the router finishes its operation with req.route being undefined.\n\nIt would be great if req.route would save the last (not current) matched url.\nsomething like\n\n``` javascript\n//in express/lib/router/index.js line 106\nroute = self.matchRequest(req,i)\n...\nif (!route) return next(err)\nreq.route = route \n...\n```\n\nor maybe save an array of matched routes under req.\n\nI could create proper PR for both of the cases.\nBut first I wanted to discuss this issue and see if it is something express would be interested in merging in.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2093/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2092",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2092/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2092/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2092/events",
    "html_url": "https://github.com/expressjs/express/issues/2092",
    "id": 32678172,
    "node_id": "MDU6SXNzdWUzMjY3ODE3Mg==",
    "number": 2092,
    "title": "Can't set the default encoding",
    "user": {
      "login": "gregberge",
      "id": 266302,
      "node_id": "MDQ6VXNlcjI2NjMwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gregberge",
      "html_url": "https://github.com/gregberge",
      "followers_url": "https://api.github.com/users/gregberge/followers",
      "following_url": "https://api.github.com/users/gregberge/following{/other_user}",
      "gists_url": "https://api.github.com/users/gregberge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gregberge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gregberge/subscriptions",
      "organizations_url": "https://api.github.com/users/gregberge/orgs",
      "repos_url": "https://api.github.com/users/gregberge/repos",
      "events_url": "https://api.github.com/users/gregberge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gregberge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2014-05-02T09:13:00Z",
    "updated_at": "2014-05-21T06:10:08Z",
    "closed_at": "2014-05-21T06:10:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express doesn't provide a way to set the default encoding, so by default if you return some JSON, the content-type will be \"application/json\", it's a problem because Chrome doesn't use UTF-8 by default for \"application/json\". It uses the default encoding setted in preferences.\n\nThe problem is at this line : https://github.com/visionmedia/express/blob/master/lib/response.js#L523\n\n[The library node-mime authorize a fallback](https://github.com/broofa/node-mime/blob/master/mime.js#L71), but it is not setted in express.\n\nI propose you to add a config entry to define the default encoding used by express.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2092/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2091",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2091/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2091/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2091/events",
    "html_url": "https://github.com/expressjs/express/issues/2091",
    "id": 32677488,
    "node_id": "MDU6SXNzdWUzMjY3NzQ4OA==",
    "number": 2091,
    "title": "unlicensed material in ./test/acceptance/fixtures/grey.png",
    "user": {
      "login": "kapouer",
      "id": 131406,
      "node_id": "MDQ6VXNlcjEzMTQwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/131406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kapouer",
      "html_url": "https://github.com/kapouer",
      "followers_url": "https://api.github.com/users/kapouer/followers",
      "following_url": "https://api.github.com/users/kapouer/following{/other_user}",
      "gists_url": "https://api.github.com/users/kapouer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kapouer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kapouer/subscriptions",
      "organizations_url": "https://api.github.com/users/kapouer/orgs",
      "repos_url": "https://api.github.com/users/kapouer/repos",
      "events_url": "https://api.github.com/users/kapouer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kapouer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-05-02T09:01:00Z",
    "updated_at": "2014-05-02T13:01:06Z",
    "closed_at": "2014-05-02T13:01:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hi,\nthere's an embedded ICC profile in that png:\n(found in the output of `identify -verbose grey.png`):\n\n```\nProfile-icc: 5964 bytes\n      Description: Color LCD Calibrated\n      Manufacturer: Color LCD Calibrated\n      Model: Color LCD Calibrated\n      Copyright: Copyright Apple, Inc., 2012\n```\n\nthat file is non-free since we do not know under what license it is distributed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2091/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2090",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2090/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2090/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2090/events",
    "html_url": "https://github.com/expressjs/express/issues/2090",
    "id": 32646578,
    "node_id": "MDU6SXNzdWUzMjY0NjU3OA==",
    "number": 2090,
    "title": "error handler per documentation",
    "user": {
      "login": "joelabair",
      "id": 3341315,
      "node_id": "MDQ6VXNlcjMzNDEzMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3341315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joelabair",
      "html_url": "https://github.com/joelabair",
      "followers_url": "https://api.github.com/users/joelabair/followers",
      "following_url": "https://api.github.com/users/joelabair/following{/other_user}",
      "gists_url": "https://api.github.com/users/joelabair/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joelabair/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joelabair/subscriptions",
      "organizations_url": "https://api.github.com/users/joelabair/orgs",
      "repos_url": "https://api.github.com/users/joelabair/repos",
      "events_url": "https://api.github.com/users/joelabair/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joelabair/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-05-01T20:50:20Z",
    "updated_at": "2014-05-01T21:34:59Z",
    "closed_at": "2014-05-01T21:34:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For some reason this doesn't work at all for me in express-4.1.1\nfollowing the doc http://expressjs.com/guide.html#error-handling\nis this a bug perhaps?\n\nSimple express with custom error handler middleware.\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\napp.use(function(err, req, res, next) {\n  console.log(err);\n  res.send(500, 'internal server error');\n});\napp.listen(3000);\n```\n\nTesting with curl.\n\n``` bash\nbash >curl http://127.0.0.1:3000/ping\nCannot GET /ping\n\nStatus: [404] in 0.029 Secs. \n```\n\nDebug output.\n\n```\n  express:router dispatching GET /ping +10s\n  express:router trim prefix () from url /ping +7ms\n  express:router query  : /ping +0ms\n  express:router trim prefix () from url /ping +0ms\n  express:router expressInit  : /ping +0ms\n  express:router trim prefix () from url /ping +0ms\n  express:router anonymous  : /ping +0ms\n  express:application default 404 +10s\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2090/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2089",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2089/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2089/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2089/events",
    "html_url": "https://github.com/expressjs/express/issues/2089",
    "id": 32570512,
    "node_id": "MDU6SXNzdWUzMjU3MDUxMg==",
    "number": 2089,
    "title": "Isolate middleware to invoking router",
    "user": {
      "login": "seth-admittedly",
      "id": 4643337,
      "node_id": "MDQ6VXNlcjQ2NDMzMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4643337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-admittedly",
      "html_url": "https://github.com/seth-admittedly",
      "followers_url": "https://api.github.com/users/seth-admittedly/followers",
      "following_url": "https://api.github.com/users/seth-admittedly/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-admittedly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-admittedly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-admittedly/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-admittedly/orgs",
      "repos_url": "https://api.github.com/users/seth-admittedly/repos",
      "events_url": "https://api.github.com/users/seth-admittedly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-admittedly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-30T20:31:01Z",
    "updated_at": "2014-04-30T20:36:09Z",
    "closed_at": "2014-04-30T20:31:47Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Is it possible to have middleware only be used by the router which attaches it?\n\nIt would be great to be able to do the following\n\n``` javascript\nvar firstRouter = express.Router();\nfirstRouter.use(someMiddleware);\nfirstRouter.get(\"/foo\", ...);\n\nvar secondRouter = express.Router();\nsecondRouter.get(\"/bar\", ...);\n\napp.use(firstRouter);\napp.use(secondRouter);\n```\n\nand have someMiddleware called with `/foo` but not with `/bar`.\n\nObviously in this simplified example the routes can be easily rearranged, but in a full app there are often times when arranging routes by the middleware they require makes much less sense than arranging them by shared purpose.\n\nFor example, in our app with have a set of routes associated with users, and a set of routes associated with schools. Some of our middleware runs on a subset of each of these routes, but it much cleaner to put the users in one router and the schools in a second than to arrange them by middleware needs.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2089/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2087",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2087/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2087/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2087/events",
    "html_url": "https://github.com/expressjs/express/issues/2087",
    "id": 32470518,
    "node_id": "MDU6SXNzdWUzMjQ3MDUxOA==",
    "number": 2087,
    "title": "Middleware for router at mount",
    "user": {
      "login": "seth-admittedly",
      "id": 4643337,
      "node_id": "MDQ6VXNlcjQ2NDMzMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4643337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-admittedly",
      "html_url": "https://github.com/seth-admittedly",
      "followers_url": "https://api.github.com/users/seth-admittedly/followers",
      "following_url": "https://api.github.com/users/seth-admittedly/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-admittedly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-admittedly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-admittedly/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-admittedly/orgs",
      "repos_url": "https://api.github.com/users/seth-admittedly/repos",
      "events_url": "https://api.github.com/users/seth-admittedly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-admittedly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-29T18:12:58Z",
    "updated_at": "2014-04-29T18:22:10Z",
    "closed_at": "2014-04-29T18:15:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It would be helpful to be able to chain middleware at the time a router is mounted to an application.\n\n```\napp.use(\"/admin\", ensureLogin.ensureLoggedIn(\"/login\"), adminRouter);\n```\n\nrather than having to attach the middleware to the router like so\n\n```\nadminRouter.use(ensureLogin.ensureLoggedIn(\"/login\"), ensureLogin.ensureIsAdmin(\"/home\"));\n```\n\nWith the former, the mounting application can assign middleware to be executed for a given router, while the latter means the router needs to be aware of which particular middleware is needed by the application.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2087/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2086",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2086/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2086/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2086/events",
    "html_url": "https://github.com/expressjs/express/issues/2086",
    "id": 32468718,
    "node_id": "MDU6SXNzdWUzMjQ2ODcxOA==",
    "number": 2086,
    "title": "Router based redirect bugs",
    "user": {
      "login": "seth-admittedly",
      "id": 4643337,
      "node_id": "MDQ6VXNlcjQ2NDMzMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4643337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-admittedly",
      "html_url": "https://github.com/seth-admittedly",
      "followers_url": "https://api.github.com/users/seth-admittedly/followers",
      "following_url": "https://api.github.com/users/seth-admittedly/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-admittedly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-admittedly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-admittedly/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-admittedly/orgs",
      "repos_url": "https://api.github.com/users/seth-admittedly/repos",
      "events_url": "https://api.github.com/users/seth-admittedly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-admittedly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-04-29T17:54:03Z",
    "updated_at": "2014-09-08T10:31:33Z",
    "closed_at": "2014-04-29T18:56:46Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I'm trying to have a router redirect based on it's mount point.\n\nThis router\n\n```\nvar adminRouter = express.Router();\nadminRouter.get(\"/\", function(req,res){res.redirect(\"index\");});\napp.use(\"/admin\", adminRouter);\n```\n\ncorrectly redirects from /admin/ to /index but redirects /admin to /index.\n\nI tried adding \n\n```\nadminRouter.get(\"\", function(req,res){res.redirect(\"index\");});\n```\n\nbut /admin still redirects to /index.\n\nWeirdly, an absolute redirect\n\n```\nadminRouter.get(\"/\", function(req,res){res.redirect(\"/admin/index\");});\n```\n\ncorrectly redirects /admin to /admin/index.\n\nNested paths also present problem with routers being unaware of their mount point\n\n```\nadminRouter.get(\"/foo/bar\", function(req,res){res.redirect(\"index\");});\n```\n\nredirects /admin/foo/bar to /admin/foo/index.\n\nAnd \n\n```\nadminRouter.get(\"/foo/bar\", function(req,res){res.redirect(\"/index\");});\n```\n\nredirects /admin/foo/bar to /index.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2086/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2085",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2085/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2085/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2085/events",
    "html_url": "https://github.com/expressjs/express/pull/2085",
    "id": 32385602,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUyNTIzNTg=",
    "number": 2085,
    "title": "minor optimization in proto.use function",
    "user": {
      "login": "bricejlin",
      "id": 4443267,
      "node_id": "MDQ6VXNlcjQ0NDMyNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4443267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bricejlin",
      "html_url": "https://github.com/bricejlin",
      "followers_url": "https://api.github.com/users/bricejlin/followers",
      "following_url": "https://api.github.com/users/bricejlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bricejlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bricejlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bricejlin/subscriptions",
      "organizations_url": "https://api.github.com/users/bricejlin/orgs",
      "repos_url": "https://api.github.com/users/bricejlin/repos",
      "events_url": "https://api.github.com/users/bricejlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bricejlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-04-28T18:27:59Z",
    "updated_at": "2014-06-29T13:21:56Z",
    "closed_at": "2014-04-28T18:33:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2085",
      "html_url": "https://github.com/expressjs/express/pull/2085",
      "diff_url": "https://github.com/expressjs/express/pull/2085.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2085.patch",
      "merged_at": null
    },
    "body": "i switched the order of function validation and route defaulting so function validation is first. i figured it makes more sense to throw an error first than to assign a faulty function to a default route, then check if function is valid.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2085/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2084",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2084/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2084/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2084/events",
    "html_url": "https://github.com/expressjs/express/issues/2084",
    "id": 32350209,
    "node_id": "MDU6SXNzdWUzMjM1MDIwOQ==",
    "number": 2084,
    "title": "Verbs are ignored when using app.param",
    "user": {
      "login": "pmaoui",
      "id": 318256,
      "node_id": "MDQ6VXNlcjMxODI1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/318256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmaoui",
      "html_url": "https://github.com/pmaoui",
      "followers_url": "https://api.github.com/users/pmaoui/followers",
      "following_url": "https://api.github.com/users/pmaoui/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmaoui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmaoui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmaoui/subscriptions",
      "organizations_url": "https://api.github.com/users/pmaoui/orgs",
      "repos_url": "https://api.github.com/users/pmaoui/repos",
      "events_url": "https://api.github.com/users/pmaoui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmaoui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-28T11:11:51Z",
    "updated_at": "2014-04-28T15:28:07Z",
    "closed_at": "2014-04-28T13:39:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, \n\nI'm migrating and I'm a bit lost with that case :\n\n```\napp.get(\"/foo/:id\", ...)\napp.post(\"/foo/bar\", ...)\n```\n\nWith express 3.x, doing a POST request on /foo/bar was okay. Now I can't, the get path interfer and define \"id\" as bar. Just as if it was a GET request. \nI guess it has to do with the overhaul of Route but I can't get the logic here. \n\nThanks \n\nEdit : It appears it has something to do with app.param. The verb is ignored. \n\n```\napp.param('bar', /^[a-z]+$/);\n\napp.get('/foo/:bar\", function(req,res) {\n  res.send(req.params.bar);\n});\n\napp.post('/foo/abc', function(req,res) {\n  res.send(\"POST request won't work if you do /foo/abc\");\n});\n```\n\nEdit : not fixed for me\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2084/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2083",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2083/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2083/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2083/events",
    "html_url": "https://github.com/expressjs/express/pull/2083",
    "id": 32345503,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUyMjg3MTU=",
    "number": 2083,
    "title": "ETag support in HEAD requests",
    "user": {
      "login": "relvao",
      "id": 1629490,
      "node_id": "MDQ6VXNlcjE2Mjk0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/relvao",
      "html_url": "https://github.com/relvao",
      "followers_url": "https://api.github.com/users/relvao/followers",
      "following_url": "https://api.github.com/users/relvao/following{/other_user}",
      "gists_url": "https://api.github.com/users/relvao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/relvao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/relvao/subscriptions",
      "organizations_url": "https://api.github.com/users/relvao/orgs",
      "repos_url": "https://api.github.com/users/relvao/repos",
      "events_url": "https://api.github.com/users/relvao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/relvao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/9",
      "html_url": "https://github.com/expressjs/express/milestone/9",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/9/labels",
      "id": 648502,
      "node_id": "MDk6TWlsZXN0b25lNjQ4NTAy",
      "number": 9,
      "title": "4.2.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 5,
      "state": "closed",
      "created_at": "2014-05-04T17:42:39Z",
      "updated_at": "2014-05-13T03:25:41Z",
      "due_on": null,
      "closed_at": "2014-05-13T03:25:41Z"
    },
    "comments": 2,
    "created_at": "2014-04-28T09:55:41Z",
    "updated_at": "2014-06-12T06:04:13Z",
    "closed_at": "2014-04-30T12:29:37Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2083",
      "html_url": "https://github.com/expressjs/express/pull/2083",
      "diff_url": "https://github.com/expressjs/express/pull/2083.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2083.patch",
      "merged_at": null
    },
    "body": "I'm assuming that ETags should also be sent in the HEAD requests. And it would also be quite helpful in the job I have in hands at the moment :) \n\nAccording to the RFC (http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.4) \"The HEAD method is identical to GET except that the server MUST NOT return a message-body in the response\". It even mentions \"Content-Length, Content-MD5, ETag or Last-Modified\" headers in HEAD requests.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2083/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2082",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2082/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2082/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2082/events",
    "html_url": "https://github.com/expressjs/express/issues/2082",
    "id": 32341757,
    "node_id": "MDU6SXNzdWUzMjM0MTc1Nw==",
    "number": 2082,
    "title": "file uploads with express 4.0",
    "user": {
      "login": "elliotstokes",
      "id": 4385563,
      "node_id": "MDQ6VXNlcjQzODU1NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4385563?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elliotstokes",
      "html_url": "https://github.com/elliotstokes",
      "followers_url": "https://api.github.com/users/elliotstokes/followers",
      "following_url": "https://api.github.com/users/elliotstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/elliotstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elliotstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elliotstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/elliotstokes/orgs",
      "repos_url": "https://api.github.com/users/elliotstokes/repos",
      "events_url": "https://api.github.com/users/elliotstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elliotstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-04-28T08:57:10Z",
    "updated_at": "2014-04-28T10:11:26Z",
    "closed_at": "2014-04-28T10:11:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I seem to have an issue with uploading files with connect 4.0. It seems specifically to be a problem with large files.\n\nIs there a default limit for POST sizes. I cant seem to find anything in the documentation.\n\nThe Post will complete ok with smaller files but the whole thing hangs and the post request just times out when the file is 17mb. In my route I don't currently have any code I'm just calling res.json(true) but it never actually gets that far with a large file.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2082/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2081",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2081/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2081/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2081/events",
    "html_url": "https://github.com/expressjs/express/issues/2081",
    "id": 32332293,
    "node_id": "MDU6SXNzdWUzMjMzMjI5Mw==",
    "number": 2081,
    "title": "res.set(field, val) overwrites multiple Warning headers.",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2014-04-28T05:24:47Z",
    "updated_at": "2014-05-01T02:52:53Z",
    "closed_at": "2014-05-01T02:37:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Per the HTTP spec, http://tools.ietf.org/html/rfc2616#section-14.46, section 14.46 says \"A response MAY carry more than one Warning header.\"  Is there a way that I can set multiple Warning headers?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2081/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2080",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2080/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2080/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2080/events",
    "html_url": "https://github.com/expressjs/express/pull/2080",
    "id": 32323828,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUyMTcyMDY=",
    "number": 2080,
    "title": "package.json node compatibility",
    "user": {
      "login": "justinjdickow",
      "id": 3627664,
      "node_id": "MDQ6VXNlcjM2Mjc2NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3627664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinjdickow",
      "html_url": "https://github.com/justinjdickow",
      "followers_url": "https://api.github.com/users/justinjdickow/followers",
      "following_url": "https://api.github.com/users/justinjdickow/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinjdickow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinjdickow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinjdickow/subscriptions",
      "organizations_url": "https://api.github.com/users/justinjdickow/orgs",
      "repos_url": "https://api.github.com/users/justinjdickow/repos",
      "events_url": "https://api.github.com/users/justinjdickow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinjdickow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-27T23:44:10Z",
    "updated_at": "2014-06-12T06:04:13Z",
    "closed_at": "2014-04-27T23:46:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2080",
      "html_url": "https://github.com/expressjs/express/pull/2080",
      "diff_url": "https://github.com/expressjs/express/pull/2080.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2080.patch",
      "merged_at": null
    },
    "body": "package.json falsely reporting compatibility with node v0.8.  Changed based on: https://github.com/visionmedia/express/blob/dbea8312bbd6b59e5d78e145696a876c7397a332/History.md#400--2014-04-09\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2080/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2079",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2079/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2079/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2079/events",
    "html_url": "https://github.com/expressjs/express/issues/2079",
    "id": 32314717,
    "node_id": "MDU6SXNzdWUzMjMxNDcxNw==",
    "number": 2079,
    "title": "Allow middleware on app.route()",
    "user": {
      "login": "Burnett01",
      "id": 1208707,
      "node_id": "MDQ6VXNlcjEyMDg3MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1208707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Burnett01",
      "html_url": "https://github.com/Burnett01",
      "followers_url": "https://api.github.com/users/Burnett01/followers",
      "following_url": "https://api.github.com/users/Burnett01/following{/other_user}",
      "gists_url": "https://api.github.com/users/Burnett01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Burnett01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Burnett01/subscriptions",
      "organizations_url": "https://api.github.com/users/Burnett01/orgs",
      "repos_url": "https://api.github.com/users/Burnett01/repos",
      "events_url": "https://api.github.com/users/Burnett01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Burnett01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-27T16:20:14Z",
    "updated_at": "2014-04-27T16:26:35Z",
    "closed_at": "2014-04-27T16:20:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using the app.route() function like this:\n\n``` javascript\napp.route('/register')\n        .get(MIDDLEWARE, function(req, res, next) {\n          //content\n        })\n        .post(MIDDLEWARE, function(req, res, next) {\n            //content\n        }));\n```\n\nIt would be nice if I could use it like this:\n\n``` javascript\napp.route('/register', MIDDLEWARE)\n        .get(function(req, res, next) {\n          //content\n        })\n        .post(function(req, res, next) {\n            //content\n        }));\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2079/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2078",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2078/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2078/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2078/events",
    "html_url": "https://github.com/expressjs/express/issues/2078",
    "id": 32301291,
    "node_id": "MDU6SXNzdWUzMjMwMTI5MQ==",
    "number": 2078,
    "title": "Expose mount paths to router",
    "user": {
      "login": "parisholley",
      "id": 399289,
      "node_id": "MDQ6VXNlcjM5OTI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/399289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parisholley",
      "html_url": "https://github.com/parisholley",
      "followers_url": "https://api.github.com/users/parisholley/followers",
      "following_url": "https://api.github.com/users/parisholley/following{/other_user}",
      "gists_url": "https://api.github.com/users/parisholley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parisholley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parisholley/subscriptions",
      "organizations_url": "https://api.github.com/users/parisholley/orgs",
      "repos_url": "https://api.github.com/users/parisholley/repos",
      "events_url": "https://api.github.com/users/parisholley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parisholley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/10",
      "html_url": "https://github.com/expressjs/express/milestone/10",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/10/labels",
      "id": 661448,
      "node_id": "MDk6TWlsZXN0b25lNjYxNDQ4",
      "number": 10,
      "title": "4.3.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 4,
      "state": "closed",
      "created_at": "2014-05-16T19:07:43Z",
      "updated_at": "2014-05-23T22:37:20Z",
      "due_on": null,
      "closed_at": "2014-05-23T22:37:20Z"
    },
    "comments": 28,
    "created_at": "2014-04-27T00:03:19Z",
    "updated_at": "2014-05-19T19:51:11Z",
    "closed_at": "2014-05-19T19:49:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Right now, the only path information available in a router is its localized path. I want to be able to do things like build navigation and dynamic urls without having to hard code a value in my views. So if I mount \"/outerapp\", and inside i mount \"/innerapp\", I would expect to find some property in an object that would allow me to write \"/outerapp/innerapp\" in my views.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2078/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2077",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2077/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2077/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2077/events",
    "html_url": "https://github.com/expressjs/express/issues/2077",
    "id": 32301265,
    "node_id": "MDU6SXNzdWUzMjMwMTI2NQ==",
    "number": 2077,
    "title": "Allow locals on router",
    "user": {
      "login": "parisholley",
      "id": 399289,
      "node_id": "MDQ6VXNlcjM5OTI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/399289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parisholley",
      "html_url": "https://github.com/parisholley",
      "followers_url": "https://api.github.com/users/parisholley/followers",
      "following_url": "https://api.github.com/users/parisholley/following{/other_user}",
      "gists_url": "https://api.github.com/users/parisholley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parisholley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parisholley/subscriptions",
      "organizations_url": "https://api.github.com/users/parisholley/orgs",
      "repos_url": "https://api.github.com/users/parisholley/repos",
      "events_url": "https://api.github.com/users/parisholley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parisholley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-27T00:01:30Z",
    "updated_at": "2014-05-01T02:32:13Z",
    "closed_at": "2014-05-01T02:32:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I implement a router per sub-application, and I am trying to find a way to put unique data on each sub-application by the orchestrator (main app). Use case, I want to make the mount path of that router (application) available to the views beneath it. So if I mount sub-app-1 to \"/subapp1\", I want to access that path in my jade templates instead of hard coding. Going to create a new ticket for handling paths (unless I am missing something in documentation).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2077/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2075",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2075/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2075/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2075/events",
    "html_url": "https://github.com/expressjs/express/issues/2075",
    "id": 32230191,
    "node_id": "MDU6SXNzdWUzMjIzMDE5MQ==",
    "number": 2075,
    "title": "Version 4.0 upgrade means req.app.routes doesn't exist...",
    "user": {
      "login": "adamsilver",
      "id": 37163,
      "node_id": "MDQ6VXNlcjM3MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/37163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamsilver",
      "html_url": "https://github.com/adamsilver",
      "followers_url": "https://api.github.com/users/adamsilver/followers",
      "following_url": "https://api.github.com/users/adamsilver/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamsilver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamsilver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamsilver/subscriptions",
      "organizations_url": "https://api.github.com/users/adamsilver/orgs",
      "repos_url": "https://api.github.com/users/adamsilver/repos",
      "events_url": "https://api.github.com/users/adamsilver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamsilver/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-25T13:06:46Z",
    "updated_at": "2014-04-25T13:14:13Z",
    "closed_at": "2014-04-25T13:14:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "...in the context of a route callback.  Is there any equivalent for 4.0?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2075/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2074",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2074/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2074/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2074/events",
    "html_url": "https://github.com/expressjs/express/issues/2074",
    "id": 32217848,
    "node_id": "MDU6SXNzdWUzMjIxNzg0OA==",
    "number": 2074,
    "title": "Support an Array of Extensions in app.engine?",
    "user": {
      "login": "Xulai",
      "id": 5481226,
      "node_id": "MDQ6VXNlcjU0ODEyMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5481226?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xulai",
      "html_url": "https://github.com/Xulai",
      "followers_url": "https://api.github.com/users/Xulai/followers",
      "following_url": "https://api.github.com/users/Xulai/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xulai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xulai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xulai/subscriptions",
      "organizations_url": "https://api.github.com/users/Xulai/orgs",
      "repos_url": "https://api.github.com/users/Xulai/repos",
      "events_url": "https://api.github.com/users/Xulai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xulai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-25T09:40:53Z",
    "updated_at": "2014-04-25T19:30:26Z",
    "closed_at": "2014-04-25T19:30:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was wondering if an array of extensions could be supported in the engine function as I'm using Absurdjs which supports multiple format inputs so it would be nice if I didn't have to call .engine for each extension but just give an array instead.\nSimple edit as seen below\n\n``` javascript\napp.engine = function(ext, fn){\n  if ('function' != typeof fn) throw new Error('callback function required');\n  if ( Array.isPrototypeOf(ext) ) {\n    for( var iter; iter < ext.length; iter++) {\n         if ('.' != ext[iter][0]) ext[iter] = '.' + ext[iter];\n         this.engines[ext[iter]] = fn;\n    } \n  } else { \n    if ('.' != ext[0]) ext = '.' + ext;\n    this.engines[ext] = fn;\n  }\n  return this;\n};\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2074/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2073",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2073/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2073/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2073/events",
    "html_url": "https://github.com/expressjs/express/issues/2073",
    "id": 32208017,
    "node_id": "MDU6SXNzdWUzMjIwODAxNw==",
    "number": 2073,
    "title": "Changelog",
    "user": {
      "login": "mrzepinski",
      "id": 435196,
      "node_id": "MDQ6VXNlcjQzNTE5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/435196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrzepinski",
      "html_url": "https://github.com/mrzepinski",
      "followers_url": "https://api.github.com/users/mrzepinski/followers",
      "following_url": "https://api.github.com/users/mrzepinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrzepinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrzepinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrzepinski/subscriptions",
      "organizations_url": "https://api.github.com/users/mrzepinski/orgs",
      "repos_url": "https://api.github.com/users/mrzepinski/repos",
      "events_url": "https://api.github.com/users/mrzepinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrzepinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-25T06:16:23Z",
    "updated_at": "2014-04-25T08:58:12Z",
    "closed_at": "2014-04-25T08:58:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Where can I find it? I see that version `4.1.0` is out, but I cannot find quickly what's changed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2073/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2072",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2072/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2072/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2072/events",
    "html_url": "https://github.com/expressjs/express/pull/2072",
    "id": 32172979,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxMzQxNzM=",
    "number": 2072,
    "title": "Update 4.x branch to bump 'send' dependency to take advantage of new bug fixes",
    "user": {
      "login": "markstos",
      "id": 25829,
      "node_id": "MDQ6VXNlcjI1ODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markstos",
      "html_url": "https://github.com/markstos",
      "followers_url": "https://api.github.com/users/markstos/followers",
      "following_url": "https://api.github.com/users/markstos/following{/other_user}",
      "gists_url": "https://api.github.com/users/markstos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markstos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markstos/subscriptions",
      "organizations_url": "https://api.github.com/users/markstos/orgs",
      "repos_url": "https://api.github.com/users/markstos/repos",
      "events_url": "https://api.github.com/users/markstos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markstos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 3,
    "created_at": "2014-04-24T18:24:00Z",
    "updated_at": "2014-06-12T06:04:11Z",
    "closed_at": "2014-04-24T19:00:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2072",
      "html_url": "https://github.com/expressjs/express/pull/2072",
      "diff_url": "https://github.com/expressjs/express/pull/2072.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2072.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2072/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2071",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2071/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2071/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2071/events",
    "html_url": "https://github.com/expressjs/express/pull/2071",
    "id": 32172945,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxMzQxNTM=",
    "number": 2071,
    "title": "bump 'send' dependency for 3.x to 0.3.0 to get bug fixes.",
    "user": {
      "login": "markstos",
      "id": 25829,
      "node_id": "MDQ6VXNlcjI1ODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markstos",
      "html_url": "https://github.com/markstos",
      "followers_url": "https://api.github.com/users/markstos/followers",
      "following_url": "https://api.github.com/users/markstos/following{/other_user}",
      "gists_url": "https://api.github.com/users/markstos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markstos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markstos/subscriptions",
      "organizations_url": "https://api.github.com/users/markstos/orgs",
      "repos_url": "https://api.github.com/users/markstos/repos",
      "events_url": "https://api.github.com/users/markstos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markstos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-04-24T18:23:35Z",
    "updated_at": "2014-06-12T06:04:10Z",
    "closed_at": "2014-04-24T20:49:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2071",
      "html_url": "https://github.com/expressjs/express/pull/2071",
      "diff_url": "https://github.com/expressjs/express/pull/2071.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2071.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2071/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2070",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2070/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2070/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2070/events",
    "html_url": "https://github.com/expressjs/express/issues/2070",
    "id": 32094954,
    "node_id": "MDU6SXNzdWUzMjA5NDk1NA==",
    "number": 2070,
    "title": ".",
    "user": {
      "login": "laggingreflex",
      "id": 2523987,
      "node_id": "MDQ6VXNlcjI1MjM5ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2523987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laggingreflex",
      "html_url": "https://github.com/laggingreflex",
      "followers_url": "https://api.github.com/users/laggingreflex/followers",
      "following_url": "https://api.github.com/users/laggingreflex/following{/other_user}",
      "gists_url": "https://api.github.com/users/laggingreflex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laggingreflex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laggingreflex/subscriptions",
      "organizations_url": "https://api.github.com/users/laggingreflex/orgs",
      "repos_url": "https://api.github.com/users/laggingreflex/repos",
      "events_url": "https://api.github.com/users/laggingreflex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laggingreflex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-23T20:11:35Z",
    "updated_at": "2014-04-23T21:08:30Z",
    "closed_at": "2014-04-23T20:12:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2070/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2069",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2069/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2069/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2069/events",
    "html_url": "https://github.com/expressjs/express/issues/2069",
    "id": 32079960,
    "node_id": "MDU6SXNzdWUzMjA3OTk2MA==",
    "number": 2069,
    "title": "$.ajax DELETE requests hang due to \"keep-alive\" header",
    "user": {
      "login": "brandoncarl",
      "id": 5427971,
      "node_id": "MDQ6VXNlcjU0Mjc5NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5427971?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandoncarl",
      "html_url": "https://github.com/brandoncarl",
      "followers_url": "https://api.github.com/users/brandoncarl/followers",
      "following_url": "https://api.github.com/users/brandoncarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandoncarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandoncarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandoncarl/subscriptions",
      "organizations_url": "https://api.github.com/users/brandoncarl/orgs",
      "repos_url": "https://api.github.com/users/brandoncarl/repos",
      "events_url": "https://api.github.com/users/brandoncarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandoncarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2014-04-23T17:06:26Z",
    "updated_at": "2014-07-11T14:46:43Z",
    "closed_at": "2014-04-23T18:55:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When issuing a same-origin AJAX delete via jQuery, subsequent calls to the server via the same client are hanging.\n\n_Using Express 3.5.1, jQuery 1.11.0, and Chrome 33.x (also occurs in FF28)._\n\n**To replicate:**\n1. Create directory with code below and install Express dependency\n2. node main.js\n3. Visit localhost:5000 in Chrome 33\n4. Click on simulated deletion link\n5. Wait for a moment, and refresh\n6. In the Network region, Chrome will handle the DELETE request ok, but the subsequent server call will stay as \"pending\"\n\n``` javascript\n// Dependencies\nvar http = require('http'),\n    express = require('express');\n\n// Basic app\nvar app = express();\n\n// Logging (for debugging), and parsing dependencies\napp.use(express.logger());\napp.use(express.json());\napp.use(express.urlencoded());\napp.use(express.cookieParser());\napp.use(express.methodOverride());\n\n// Simple home page\napp.get(\"/\", function(req, res) {\n  var head   = \"<head><script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js'></script></head>\",\n      body   = \"<a id='link' style='text-decoration:underline;cursor:pointer;'>Click here to simulate delete</a>, wait a second, then try refreshing.\",\n      params = {\n        url  : \"/item/5\",\n        type : \"DELETE\"\n      }\n      ajax = \"<script>$(function() { $('#link').click(function() { $.ajax(\" + JSON.stringify(params) + \"); }); });</script>\"\n\n  res.send(\"<html>\" + head + \"<body>\" + body + ajax + \"</body></html>\");\n\n});\n\n// Simulated deletion\napp.del(\"/item/:id\", function(req, res) {\n  res.send(204);\n});\n\n// Make the server listen\nvar server = http.createServer(app).listen(5000);\n```\n\nThe solution is to use `res.set(\"Connection\", \"close\").send(204)`. That said, it's not clear to me that the user should need to \"force close\" the connection so much as prevent the \"keep-alive\" header from being used.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2069/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2068",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2068/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2068/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2068/events",
    "html_url": "https://github.com/expressjs/express/issues/2068",
    "id": 32076281,
    "node_id": "MDU6SXNzdWUzMjA3NjI4MQ==",
    "number": 2068,
    "title": "Access full URL from requesst",
    "user": {
      "login": "drummerboof",
      "id": 107011,
      "node_id": "MDQ6VXNlcjEwNzAxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/107011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drummerboof",
      "html_url": "https://github.com/drummerboof",
      "followers_url": "https://api.github.com/users/drummerboof/followers",
      "following_url": "https://api.github.com/users/drummerboof/following{/other_user}",
      "gists_url": "https://api.github.com/users/drummerboof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drummerboof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drummerboof/subscriptions",
      "organizations_url": "https://api.github.com/users/drummerboof/orgs",
      "repos_url": "https://api.github.com/users/drummerboof/repos",
      "events_url": "https://api.github.com/users/drummerboof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drummerboof/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-23T16:22:07Z",
    "updated_at": "2014-05-01T02:32:19Z",
    "closed_at": "2014-05-01T02:32:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would it be possible to add a property to the Request object to expose the full URL? Perhaps `fullUrl` or something similar?\n\nIt seems this would be a useful addition as we are currently having to manually build this up from other request properties using `url.format`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2068/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2067",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2067/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2067/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2067/events",
    "html_url": "https://github.com/expressjs/express/pull/2067",
    "id": 32029953,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwNDc1MTQ=",
    "number": 2067,
    "title": "MVC example: EJS -> Jade.",
    "user": {
      "login": "swrh",
      "id": 195439,
      "node_id": "MDQ6VXNlcjE5NTQzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swrh",
      "html_url": "https://github.com/swrh",
      "followers_url": "https://api.github.com/users/swrh/followers",
      "following_url": "https://api.github.com/users/swrh/following{/other_user}",
      "gists_url": "https://api.github.com/users/swrh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swrh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swrh/subscriptions",
      "organizations_url": "https://api.github.com/users/swrh/orgs",
      "repos_url": "https://api.github.com/users/swrh/repos",
      "events_url": "https://api.github.com/users/swrh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swrh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-23T03:17:59Z",
    "updated_at": "2014-06-12T06:04:09Z",
    "closed_at": "2014-04-23T14:21:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2067",
      "html_url": "https://github.com/expressjs/express/pull/2067",
      "diff_url": "https://github.com/expressjs/express/pull/2067.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2067.patch",
      "merged_at": "2014-04-23T14:21:26Z"
    },
    "body": "This PR removes the usage of EJS in the MVC example and makes it depend only on Jade.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2067/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2066",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2066/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2066/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2066/events",
    "html_url": "https://github.com/expressjs/express/issues/2066",
    "id": 32025743,
    "node_id": "MDU6SXNzdWUzMjAyNTc0Mw==",
    "number": 2066,
    "title": "Express crash with ECONNRESET",
    "user": {
      "login": "wf744",
      "id": 3078907,
      "node_id": "MDQ6VXNlcjMwNzg5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3078907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wf744",
      "html_url": "https://github.com/wf744",
      "followers_url": "https://api.github.com/users/wf744/followers",
      "following_url": "https://api.github.com/users/wf744/following{/other_user}",
      "gists_url": "https://api.github.com/users/wf744/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wf744/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wf744/subscriptions",
      "organizations_url": "https://api.github.com/users/wf744/orgs",
      "repos_url": "https://api.github.com/users/wf744/repos",
      "events_url": "https://api.github.com/users/wf744/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wf744/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-23T01:39:25Z",
    "updated_at": "2014-05-04T13:03:27Z",
    "closed_at": "2014-04-23T05:06:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I m running an Express js application and I get the following error randomly around 5 times during 24h. I cannot reproduce this on purpose. And when the error arise the whole process will crash!\n\nThis is the error with node v0.10.26, and express 3.4.8\n\n```\nWed, 16 Apr 2014 08:17:44 GMT express:router matched get /servlist\n\nstream.js:94\n      throw er; // Unhandled stream error in pipe.\n            ^\nError: write ECONNRESET\n    at errnoException (net.js:904:11)\n    at Object.afterWrite (net.js:720:19)\n```\n\nI can't find any useful information via the error stack!\nHow to solve this problem?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2066/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2065",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2065/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2065/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2065/events",
    "html_url": "https://github.com/expressjs/express/pull/2065",
    "id": 32021813,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwNDMzMDA=",
    "number": 2065,
    "title": "trim_prefix causing --use-strict flag to fail",
    "user": {
      "login": "WebReflection",
      "id": 85749,
      "node_id": "MDQ6VXNlcjg1NzQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/85749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WebReflection",
      "html_url": "https://github.com/WebReflection",
      "followers_url": "https://api.github.com/users/WebReflection/followers",
      "following_url": "https://api.github.com/users/WebReflection/following{/other_user}",
      "gists_url": "https://api.github.com/users/WebReflection/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WebReflection/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WebReflection/subscriptions",
      "organizations_url": "https://api.github.com/users/WebReflection/orgs",
      "repos_url": "https://api.github.com/users/WebReflection/repos",
      "events_url": "https://api.github.com/users/WebReflection/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WebReflection/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 0,
    "created_at": "2014-04-23T00:02:59Z",
    "updated_at": "2014-06-12T06:04:08Z",
    "closed_at": "2014-04-23T00:23:58Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2065",
      "html_url": "https://github.com/expressjs/express/pull/2065",
      "diff_url": "https://github.com/expressjs/express/pull/2065.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2065.patch",
      "merged_at": "2014-04-23T00:23:58Z"
    },
    "body": "as specified in bug https://github.com/visionmedia/express/issues/2051#issue-31472860 the `trim_prefix` function declaration within the `try/catch` causes problems when starting express with `--use_strict` directive.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2065/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2064",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2064/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2064/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2064/events",
    "html_url": "https://github.com/expressjs/express/pull/2064",
    "id": 32020434,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwNDI0NDg=",
    "number": 2064,
    "title": "trim_prefix hoisting within the try/catch causing --use-strict flag to fail",
    "user": {
      "login": "WebReflection",
      "id": 85749,
      "node_id": "MDQ6VXNlcjg1NzQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/85749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WebReflection",
      "html_url": "https://github.com/WebReflection",
      "followers_url": "https://api.github.com/users/WebReflection/followers",
      "following_url": "https://api.github.com/users/WebReflection/following{/other_user}",
      "gists_url": "https://api.github.com/users/WebReflection/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WebReflection/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WebReflection/subscriptions",
      "organizations_url": "https://api.github.com/users/WebReflection/orgs",
      "repos_url": "https://api.github.com/users/WebReflection/repos",
      "events_url": "https://api.github.com/users/WebReflection/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WebReflection/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2014-04-22T23:34:50Z",
    "updated_at": "2014-06-12T05:54:50Z",
    "closed_at": "2014-04-22T23:59:59Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2064",
      "html_url": "https://github.com/expressjs/express/pull/2064",
      "diff_url": "https://github.com/expressjs/express/pull/2064.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2064.patch",
      "merged_at": null
    },
    "body": "since function declaration is hoisted for the scope in any case, there's no reason to ditch `use strict` hint on having that `trim_prefix` nested declaration.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2064/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2063",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2063/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2063/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2063/events",
    "html_url": "https://github.com/expressjs/express/pull/2063",
    "id": 31998315,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwMjg0OTg=",
    "number": 2063,
    "title": "Don't convert header names to lowercase in res.set()",
    "user": {
      "login": "rgrove",
      "id": 1465,
      "node_id": "MDQ6VXNlcjE0NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgrove",
      "html_url": "https://github.com/rgrove",
      "followers_url": "https://api.github.com/users/rgrove/followers",
      "following_url": "https://api.github.com/users/rgrove/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgrove/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgrove/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgrove/subscriptions",
      "organizations_url": "https://api.github.com/users/rgrove/orgs",
      "repos_url": "https://api.github.com/users/rgrove/repos",
      "events_url": "https://api.github.com/users/rgrove/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgrove/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 7,
    "created_at": "2014-04-22T18:34:32Z",
    "updated_at": "2016-10-09T19:47:25Z",
    "closed_at": "2014-04-22T19:38:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2063",
      "html_url": "https://github.com/expressjs/express/pull/2063",
      "diff_url": "https://github.com/expressjs/express/pull/2063.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2063.patch",
      "merged_at": null
    },
    "body": "While technically not a problem as far as HTTP is concerned, some dumb clients do case-sensitive header lookups, and this broke them.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2063/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2062",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2062/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2062/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2062/events",
    "html_url": "https://github.com/expressjs/express/pull/2062",
    "id": 31973856,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwMTM0NDM=",
    "number": 2062,
    "title": "Fix",
    "user": {
      "login": "alexpts",
      "id": 1306916,
      "node_id": "MDQ6VXNlcjEzMDY5MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1306916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexpts",
      "html_url": "https://github.com/alexpts",
      "followers_url": "https://api.github.com/users/alexpts/followers",
      "following_url": "https://api.github.com/users/alexpts/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexpts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexpts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexpts/subscriptions",
      "organizations_url": "https://api.github.com/users/alexpts/orgs",
      "repos_url": "https://api.github.com/users/alexpts/repos",
      "events_url": "https://api.github.com/users/alexpts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexpts/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-22T13:48:07Z",
    "updated_at": "2014-06-25T16:04:08Z",
    "closed_at": "2014-04-22T13:48:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2062",
      "html_url": "https://github.com/expressjs/express/pull/2062",
      "diff_url": "https://github.com/expressjs/express/pull/2062.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2062.patch",
      "merged_at": null
    },
    "body": "remove unndeeded comma\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2062/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2061",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2061/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2061/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2061/events",
    "html_url": "https://github.com/expressjs/express/pull/2061",
    "id": 31904328,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5NzE2OTM=",
    "number": 2061,
    "title": "Make multipart works and add a non-multipart example",
    "user": {
      "login": "dbrugne",
      "id": 4611149,
      "node_id": "MDQ6VXNlcjQ2MTExNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4611149?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbrugne",
      "html_url": "https://github.com/dbrugne",
      "followers_url": "https://api.github.com/users/dbrugne/followers",
      "following_url": "https://api.github.com/users/dbrugne/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbrugne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbrugne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbrugne/subscriptions",
      "organizations_url": "https://api.github.com/users/dbrugne/orgs",
      "repos_url": "https://api.github.com/users/dbrugne/repos",
      "events_url": "https://api.github.com/users/dbrugne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbrugne/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 4,
    "created_at": "2014-04-21T16:09:41Z",
    "updated_at": "2014-06-12T06:04:04Z",
    "closed_at": "2014-04-24T21:50:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2061",
      "html_url": "https://github.com/expressjs/express/pull/2061",
      "diff_url": "https://github.com/expressjs/express/pull/2061.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2061.patch",
      "merged_at": null
    },
    "body": "Repair previous multipart example version and show how to persist req.body for next middlewares.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2061/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2060",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2060/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2060/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2060/events",
    "html_url": "https://github.com/expressjs/express/pull/2060",
    "id": 31901143,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5Njk5MTE=",
    "number": 2060,
    "title": "Fix bugs in MVC example",
    "user": {
      "login": "swrh",
      "id": 195439,
      "node_id": "MDQ6VXNlcjE5NTQzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swrh",
      "html_url": "https://github.com/swrh",
      "followers_url": "https://api.github.com/users/swrh/followers",
      "following_url": "https://api.github.com/users/swrh/following{/other_user}",
      "gists_url": "https://api.github.com/users/swrh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swrh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swrh/subscriptions",
      "organizations_url": "https://api.github.com/users/swrh/orgs",
      "repos_url": "https://api.github.com/users/swrh/repos",
      "events_url": "https://api.github.com/users/swrh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swrh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 5,
    "created_at": "2014-04-21T15:18:20Z",
    "updated_at": "2014-06-12T06:04:03Z",
    "closed_at": "2014-04-23T03:09:49Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2060",
      "html_url": "https://github.com/expressjs/express/pull/2060",
      "diff_url": "https://github.com/expressjs/express/pull/2060.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2060.patch",
      "merged_at": "2014-04-23T03:09:49Z"
    },
    "body": "There are two bugs in the MVC example: it doesn't handle PUT requests and doesn't update pet names. This pull request fix these two bugs with two commits.\n\nCan you please approve it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2060/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2059",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2059/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2059/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2059/events",
    "html_url": "https://github.com/expressjs/express/issues/2059",
    "id": 31866239,
    "node_id": "MDU6SXNzdWUzMTg2NjIzOQ==",
    "number": 2059,
    "title": "param not accessible inside 'mini-app'",
    "user": {
      "login": "prateekbhatt",
      "id": 1881378,
      "node_id": "MDQ6VXNlcjE4ODEzNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1881378?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prateekbhatt",
      "html_url": "https://github.com/prateekbhatt",
      "followers_url": "https://api.github.com/users/prateekbhatt/followers",
      "following_url": "https://api.github.com/users/prateekbhatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/prateekbhatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prateekbhatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prateekbhatt/subscriptions",
      "organizations_url": "https://api.github.com/users/prateekbhatt/orgs",
      "repos_url": "https://api.github.com/users/prateekbhatt/repos",
      "events_url": "https://api.github.com/users/prateekbhatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prateekbhatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-20T14:33:33Z",
    "updated_at": "2014-04-20T14:39:41Z",
    "closed_at": "2014-04-20T14:34:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In my main `app.js` file, I have two routes as follows:\n\n```\napp.use('/repos/:repoId/members', MemberRouter)\napp.use('/repos/', RepoRouter)\n```\n\nIn this case, in `MemberRouter`, I am not able to access the `:repoId` param:\n\n```\nMemberRouter\n  .route('/')\n  .get(function (req, res, next) {\n\n    var repoId = req.params.repoId;\n\n    // NOTE: repoId is undefined\n    ...\n\n    res.json();\n  }\n```\n\nThis behavior is not intuitive.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2059/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2058",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2058/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2058/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2058/events",
    "html_url": "https://github.com/expressjs/express/pull/2058",
    "id": 31859408,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ5NDkyMjg=",
    "number": 2058,
    "title": "support non-ascii filenames in content-disposition headers",
    "user": {
      "login": "vanwagonet",
      "id": 270632,
      "node_id": "MDQ6VXNlcjI3MDYzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/270632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vanwagonet",
      "html_url": "https://github.com/vanwagonet",
      "followers_url": "https://api.github.com/users/vanwagonet/followers",
      "following_url": "https://api.github.com/users/vanwagonet/following{/other_user}",
      "gists_url": "https://api.github.com/users/vanwagonet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vanwagonet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vanwagonet/subscriptions",
      "organizations_url": "https://api.github.com/users/vanwagonet/orgs",
      "repos_url": "https://api.github.com/users/vanwagonet/repos",
      "events_url": "https://api.github.com/users/vanwagonet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vanwagonet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 7,
    "created_at": "2014-04-20T03:20:30Z",
    "updated_at": "2014-06-20T15:23:39Z",
    "closed_at": "2014-04-22T02:12:38Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2058",
      "html_url": "https://github.com/expressjs/express/pull/2058",
      "diff_url": "https://github.com/expressjs/express/pull/2058.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2058.patch",
      "merged_at": "2014-04-22T02:12:38Z"
    },
    "body": "Content-Disposition with non-ascii characters gets garbled on all major browsers. This change fixes obvious problems in all browsers tested.\n## Before\n### Mac OSX 10.9.2\n\nSafari 7.0.3: utf-8 -å.txt\nChrome 34: utf-8 -a«-å.txt\nFirefox 28: utf-8 _a«-å.txt (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\nOpera 20: utf-8 -a«-å.txt\n### Windows XP\n\nInternet Explorer 8: cannot download, can open in browser (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\n### Windows 7\n\nInternet Explorer 9: cannot download, can open in browser (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\n### Windows 8.1\n\nInternet Explorer 11: cannot download, can open in browser (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\nChrome 34: utf-8 -a«-å.txt (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\nFirefox 28: utf-8 _a«-å.txt (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\n## After\n### Mac OSX 10.9.2\n\nSafari 7.0.3: utf-8 한中日.txt\nChrome 34: utf-8 한中日.txt\nFirefox 28: utf-8 한中日.txt (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\nOpera 20: utf-8 한中日.txt\n### Windows XP\n\nInternet Explorer 8: utf-8 ᄒ ᅡ ᆫ中日.txt\n### Windows 7\n\nInternet Explorer 9: utf-8 ᄒ ᅡ ᆫ中日.txt\n### Windows 8.1\n\nInternet Explorer 11: utf-8 ᄒ ᅡ ᆫ中日.txt (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\nChrome 34: utf-8 한中日.txt (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\nFirefox 28: utf-8 ᄒ ᅡ ᆫ中日.txt (displayed as “utf-8 ᄒ ᅡ ᆫ中日.txt” on page)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2058/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2057",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2057/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2057/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2057/events",
    "html_url": "https://github.com/expressjs/express/issues/2057",
    "id": 31770521,
    "node_id": "MDU6SXNzdWUzMTc3MDUyMQ==",
    "number": 2057,
    "title": "Path matching semantics update",
    "user": {
      "login": "blakeembrey",
      "id": 1088987,
      "node_id": "MDQ6VXNlcjEwODg5ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1088987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blakeembrey",
      "html_url": "https://github.com/blakeembrey",
      "followers_url": "https://api.github.com/users/blakeembrey/followers",
      "following_url": "https://api.github.com/users/blakeembrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/blakeembrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blakeembrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blakeembrey/subscriptions",
      "organizations_url": "https://api.github.com/users/blakeembrey/orgs",
      "repos_url": "https://api.github.com/users/blakeembrey/repos",
      "events_url": "https://api.github.com/users/blakeembrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blakeembrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 15,
    "created_at": "2014-04-17T23:07:37Z",
    "updated_at": "2021-12-18T05:22:03Z",
    "closed_at": "2021-12-18T05:22:02Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I would like to make a breaking change update to the way paths match, but I'm interested in everyones opinions before I implement any changes. My biggest gripe right now is that the special characters outside of a custom matching group restricts the characters that can be used inside of a matching group. I want to change this behaviour so only regex characters can be used inside a matching group and characters outside will be escaped.\n\nExamples:\n- `/test?` - currently valid, makes the `t` character optional which really looks like a bug\n- `/:test(.*)` - currently invalid, periods are being escaped and asterisks are being turned into matching any character groups\n- `/(\\\\d+)` - currently won't be indexed properly since we don't have any regex group logic\n- `/\\\\*` - currently invalid, can't escape the meaning of special characters and will still become a match all route\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2057/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2056",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2056/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2056/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2056/events",
    "html_url": "https://github.com/expressjs/express/issues/2056",
    "id": 31741129,
    "node_id": "MDU6SXNzdWUzMTc0MTEyOQ==",
    "number": 2056,
    "title": "Error router.param()",
    "user": {
      "login": "DamienP33",
      "id": 3381192,
      "node_id": "MDQ6VXNlcjMzODExOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3381192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DamienP33",
      "html_url": "https://github.com/DamienP33",
      "followers_url": "https://api.github.com/users/DamienP33/followers",
      "following_url": "https://api.github.com/users/DamienP33/following{/other_user}",
      "gists_url": "https://api.github.com/users/DamienP33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DamienP33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DamienP33/subscriptions",
      "organizations_url": "https://api.github.com/users/DamienP33/orgs",
      "repos_url": "https://api.github.com/users/DamienP33/repos",
      "events_url": "https://api.github.com/users/DamienP33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DamienP33/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2014-04-17T16:24:22Z",
    "updated_at": "2014-05-01T02:30:58Z",
    "closed_at": "2014-05-01T02:30:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Unable to run your example :\n\n``` javascript\nrouter.param('id', /^\\d+$/);\n\nrouter.get('/user/:id', function(req, res){\n  res.send('user ' + req.params.id);\n});\n```\n\n(http://expressjs.com/4x/api.html#router)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2056/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2055",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2055/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2055/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2055/events",
    "html_url": "https://github.com/expressjs/express/issues/2055",
    "id": 31727609,
    "node_id": "MDU6SXNzdWUzMTcyNzYwOQ==",
    "number": 2055,
    "title": "405 for wrong method instead of 404",
    "user": {
      "login": "3nsoft",
      "id": 5834973,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjU4MzQ5NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5834973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3nsoft",
      "html_url": "https://github.com/3nsoft",
      "followers_url": "https://api.github.com/users/3nsoft/followers",
      "following_url": "https://api.github.com/users/3nsoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/3nsoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3nsoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3nsoft/subscriptions",
      "organizations_url": "https://api.github.com/users/3nsoft/orgs",
      "repos_url": "https://api.github.com/users/3nsoft/repos",
      "events_url": "https://api.github.com/users/3nsoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3nsoft/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-17T13:45:57Z",
    "updated_at": "2014-04-17T14:06:12Z",
    "closed_at": "2014-04-17T13:50:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it possible to have 405 (Method Not Allowed) returned in reply to existing url, which was called with a wrong method (e.g. GET instead of POST)?\nCurrently, express returns 404 (Not Found) for existing url, called with a wrong method, and, it is sort of misleading in debugging.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2055/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2054",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2054/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2054/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2054/events",
    "html_url": "https://github.com/expressjs/express/pull/2054",
    "id": 31603021,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ4MDA5NjA=",
    "number": 2054,
    "title": "Allow overwrite of express middleware properties",
    "user": {
      "login": "andrejewski",
      "id": 1660953,
      "node_id": "MDQ6VXNlcjE2NjA5NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1660953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrejewski",
      "html_url": "https://github.com/andrejewski",
      "followers_url": "https://api.github.com/users/andrejewski/followers",
      "following_url": "https://api.github.com/users/andrejewski/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrejewski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrejewski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrejewski/subscriptions",
      "organizations_url": "https://api.github.com/users/andrejewski/orgs",
      "repos_url": "https://api.github.com/users/andrejewski/repos",
      "events_url": "https://api.github.com/users/andrejewski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrejewski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 4,
    "created_at": "2014-04-16T00:21:16Z",
    "updated_at": "2014-06-12T06:04:01Z",
    "closed_at": "2014-04-16T12:50:15Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2054",
      "html_url": "https://github.com/expressjs/express/pull/2054",
      "diff_url": "https://github.com/expressjs/express/pull/2054.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2054.patch",
      "merged_at": null
    },
    "body": "A small fix to allow individuals to backport Express middleware back onto Express for older modules that haven't been (and may never be) made compatible with Express 4.x.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2054/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2053",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2053/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2053/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2053/events",
    "html_url": "https://github.com/expressjs/express/pull/2053",
    "id": 31525230,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ3NTI5NjE=",
    "number": 2053,
    "title": "improve req.xhr test by verifying status code",
    "user": {
      "login": "shawnzhu",
      "id": 1059372,
      "node_id": "MDQ6VXNlcjEwNTkzNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1059372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shawnzhu",
      "html_url": "https://github.com/shawnzhu",
      "followers_url": "https://api.github.com/users/shawnzhu/followers",
      "following_url": "https://api.github.com/users/shawnzhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/shawnzhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shawnzhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shawnzhu/subscriptions",
      "organizations_url": "https://api.github.com/users/shawnzhu/orgs",
      "repos_url": "https://api.github.com/users/shawnzhu/repos",
      "events_url": "https://api.github.com/users/shawnzhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shawnzhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-15T04:17:02Z",
    "updated_at": "2014-06-12T06:04:00Z",
    "closed_at": "2014-04-15T13:34:16Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2053",
      "html_url": "https://github.com/expressjs/express/pull/2053",
      "diff_url": "https://github.com/expressjs/express/pull/2053.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2053.patch",
      "merged_at": "2014-04-15T13:34:16Z"
    },
    "body": "I found this problem from one question on stackoverflow: http://stackoverflow.com/questions/22816121/supertest-test-express-middleware/23074621#23074621\n\nThe `req.xhr` tests will never fail because it doesn't use `.expect()` assertion to return error to `.end()` callback. so it should pass error object to `done()` with `.expect()` assertion.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2053/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2052",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2052/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2052/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2052/events",
    "html_url": "https://github.com/expressjs/express/issues/2052",
    "id": 31507951,
    "node_id": "MDU6SXNzdWUzMTUwNzk1MQ==",
    "number": 2052,
    "title": "app#use(RegExp, Function)",
    "user": {
      "login": "zokeefe",
      "id": 5115849,
      "node_id": "MDQ6VXNlcjUxMTU4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5115849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zokeefe",
      "html_url": "https://github.com/zokeefe",
      "followers_url": "https://api.github.com/users/zokeefe/followers",
      "following_url": "https://api.github.com/users/zokeefe/following{/other_user}",
      "gists_url": "https://api.github.com/users/zokeefe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zokeefe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zokeefe/subscriptions",
      "organizations_url": "https://api.github.com/users/zokeefe/orgs",
      "repos_url": "https://api.github.com/users/zokeefe/repos",
      "events_url": "https://api.github.com/users/zokeefe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zokeefe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025063,
        "node_id": "MDU6TGFiZWw5NTAyNTA2Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-14T21:46:19Z",
    "updated_at": "2014-05-01T02:32:29Z",
    "closed_at": "2014-05-01T02:32:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can we get support for this?\nLooking briefly at it - doesn't look like it'd take much.\n\nI believe it was supported in 3.X if I'm not mistaken\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2052/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2051",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2051/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2051/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2051/events",
    "html_url": "https://github.com/expressjs/express/issues/2051",
    "id": 31472860,
    "node_id": "MDU6SXNzdWUzMTQ3Mjg2MA==",
    "number": 2051,
    "title": "Node --use_strict mode doesn't work with Express",
    "user": {
      "login": "srlm-io",
      "id": 5284696,
      "node_id": "MDQ6VXNlcjUyODQ2OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5284696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srlm-io",
      "html_url": "https://github.com/srlm-io",
      "followers_url": "https://api.github.com/users/srlm-io/followers",
      "following_url": "https://api.github.com/users/srlm-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/srlm-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srlm-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srlm-io/subscriptions",
      "organizations_url": "https://api.github.com/users/srlm-io/orgs",
      "repos_url": "https://api.github.com/users/srlm-io/repos",
      "events_url": "https://api.github.com/users/srlm-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srlm-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 18,
    "created_at": "2014-04-14T15:33:35Z",
    "updated_at": "2014-04-24T22:03:38Z",
    "closed_at": "2014-04-14T18:10:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I try to use the Node.js command option `--use_strict` I get the following error in the Express module:\n\n```\n/express/lib/router/index.js:201\n      function trim_prefix() {\n      ^^^^^^^^\nSyntaxError: In strict mode code, functions can only be declared at top level or immediately within another function.\n```\n\nIt would be great if Node.js applications could use both `--use_strict` and Express.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2051/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2050",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2050/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2050/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2050/events",
    "html_url": "https://github.com/expressjs/express/issues/2050",
    "id": 31467849,
    "node_id": "MDU6SXNzdWUzMTQ2Nzg0OQ==",
    "number": 2050,
    "title": "https in Express 4",
    "user": {
      "login": "angelochen960",
      "id": 688123,
      "node_id": "MDQ6VXNlcjY4ODEyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/688123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/angelochen960",
      "html_url": "https://github.com/angelochen960",
      "followers_url": "https://api.github.com/users/angelochen960/followers",
      "following_url": "https://api.github.com/users/angelochen960/following{/other_user}",
      "gists_url": "https://api.github.com/users/angelochen960/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/angelochen960/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/angelochen960/subscriptions",
      "organizations_url": "https://api.github.com/users/angelochen960/orgs",
      "repos_url": "https://api.github.com/users/angelochen960/repos",
      "events_url": "https://api.github.com/users/angelochen960/events{/privacy}",
      "received_events_url": "https://api.github.com/users/angelochen960/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-14T14:49:24Z",
    "updated_at": "2014-04-14T14:54:23Z",
    "closed_at": "2014-04-14T14:53:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nIn Express 3, we can create a https server:\nhttps.createServer(options, app).listen ...\n\nHow to do this in Express 4? Thanks,\n\nAngelo\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2050/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]