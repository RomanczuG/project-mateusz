[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1547",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1547/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1547/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1547/events",
    "html_url": "https://github.com/expressjs/express/issues/1547",
    "id": 12141662,
    "node_id": "MDU6SXNzdWUxMjE0MTY2Mg==",
    "number": 1547,
    "title": "res.format() overwriting res.type()",
    "user": {
      "login": "ktsuttlemyre",
      "id": 1229777,
      "node_id": "MDQ6VXNlcjEyMjk3Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1229777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ktsuttlemyre",
      "html_url": "https://github.com/ktsuttlemyre",
      "followers_url": "https://api.github.com/users/ktsuttlemyre/followers",
      "following_url": "https://api.github.com/users/ktsuttlemyre/following{/other_user}",
      "gists_url": "https://api.github.com/users/ktsuttlemyre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ktsuttlemyre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ktsuttlemyre/subscriptions",
      "organizations_url": "https://api.github.com/users/ktsuttlemyre/orgs",
      "repos_url": "https://api.github.com/users/ktsuttlemyre/repos",
      "events_url": "https://api.github.com/users/ktsuttlemyre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ktsuttlemyre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-18T16:31:30Z",
    "updated_at": "2013-04-13T16:21:16Z",
    "closed_at": "2013-04-13T16:21:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I have previously set\n\n``` javascript\nres.type('json')\n```\n\nand then call\n\n``` javascript\nres.format({\n    text: function(){\n        res.send('not called');\n    },\n    html: function(){\n        res.send('<html><body>Got This one, but not desired</body></html>')\n            },\n    json: function(){    \n        res.json({ expected: 'THIS ONE' ,but:'Not called'})\n            }\n    });\n```\n\nI expect to get the json format but instead I get the HTML format AND it overwrites my manually set Content-Type\n\nAdditionally:\nIf I attempt to set the content type any other way Example:\n\n``` javascript\n    res.set('Content-Type', 'application/json');\n    res.contentType('application/json');\n    res.setHeader('Content-Type', 'application/json');\n```\n\nthey are also overwritten by res.format()\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1547/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1546",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1546/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1546/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1546/events",
    "html_url": "https://github.com/expressjs/express/issues/1546",
    "id": 12119285,
    "node_id": "MDU6SXNzdWUxMjExOTI4NQ==",
    "number": 1546,
    "title": "app.error() in 4.x",
    "user": {
      "login": "stuartpb",
      "id": 572196,
      "node_id": "MDQ6VXNlcjU3MjE5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/572196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stuartpb",
      "html_url": "https://github.com/stuartpb",
      "followers_url": "https://api.github.com/users/stuartpb/followers",
      "following_url": "https://api.github.com/users/stuartpb/following{/other_user}",
      "gists_url": "https://api.github.com/users/stuartpb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stuartpb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stuartpb/subscriptions",
      "organizations_url": "https://api.github.com/users/stuartpb/orgs",
      "repos_url": "https://api.github.com/users/stuartpb/repos",
      "events_url": "https://api.github.com/users/stuartpb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stuartpb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-18T03:00:03Z",
    "updated_at": "2013-09-09T06:42:19Z",
    "closed_at": "2013-09-09T06:42:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(from the [roadmap](https://github.com/visionmedia/express/wiki/4.x-roadmap))\n\nI don't get how app.error() would work. Would it be like, instead of \n\n``` js\napp.use(function(err,req,res,next){\n  res.status(500);\n  res.render('error', { error: err });\n})\n```\n\nyou would use\n\n``` js\napp.error = function(err){\n  res.status(500);\n  res.render('error', { error: err });\n}\n```\n\nor is it like\n\n``` js\napp.use(function(err,req,res,next){\n  if(!req.params.user) app.error(new Error(\"we never should have come here\"))\n})\n```\n\nand then that starts calling all the error middleware? I don't really see the gain either way\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1546/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1545",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1545/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1545/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1545/events",
    "html_url": "https://github.com/expressjs/express/pull/1545",
    "id": 12091217,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDY1MTgzNw==",
    "number": 1545,
    "title": "Add man page",
    "user": {
      "login": "jamielinux",
      "id": 2598089,
      "node_id": "MDQ6VXNlcjI1OTgwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2598089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamielinux",
      "html_url": "https://github.com/jamielinux",
      "followers_url": "https://api.github.com/users/jamielinux/followers",
      "following_url": "https://api.github.com/users/jamielinux/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamielinux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamielinux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamielinux/subscriptions",
      "organizations_url": "https://api.github.com/users/jamielinux/orgs",
      "repos_url": "https://api.github.com/users/jamielinux/repos",
      "events_url": "https://api.github.com/users/jamielinux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamielinux/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-16T06:17:55Z",
    "updated_at": "2014-06-21T19:08:09Z",
    "closed_at": "2013-10-26T22:29:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1545",
      "html_url": "https://github.com/expressjs/express/pull/1545",
      "diff_url": "https://github.com/expressjs/express/pull/1545.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1545.patch",
      "merged_at": null
    },
    "body": "Might be useful to include.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1545/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1544",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1544/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1544/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1544/events",
    "html_url": "https://github.com/expressjs/express/issues/1544",
    "id": 12088154,
    "node_id": "MDU6SXNzdWUxMjA4ODE1NA==",
    "number": 1544,
    "title": "CoffeeScript compatibility",
    "user": {
      "login": "jorgebg",
      "id": 606597,
      "node_id": "MDQ6VXNlcjYwNjU5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/606597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorgebg",
      "html_url": "https://github.com/jorgebg",
      "followers_url": "https://api.github.com/users/jorgebg/followers",
      "following_url": "https://api.github.com/users/jorgebg/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorgebg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorgebg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorgebg/subscriptions",
      "organizations_url": "https://api.github.com/users/jorgebg/orgs",
      "repos_url": "https://api.github.com/users/jorgebg/repos",
      "events_url": "https://api.github.com/users/jorgebg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorgebg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-16T00:24:37Z",
    "updated_at": "2013-03-16T03:06:45Z",
    "closed_at": "2013-03-16T03:06:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "With [`CoffeeScript`](http://coffeescript.org/) I can extend node's [`http.Server`](http://nodejs.org/api/http.html#http_class_http_server) class:\n\n``` coffeescript\n    {Server} = require 'http'\n    class MyServer extends Server\n      foo: 'bar'\n    myserver = new MyServer\n    console.log myserver.foo # 'bar'\n\n    class MyServer2 extends MyServer\n      constructor: -> super()\n    myserver2 = new MyServer2\n    myserver.listen 3000\n```\n\nIf I have correctly understood [this post](http://stackoverflow.com/questions/5284340/what-is-node-js-connect-express-and-middleware), `express` extends connect`which in turn extends`http.Server`. But the following have some inheritance problems:\n\n``` coffeescript\n    Express = require 'express'\n    class MyApp extends Express\n      foo: 'bar'\n    myapp = new MyApp\n    console.log myapp.foo # undefined\n\n    class MyApp2 extends MyApp\n      constructor: -> super()\n    myapp2 = new MyApp2\n    console.log myapp2 # {}\n    myapp2.listen 3000 # throws TypeError\n```\n\nWhen `listen` is called it throws the following error because `myapp2` is an empty object `{}` and doesn't have the `listen` method:\n\n```\nTypeError: Object #<MyApp2> has no method 'listen'\n```\n\nIs there any way I can use `express` in an Object Oriented Way with `CoffeeScript`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1544/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1543",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1543/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1543/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1543/events",
    "html_url": "https://github.com/expressjs/express/issues/1543",
    "id": 11963282,
    "node_id": "MDU6SXNzdWUxMTk2MzI4Mg==",
    "number": 1543,
    "title": "http.js:644 - Can't set headers after they are sent.",
    "user": {
      "login": "akamensky",
      "id": 985805,
      "node_id": "MDQ6VXNlcjk4NTgwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/985805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akamensky",
      "html_url": "https://github.com/akamensky",
      "followers_url": "https://api.github.com/users/akamensky/followers",
      "following_url": "https://api.github.com/users/akamensky/following{/other_user}",
      "gists_url": "https://api.github.com/users/akamensky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akamensky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akamensky/subscriptions",
      "organizations_url": "https://api.github.com/users/akamensky/orgs",
      "repos_url": "https://api.github.com/users/akamensky/repos",
      "events_url": "https://api.github.com/users/akamensky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akamensky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-03-13T08:03:23Z",
    "updated_at": "2013-04-13T16:18:46Z",
    "closed_at": "2013-03-16T04:53:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just got this issue last week. The application will crash with following stack trace:\n\n```\nhttp.js:644\nthrow new Error('Can\\'t set headers after they are sent.');\n      ^\nError: Can't set headers after they are sent.\nat ServerResponse.OutgoingMessage.setHeader (http.js:644:11)\nat ServerResponse.res.setHeader (/home/live/www/node_modules/express/node_modules/connect/lib/patch.js:59:22)\nat ServerResponse.res.set.res.header (/home/live/www/node_modules/express/lib/response.js:475:10)\nat ServerResponse.res.contentType.res.type (/home/live/www/node_modules/express/lib/response.js:350:15)\nat ServerResponse.res.send (/home/live/www/node_modules/express/lib/response.js:111:14)\nat /home/live/www/routes/page.js:7:9\nat SendStream.error (/home/live/www/node_modules/express/node_modules/connect/lib/middleware/static.js:67:37)\nat SendStream.EventEmitter.emit (events.js:115:20)\nat SendStream.error (/home/live/www/node_modules/express/node_modules/send/lib/send.js:144:51)\nat SendStream.onStatError (/home/live/www/node_modules/express/node_modules/send/lib/send.js:245:48)\n```\n\nIt happens both on dev and production servers. It is not happening with every request, but rather at very random. I was trying to figure out conditions when this happens, but could not find any specific situation when it happens. So this is why i've decided to post it here. I am not sure whether it is the problem of Express or node itself or any other 3rd party modules.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1543/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1542",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1542/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1542/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1542/events",
    "html_url": "https://github.com/expressjs/express/issues/1542",
    "id": 11951528,
    "node_id": "MDU6SXNzdWUxMTk1MTUyOA==",
    "number": 1542,
    "title": "res.jsonp() in response to a POST",
    "user": {
      "login": "peebles",
      "id": 2389297,
      "node_id": "MDQ6VXNlcjIzODkyOTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2389297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peebles",
      "html_url": "https://github.com/peebles",
      "followers_url": "https://api.github.com/users/peebles/followers",
      "following_url": "https://api.github.com/users/peebles/following{/other_user}",
      "gists_url": "https://api.github.com/users/peebles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peebles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peebles/subscriptions",
      "organizations_url": "https://api.github.com/users/peebles/orgs",
      "repos_url": "https://api.github.com/users/peebles/repos",
      "events_url": "https://api.github.com/users/peebles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peebles/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-12T22:41:30Z",
    "updated_at": "2013-03-13T22:19:49Z",
    "closed_at": "2013-03-13T00:23:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "res.jsonp() does\n\n  (...)\n  var callback = this.req.query[app.get('jsonp callback name')];\n  (..)\n  if (callback) {\n\nThis only works for GET.  For POSTs, this.req.body[] contains the callback name.  Perhaps the better code would be:\n\n  var callback = this.req.param( app.get('jsonp callback name') );\n\nwhich would check params, body and query for the callback name.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1542/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1541",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1541/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1541/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1541/events",
    "html_url": "https://github.com/expressjs/express/issues/1541",
    "id": 11935479,
    "node_id": "MDU6SXNzdWUxMTkzNTQ3OQ==",
    "number": 1541,
    "title": "Express session data not being stored on linux with Safari",
    "user": {
      "login": "joebnimble",
      "id": 2382321,
      "node_id": "MDQ6VXNlcjIzODIzMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2382321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joebnimble",
      "html_url": "https://github.com/joebnimble",
      "followers_url": "https://api.github.com/users/joebnimble/followers",
      "following_url": "https://api.github.com/users/joebnimble/following{/other_user}",
      "gists_url": "https://api.github.com/users/joebnimble/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joebnimble/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joebnimble/subscriptions",
      "organizations_url": "https://api.github.com/users/joebnimble/orgs",
      "repos_url": "https://api.github.com/users/joebnimble/repos",
      "events_url": "https://api.github.com/users/joebnimble/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joebnimble/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-03-12T17:31:29Z",
    "updated_at": "2013-09-28T14:47:48Z",
    "closed_at": "2013-03-13T00:24:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Setting req.session.auth while running express on OSx Mountain Lion works, but while on Debian Squeeze it will not set session data ONLY while using Safari Mobile or Desktop Safari.  Works fine with Google Chrome.  Very strange.\n\nPlease let me know of any information needed or if there is a simple fix.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1541/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1540",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1540/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1540/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1540/events",
    "html_url": "https://github.com/expressjs/express/pull/1540",
    "id": 11923534,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDU2ODE5Mw==",
    "number": 1540,
    "title": "Use End-of-line Node constant",
    "user": {
      "login": "fern4lvarez",
      "id": 1381925,
      "node_id": "MDQ6VXNlcjEzODE5MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1381925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fern4lvarez",
      "html_url": "https://github.com/fern4lvarez",
      "followers_url": "https://api.github.com/users/fern4lvarez/followers",
      "following_url": "https://api.github.com/users/fern4lvarez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fern4lvarez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fern4lvarez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fern4lvarez/subscriptions",
      "organizations_url": "https://api.github.com/users/fern4lvarez/orgs",
      "repos_url": "https://api.github.com/users/fern4lvarez/repos",
      "events_url": "https://api.github.com/users/fern4lvarez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fern4lvarez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-12T13:17:20Z",
    "updated_at": "2014-07-16T11:14:02Z",
    "closed_at": "2013-03-13T00:24:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1540",
      "html_url": "https://github.com/expressjs/express/pull/1540",
      "diff_url": "https://github.com/expressjs/express/pull/1540.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1540.patch",
      "merged_at": "2013-03-13T00:24:36Z"
    },
    "body": "Use End-of-line Node constant on OS module, avoiding repeating code:\n\n```\n// express/bin/express\nvar eol = 'win32' == os.platform() ? '\\r\\n' : '\\n'\n\n// node/lib/os.js\nexports.EOL = process.platform === 'win32' ? '\\r\\n' : '\\n';\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1540/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1539",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1539/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1539/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1539/events",
    "html_url": "https://github.com/expressjs/express/issues/1539",
    "id": 11902534,
    "node_id": "MDU6SXNzdWUxMTkwMjUzNA==",
    "number": 1539,
    "title": "req.originalMethod is undefined",
    "user": {
      "login": "justinwalsh",
      "id": 1172959,
      "node_id": "MDQ6VXNlcjExNzI5NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1172959?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinwalsh",
      "html_url": "https://github.com/justinwalsh",
      "followers_url": "https://api.github.com/users/justinwalsh/followers",
      "following_url": "https://api.github.com/users/justinwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinwalsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinwalsh/subscriptions",
      "organizations_url": "https://api.github.com/users/justinwalsh/orgs",
      "repos_url": "https://api.github.com/users/justinwalsh/repos",
      "events_url": "https://api.github.com/users/justinwalsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinwalsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-11T23:08:47Z",
    "updated_at": "2013-03-11T23:22:21Z",
    "closed_at": "2013-03-11T23:22:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Was this depreciated? Is there something to replace it?\n\nreq.originalMethod is usually filled in with the HTTP Method before method overriding. Useful when checking if req.method === req.originalMethod.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1539/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1538",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1538/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1538/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1538/events",
    "html_url": "https://github.com/expressjs/express/issues/1538",
    "id": 11873434,
    "node_id": "MDU6SXNzdWUxMTg3MzQzNA==",
    "number": 1538,
    "title": "Unit tests failure: req .signedCookies should return a signed cookie",
    "user": {
      "login": "fern4lvarez",
      "id": 1381925,
      "node_id": "MDQ6VXNlcjEzODE5MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1381925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fern4lvarez",
      "html_url": "https://github.com/fern4lvarez",
      "followers_url": "https://api.github.com/users/fern4lvarez/followers",
      "following_url": "https://api.github.com/users/fern4lvarez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fern4lvarez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fern4lvarez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fern4lvarez/subscriptions",
      "organizations_url": "https://api.github.com/users/fern4lvarez/orgs",
      "repos_url": "https://api.github.com/users/fern4lvarez/repos",
      "events_url": "https://api.github.com/users/fern4lvarez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fern4lvarez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2013-03-11T11:46:32Z",
    "updated_at": "2013-09-18T08:03:13Z",
    "closed_at": "2013-09-17T07:55:21Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I found this error running unit tests. Just to make sure, I cloned the repo again, installed dependencies and ran tests again. So reproducing the failure is straight-forward for me:\n\n```\n# On Ubuntu 12.04, running node v.0.8.22\n$ git clone git@github.com:visionmedia/express.git\n$ cd express\n$ sudo su\n# npm install\n# make test\n...\n✖ 1 of 377 tests failed:\n\n1) req .signedCookies should return a signed cookie:\n   Error: expected '{\"foo\":\"bar\"}' response body, got '{\"obj\":{\"foo\":\"bar\"},\"foo\":\"bar\"}'\n    at Test.assert (/home/fa/github/express/node_modules/supertest/lib/test.js:140:17)\n    at Test.end (/home/fa/github/express/node_modules/supertest/lib/test.js:102:10)\n    at Test.<anonymous> (/home/fa/github/express/node_modules/supertest/node_modules/superagent/lib/node/index.js:124:10)\n    at Test.EventEmitter.emit (events.js:88:17)\n    at IncomingMessage.Request.end (/home/fa/github/express/node_modules/supertest/node_modules/superagent/lib/node/index.js:565:12)\n    at IncomingMessage.EventEmitter.emit (events.js:115:20)\n    at IncomingMessage._emitEnd (http.js:366:10)\n    at HTTPParser.parserOnMessageComplete [as onMessageComplete] (http.js:149:23)\n    at Socket.socketOnData (http.js:1366:20)\n    at TCP.onread (net.js:402:27)\n```\n\nSomething wrong with my local set-up?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1538/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1537",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1537/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1537/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1537/events",
    "html_url": "https://github.com/expressjs/express/issues/1537",
    "id": 11845468,
    "node_id": "MDU6SXNzdWUxMTg0NTQ2OA==",
    "number": 1537,
    "title": "session doesn't work",
    "user": {
      "login": "jney",
      "id": 747,
      "node_id": "MDQ6VXNlcjc0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jney",
      "html_url": "https://github.com/jney",
      "followers_url": "https://api.github.com/users/jney/followers",
      "following_url": "https://api.github.com/users/jney/following{/other_user}",
      "gists_url": "https://api.github.com/users/jney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jney/subscriptions",
      "organizations_url": "https://api.github.com/users/jney/orgs",
      "repos_url": "https://api.github.com/users/jney/repos",
      "events_url": "https://api.github.com/users/jney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jney/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-09T22:58:04Z",
    "updated_at": "2013-03-10T08:36:06Z",
    "closed_at": "2013-03-10T08:36:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is a basic use of session : \n\n```\nvar express     = require('express');\nvar app         = express();\n\napp.configure(function () {\n  app.use(express.bodyParser());\n  app.use(express.cookieParser());\n  app.use(express.session({secret: 'secret'}));\n  app.use(app.router);\n});\n\napp.get('/', function (req, res){\n  console.log(req.session.foo);\n  req.session.foo = 'bar';\n  res.end('done');\n});\n\napp.listen(3000);\n```\n\nI run many `curl http://localhost:3000/`, but it always tells me that `req.session.foo` is `undefined`\nCan you tell me if it's a bug, or where do i find documentation about session if it's my bad.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1537/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1536",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1536/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1536/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1536/events",
    "html_url": "https://github.com/expressjs/express/issues/1536",
    "id": 11807264,
    "node_id": "MDU6SXNzdWUxMTgwNzI2NA==",
    "number": 1536,
    "title": "Can't read XHR2 FormData data",
    "user": {
      "login": "invegas",
      "id": 3273830,
      "node_id": "MDQ6VXNlcjMyNzM4MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3273830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/invegas",
      "html_url": "https://github.com/invegas",
      "followers_url": "https://api.github.com/users/invegas/followers",
      "following_url": "https://api.github.com/users/invegas/following{/other_user}",
      "gists_url": "https://api.github.com/users/invegas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/invegas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/invegas/subscriptions",
      "organizations_url": "https://api.github.com/users/invegas/orgs",
      "repos_url": "https://api.github.com/users/invegas/repos",
      "events_url": "https://api.github.com/users/invegas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/invegas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-03-08T14:44:15Z",
    "updated_at": "2013-03-13T00:29:51Z",
    "closed_at": "2013-03-13T00:29:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In client I use XHR2 Formdata to upload file in ajax:\n\n``` javascript\nvar send = function (file) {\n        var xhr = new XMLHttpRequest();\n        xhr.file = file; \n        xhr.open('post', '/upload', true);\n        xhr.send(file);     \n}\n\nvar fd = new FormData();\nfd.append('image', _file); // the _file is my file \n\nxhr.send(fd);\n```\n\nin node.js server:\n\n``` javascript\napp.configure(function(){\n    app.use(express.bodyParser({\n        uploadDir: \"public/images\",\n        keepExtensions: true,\n        limit: 10000000, /* 10M  10*1000*1000 */  \n        defer: true \n    }));\n    app.use(express.static(__dirname + \"/public\"));\n});\n\n\n\napp.post(\"/upload\", function (req, res) {\n    console.log(req.files);\n    console.log(req.body);\n\n    res.send(\"ok\");\n})\n```\n\nthe strange thing is, the file could upload successfully, it can't log the req.files and req.body information, they are all empty object\n\nso how can I get the upload file's information, like the save path, size or name?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1536/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1536/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1535",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1535/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1535/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1535/events",
    "html_url": "https://github.com/expressjs/express/issues/1535",
    "id": 11760316,
    "node_id": "MDU6SXNzdWUxMTc2MDMxNg==",
    "number": 1535,
    "title": "express -v",
    "user": {
      "login": "Starefossen",
      "id": 968267,
      "node_id": "MDQ6VXNlcjk2ODI2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/968267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Starefossen",
      "html_url": "https://github.com/Starefossen",
      "followers_url": "https://api.github.com/users/Starefossen/followers",
      "following_url": "https://api.github.com/users/Starefossen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Starefossen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Starefossen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Starefossen/subscriptions",
      "organizations_url": "https://api.github.com/users/Starefossen/orgs",
      "repos_url": "https://api.github.com/users/Starefossen/repos",
      "events_url": "https://api.github.com/users/Starefossen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Starefossen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-07T14:01:14Z",
    "updated_at": "2013-07-04T14:02:04Z",
    "closed_at": "2013-07-04T14:02:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Please, change `express -V` to `express -v` in the CLI, or have them both.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1535/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1534",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1534/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1534/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1534/events",
    "html_url": "https://github.com/expressjs/express/pull/1534",
    "id": 11755103,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTI3NQ==",
    "number": 1534,
    "title": "Made quotes consistent in generated app.js",
    "user": {
      "login": "lennym",
      "id": 117398,
      "node_id": "MDQ6VXNlcjExNzM5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/117398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lennym",
      "html_url": "https://github.com/lennym",
      "followers_url": "https://api.github.com/users/lennym/followers",
      "following_url": "https://api.github.com/users/lennym/following{/other_user}",
      "gists_url": "https://api.github.com/users/lennym/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lennym/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lennym/subscriptions",
      "organizations_url": "https://api.github.com/users/lennym/orgs",
      "repos_url": "https://api.github.com/users/lennym/repos",
      "events_url": "https://api.github.com/users/lennym/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lennym/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-07T11:12:46Z",
    "updated_at": "2014-08-06T15:07:22Z",
    "closed_at": "2013-03-13T22:43:19Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1534",
      "html_url": "https://github.com/expressjs/express/pull/1534",
      "diff_url": "https://github.com/expressjs/express/pull/1534.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1534.patch",
      "merged_at": "2013-03-13T22:43:19Z"
    },
    "body": "One-off use of double quotes in generated app.js aggravated my OCD. Replaced with single quotes.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1534/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1533",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1533/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1533/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1533/events",
    "html_url": "https://github.com/expressjs/express/pull/1533",
    "id": 11735688,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTgzOQ==",
    "number": 1533,
    "title": "Removed old references to viewCallbacks",
    "user": {
      "login": "shesek",
      "id": 877904,
      "node_id": "MDQ6VXNlcjg3NzkwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shesek",
      "html_url": "https://github.com/shesek",
      "followers_url": "https://api.github.com/users/shesek/followers",
      "following_url": "https://api.github.com/users/shesek/following{/other_user}",
      "gists_url": "https://api.github.com/users/shesek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shesek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
      "organizations_url": "https://api.github.com/users/shesek/orgs",
      "repos_url": "https://api.github.com/users/shesek/repos",
      "events_url": "https://api.github.com/users/shesek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shesek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-06T22:17:06Z",
    "updated_at": "2014-08-06T15:23:29Z",
    "closed_at": "2013-03-06T22:31:45Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1533",
      "html_url": "https://github.com/expressjs/express/pull/1533",
      "diff_url": "https://github.com/expressjs/express/pull/1533.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1533.patch",
      "merged_at": "2013-03-06T22:31:45Z"
    },
    "body": "Was part of the deprecated locals.use() functionality, looks like its not needed anymore.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1533/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1532",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1532/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1532/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1532/events",
    "html_url": "https://github.com/expressjs/express/pull/1532",
    "id": 11695858,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjAzOA==",
    "number": 1532,
    "title": "All __dirname concatenated paths use path.join() in express generated app",
    "user": {
      "login": "mcauser",
      "id": 1038959,
      "node_id": "MDQ6VXNlcjEwMzg5NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1038959?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcauser",
      "html_url": "https://github.com/mcauser",
      "followers_url": "https://api.github.com/users/mcauser/followers",
      "following_url": "https://api.github.com/users/mcauser/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcauser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcauser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcauser/subscriptions",
      "organizations_url": "https://api.github.com/users/mcauser/orgs",
      "repos_url": "https://api.github.com/users/mcauser/repos",
      "events_url": "https://api.github.com/users/mcauser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcauser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-06T01:47:21Z",
    "updated_at": "2013-03-06T01:49:23Z",
    "closed_at": "2013-03-06T01:49:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1532",
      "html_url": "https://github.com/expressjs/express/pull/1532",
      "diff_url": "https://github.com/expressjs/express/pull/1532.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1532.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1532/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1531",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1531/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1531/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1531/events",
    "html_url": "https://github.com/expressjs/express/pull/1531",
    "id": 11663476,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0NTI4Mw==",
    "number": 1531,
    "title": "Updated references to jscoverage to use as a package dependency instead",
    "user": {
      "login": "asmblah",
      "id": 1714005,
      "node_id": "MDQ6VXNlcjE3MTQwMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1714005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asmblah",
      "html_url": "https://github.com/asmblah",
      "followers_url": "https://api.github.com/users/asmblah/followers",
      "following_url": "https://api.github.com/users/asmblah/following{/other_user}",
      "gists_url": "https://api.github.com/users/asmblah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asmblah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asmblah/subscriptions",
      "organizations_url": "https://api.github.com/users/asmblah/orgs",
      "repos_url": "https://api.github.com/users/asmblah/repos",
      "events_url": "https://api.github.com/users/asmblah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asmblah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-05T11:40:18Z",
    "updated_at": "2013-04-01T18:13:54Z",
    "closed_at": "2013-04-01T18:13:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1531",
      "html_url": "https://github.com/expressjs/express/pull/1531",
      "diff_url": "https://github.com/expressjs/express/pull/1531.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1531.patch",
      "merged_at": null
    },
    "body": "Makes it easier to run \"make test-cov\" etc. when \"jscoverage\" is not in PATH\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1531/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1530",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1530/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1530/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1530/events",
    "html_url": "https://github.com/expressjs/express/issues/1530",
    "id": 11645970,
    "node_id": "MDU6SXNzdWUxMTY0NTk3MA==",
    "number": 1530,
    "title": "Session destroy",
    "user": {
      "login": "alnoor",
      "id": 1174303,
      "node_id": "MDQ6VXNlcjExNzQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1174303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alnoor",
      "html_url": "https://github.com/alnoor",
      "followers_url": "https://api.github.com/users/alnoor/followers",
      "following_url": "https://api.github.com/users/alnoor/following{/other_user}",
      "gists_url": "https://api.github.com/users/alnoor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alnoor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alnoor/subscriptions",
      "organizations_url": "https://api.github.com/users/alnoor/orgs",
      "repos_url": "https://api.github.com/users/alnoor/repos",
      "events_url": "https://api.github.com/users/alnoor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alnoor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-03-04T23:59:32Z",
    "updated_at": "2013-03-06T22:33:25Z",
    "closed_at": "2013-03-06T22:33:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using mem cache for sessions \n\nOn logout \nI call session destroy , followed by console.log (req.session) and the session variables I saved are gone (this seems to be as one would expect)  \n\nI go the client browser and hit the browser back and the application screen i had previously render shows up \n(from the browser cache) \nI click on a component on the screen expecting that since there is no session (stored user id in the session) , the requiresLogin function will kick me out but instead i find the session content is regenerated. \n\nThe session destroy did not completely remove  the session content, I am assuming that  connect/ express using the cookie retrieves the session content  from memcache .\n\nI have tried to delete the session variable as well as the session.destroy neither works. is there a way to destroy the session and have it not regenerate\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1530/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1529",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1529/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1529/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1529/events",
    "html_url": "https://github.com/expressjs/express/issues/1529",
    "id": 11640669,
    "node_id": "MDU6SXNzdWUxMTY0MDY2OQ==",
    "number": 1529,
    "title": "req.files.someFiles array does not match order of files as sent by the client",
    "user": {
      "login": "lazd",
      "id": 201344,
      "node_id": "MDQ6VXNlcjIwMTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/201344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lazd",
      "html_url": "https://github.com/lazd",
      "followers_url": "https://api.github.com/users/lazd/followers",
      "following_url": "https://api.github.com/users/lazd/following{/other_user}",
      "gists_url": "https://api.github.com/users/lazd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lazd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lazd/subscriptions",
      "organizations_url": "https://api.github.com/users/lazd/orgs",
      "repos_url": "https://api.github.com/users/lazd/repos",
      "events_url": "https://api.github.com/users/lazd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lazd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-03-04T21:48:23Z",
    "updated_at": "2013-10-02T06:48:53Z",
    "closed_at": "2013-10-02T06:48:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When uploading multiple files:\n\n``` html\n<input type=\"file\" name=\"someFiles\" multiple=\"\">\n```\n\nThe request payload will contain the files in a given order:\n\n```\n------WebKitFormBoundarysdCznBBo6SohkEj8\nContent-Disposition: form-data; name=\"someFiles\"; filename=\"file1.jpg\"\nContent-Type: image/jpeg\n\n\n------WebKitFormBoundarysdCznBBo6SohkEj8\nContent-Disposition: form-data; name=\"someFiles\"; filename=\"file2.jpeg\"\nContent-Type: image/jpeg\n\n\n------WebKitFormBoundarysdCznBBo6SohkEj8\nContent-Disposition: form-data; name=\"someFiles\"; filename=\"file3.jpeg\"\nContent-Type: image/jpeg\n```\n\nWhen handling the request, the order of `req.files.someField` does not match the order of the request payload.\n\nThis may be a connect or node-formidable bug, but I am filing against express as I have not done isolated testing.\n\n**Background:** The goal is to associate an uploaded file with a user-provided label. The labels are provided via a series of text fields with named `someFileLabels` that are added to the form when the `someFiles` input changes.\n\nThe request that is sent to the server contains the files and the labels in the same order.\n\nHowever, when the request is handled on the server, the indicies of `req.files.someFiles` do not match those of `req.body.someFileLabels` (which matches the order sent), so it is impossible to associate the label with the file.\n\nIt is possible for filename and size to be identical, so it's not easy to hack around this by naming the label fields according to the filename.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1529/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1528",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1528/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1528/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1528/events",
    "html_url": "https://github.com/expressjs/express/issues/1528",
    "id": 11634124,
    "node_id": "MDU6SXNzdWUxMTYzNDEyNA==",
    "number": 1528,
    "title": "Ember.js With Express",
    "user": {
      "login": "tarun29061990",
      "id": 1535607,
      "node_id": "MDQ6VXNlcjE1MzU2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1535607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarun29061990",
      "html_url": "https://github.com/tarun29061990",
      "followers_url": "https://api.github.com/users/tarun29061990/followers",
      "following_url": "https://api.github.com/users/tarun29061990/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarun29061990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarun29061990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarun29061990/subscriptions",
      "organizations_url": "https://api.github.com/users/tarun29061990/orgs",
      "repos_url": "https://api.github.com/users/tarun29061990/repos",
      "events_url": "https://api.github.com/users/tarun29061990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarun29061990/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-04T19:27:26Z",
    "updated_at": "2013-03-04T19:28:37Z",
    "closed_at": "2013-03-04T19:28:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a way to combine ember.js with express ...  I have done it using convoy and connect but i want to do it with express ... is there any way please let me know?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1528/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1527",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1527/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1527/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1527/events",
    "html_url": "https://github.com/expressjs/express/issues/1527",
    "id": 11624487,
    "node_id": "MDU6SXNzdWUxMTYyNDQ4Nw==",
    "number": 1527,
    "title": "res.sendfile does not respect next in mounted applications",
    "user": {
      "login": "RGBboy",
      "id": 1566539,
      "node_id": "MDQ6VXNlcjE1NjY1Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1566539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RGBboy",
      "html_url": "https://github.com/RGBboy",
      "followers_url": "https://api.github.com/users/RGBboy/followers",
      "following_url": "https://api.github.com/users/RGBboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/RGBboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RGBboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RGBboy/subscriptions",
      "organizations_url": "https://api.github.com/users/RGBboy/orgs",
      "repos_url": "https://api.github.com/users/RGBboy/repos",
      "events_url": "https://api.github.com/users/RGBboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RGBboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-03-04T15:52:41Z",
    "updated_at": "2013-09-10T04:51:41Z",
    "closed_at": "2013-09-10T04:51:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When a mounted app tries res.sendfile with a path to a directory the mounted applications next function is not called. Instead the main applications next function is called. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1527/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1526",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1526/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1526/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1526/events",
    "html_url": "https://github.com/expressjs/express/issues/1526",
    "id": 11594953,
    "node_id": "MDU6SXNzdWUxMTU5NDk1Mw==",
    "number": 1526,
    "title": "request.cookie(\"name\",\"value\") segmentation fault.",
    "user": {
      "login": "misterjt",
      "id": 1521354,
      "node_id": "MDQ6VXNlcjE1MjEzNTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1521354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/misterjt",
      "html_url": "https://github.com/misterjt",
      "followers_url": "https://api.github.com/users/misterjt/followers",
      "following_url": "https://api.github.com/users/misterjt/following{/other_user}",
      "gists_url": "https://api.github.com/users/misterjt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/misterjt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/misterjt/subscriptions",
      "organizations_url": "https://api.github.com/users/misterjt/orgs",
      "repos_url": "https://api.github.com/users/misterjt/repos",
      "events_url": "https://api.github.com/users/misterjt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/misterjt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-03-03T18:15:17Z",
    "updated_at": "2013-03-10T16:38:17Z",
    "closed_at": "2013-03-04T16:36:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "request.cookie(\"name\",\"value\") makes segmentation fault. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1526/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1525",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1525/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1525/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1525/events",
    "html_url": "https://github.com/expressjs/express/issues/1525",
    "id": 11576523,
    "node_id": "MDU6SXNzdWUxMTU3NjUyMw==",
    "number": 1525,
    "title": "Express looks for static files in wrong location when url path is more than two levels deep",
    "user": {
      "login": "geoffreyvanwyk",
      "id": 194185,
      "node_id": "MDQ6VXNlcjE5NDE4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/194185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geoffreyvanwyk",
      "html_url": "https://github.com/geoffreyvanwyk",
      "followers_url": "https://api.github.com/users/geoffreyvanwyk/followers",
      "following_url": "https://api.github.com/users/geoffreyvanwyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/geoffreyvanwyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geoffreyvanwyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geoffreyvanwyk/subscriptions",
      "organizations_url": "https://api.github.com/users/geoffreyvanwyk/orgs",
      "repos_url": "https://api.github.com/users/geoffreyvanwyk/repos",
      "events_url": "https://api.github.com/users/geoffreyvanwyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geoffreyvanwyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-02T14:09:44Z",
    "updated_at": "2013-03-02T22:15:18Z",
    "closed_at": "2013-03-02T22:15:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is the app.js file, which is used by another app.js file:\n\n```\n\"use strict\";\nvar express = require('express'), engine = require('ejs-locals');\nvar path = require('path'), map = require('../../app').map;\nvar register = require('./routes/register').register;   \nvar profile = require('./routes/profile').profile;      \nvar login = require('./routes/login').login;            \n\nvar app = module.exports = express();\napp.configure(function() {\n    app.engine('ejs', engine);\n    app.set('views', __dirname + '/views');\n    app.set('view engine', 'ejs');\n    app.use('/assets', express.static(path.join(__dirname, 'assets')));\n});\n\napp.configure('development', function() {\n    app.use(express.errorHandler());\n});\n\napp.map = map;\napp.map(app, {\n    '/seller': {\n        '/password': {\n            get: login.forgot, // Looks in the correct place /assets/css/... etc.\n            '/forgot': {\n                get: login.forgot // Looks in wrong place /seller/assets/... etc.\n            },\n            '/reset': {\n                get: login.reset\n            }\n        }\n    }\n});\n```\n\nWhen GET `http://localhost:3000/seller/password` is requested, express looks for the static files in the correct location, namely **_/assets/css/**_. \n\nBut when GET `http://localhost:3000/seller/password/forgot` is requested, express looks for the static files in the wrong place, namely **_/seller/assets/css**_, which does not even exist.\n\nThis is the map function. It is taken from the express [route-map example](https://github.com/visionmedia/express/blob/master/examples/route-map/index.js).\n\n```\nfunction route_map(app, a, route) {\n    route = route || '';\n    for (var key in a) {\n        switch (typeof a[key]) {\n            case 'object': // { '/path': { ... }}\n            app.map(app, a[key], route + key);\n            break;\n            case 'function': // get: function(){ ... }\n            app[key](route, a[key]);\n            break;\n        }\n    }\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1525/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1524",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1524/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1524/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1524/events",
    "html_url": "https://github.com/expressjs/express/issues/1524",
    "id": 11576499,
    "node_id": "MDU6SXNzdWUxMTU3NjQ5OQ==",
    "number": 1524,
    "title": "Express looks for static files in wrong location when url path is more than two levels deep",
    "user": {
      "login": "geoffreyvanwyk",
      "id": 194185,
      "node_id": "MDQ6VXNlcjE5NDE4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/194185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geoffreyvanwyk",
      "html_url": "https://github.com/geoffreyvanwyk",
      "followers_url": "https://api.github.com/users/geoffreyvanwyk/followers",
      "following_url": "https://api.github.com/users/geoffreyvanwyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/geoffreyvanwyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geoffreyvanwyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geoffreyvanwyk/subscriptions",
      "organizations_url": "https://api.github.com/users/geoffreyvanwyk/orgs",
      "repos_url": "https://api.github.com/users/geoffreyvanwyk/repos",
      "events_url": "https://api.github.com/users/geoffreyvanwyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geoffreyvanwyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-02T14:08:28Z",
    "updated_at": "2013-03-02T19:10:03Z",
    "closed_at": "2013-03-02T14:14:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is the app.js file, which is used by another app,js file:\n\n```\n\"use strict\";\n\nvar express = require('express');\nvar engine = require('ejs-locals');\nvar path = require('path'); \nvar map = require('../../app').map;\nvar register = require('./routes/register').register;   // For working with the register.ejs view.\nvar profile = require('./routes/profile').profile;      // For working with the profile.ejs view.\nvar login = require('./routes/login').login;            // For working with the login.ejs view.\n\nvar app = module.exports = express();\n\napp.configure(function() {\n    app.engine('ejs', engine);\n    app.set('views', __dirname + '/views');\n    app.set('view engine', 'ejs');\n    app.use('/assets', express.static(path.join(__dirname, 'assets')));\n});\n\napp.configure('development', function() {\n    app.use(express.errorHandler());\n});\n\napp.map = map;\n\napp.map(app, {\n    '/seller': {\n    '/password': {\n            get: login.forgot, // Looks for static files in the correct place /assets/css/... etc.\n        '/forgot': {\n        get: login.forgot // Looks for static files in wrong place /seller/assets/... etc.\n        },\n        '/reset': {\n        get: login.reset\n        }\n    }\n    }\n});\n```\n\nWhen GET /seller/password is requested, express looks for the static files in the correct location, namely /assets/css/. But when /seller/password/forgot is requested, express looks for the static files in the wrong place, namely /seller/assets/css, which does not even exist.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1524/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1523",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1523/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1523/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1523/events",
    "html_url": "https://github.com/expressjs/express/pull/1523",
    "id": 11534904,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM4OTY2NQ==",
    "number": 1523,
    "title": "Remove some superfluous trailing whitespace",
    "user": {
      "login": "thomseddon",
      "id": 747138,
      "node_id": "MDQ6VXNlcjc0NzEzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/747138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomseddon",
      "html_url": "https://github.com/thomseddon",
      "followers_url": "https://api.github.com/users/thomseddon/followers",
      "following_url": "https://api.github.com/users/thomseddon/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomseddon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomseddon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomseddon/subscriptions",
      "organizations_url": "https://api.github.com/users/thomseddon/orgs",
      "repos_url": "https://api.github.com/users/thomseddon/repos",
      "events_url": "https://api.github.com/users/thomseddon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomseddon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-01T07:54:39Z",
    "updated_at": "2014-07-10T12:13:46Z",
    "closed_at": "2013-04-01T18:14:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1523",
      "html_url": "https://github.com/expressjs/express/pull/1523",
      "diff_url": "https://github.com/expressjs/express/pull/1523.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1523.patch",
      "merged_at": "2013-04-01T18:14:08Z"
    },
    "body": "No biggie, just noticed a couple of instances of trailing white space so ran a command to strip it out.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1523/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1522",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1522/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1522/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1522/events",
    "html_url": "https://github.com/expressjs/express/issues/1522",
    "id": 11495730,
    "node_id": "MDU6SXNzdWUxMTQ5NTczMA==",
    "number": 1522,
    "title": "root app errors are ignored by mounted apps",
    "user": {
      "login": "nickjackson",
      "id": 693875,
      "node_id": "MDQ6VXNlcjY5Mzg3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/693875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickjackson",
      "html_url": "https://github.com/nickjackson",
      "followers_url": "https://api.github.com/users/nickjackson/followers",
      "following_url": "https://api.github.com/users/nickjackson/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickjackson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickjackson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickjackson/subscriptions",
      "organizations_url": "https://api.github.com/users/nickjackson/orgs",
      "repos_url": "https://api.github.com/users/nickjackson/repos",
      "events_url": "https://api.github.com/users/nickjackson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickjackson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2013-02-28T10:48:43Z",
    "updated_at": "2014-07-02T21:21:39Z",
    "closed_at": "2013-09-09T06:50:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you try and `next(new Error)` on a root app, the error will be ignored by any mounted apps.\n\nI don't think this is an issue as such and maybe a lame thing to add. The only reason for asking is because I am trying to mount a component app which handles errors for the whole app.\n\nAt the moment, I am binding to the 'mount' event and adding the error middleware to the root app in the callback. This works fine, however it does feels a little clunky.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1522/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1521",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1521/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1521/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1521/events",
    "html_url": "https://github.com/expressjs/express/issues/1521",
    "id": 11487664,
    "node_id": "MDU6SXNzdWUxMTQ4NzY2NA==",
    "number": 1521,
    "title": "Target in html use \"#HelloWorld\"",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-02-28T04:47:43Z",
    "updated_at": "2013-03-05T00:47:19Z",
    "closed_at": "2013-03-05T00:47:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was thinking, to create a variable called `req.target` that consists in showing the target in the `html`. It may be useful, for certain kinds of things.\n\n```\n htttp://mydomain.ext/path#HelloWorld?myquery\n req.target\n  => HelloWorld\n```\n\nThe target can be a determinant for the user experience with the website. I think it should be the variable.Then I put the topic under discussion :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1521/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1520",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1520/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1520/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1520/events",
    "html_url": "https://github.com/expressjs/express/issues/1520",
    "id": 11455509,
    "node_id": "MDU6SXNzdWUxMTQ1NTUwOQ==",
    "number": 1520,
    "title": "unwanted <style> tag at end of body of layout.html",
    "user": {
      "login": "jaeh",
      "id": 510877,
      "node_id": "MDQ6VXNlcjUxMDg3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/510877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaeh",
      "html_url": "https://github.com/jaeh",
      "followers_url": "https://api.github.com/users/jaeh/followers",
      "following_url": "https://api.github.com/users/jaeh/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaeh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaeh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaeh/subscriptions",
      "organizations_url": "https://api.github.com/users/jaeh/orgs",
      "repos_url": "https://api.github.com/users/jaeh/repos",
      "events_url": "https://api.github.com/users/jaeh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaeh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-02-27T13:40:39Z",
    "updated_at": "2013-03-01T17:24:47Z",
    "closed_at": "2013-03-01T12:57:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi there :)\n\nfirst of all thanks a lot for all you all do!\n\nbug/random feature:\non a fresh express install (express start test && cd test && npm install && npm start)\nthere will be a <style></style> tag at the end of the html output.\nthis seems to be a bug or am i missing something here?\n\ni will have a look at the express source and see if i can track the bug,\nbut i guess its something that got into the chain through one of the dependencies?\n\nthis also happens when i change from jade to handlebars or swig (using the consolidate library) so it seems to be universal and not depending on the html rendering engine nor on consolidate either.\n\nhave fun\njascha \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1520/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1519",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1519/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1519/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1519/events",
    "html_url": "https://github.com/expressjs/express/pull/1519",
    "id": 11418886,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMzMDY2MA==",
    "number": 1519,
    "title": "Fix explicit .js on project creation",
    "user": {
      "login": "yawnt",
      "id": 148907,
      "node_id": "MDQ6VXNlcjE0ODkwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/148907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yawnt",
      "html_url": "https://github.com/yawnt",
      "followers_url": "https://api.github.com/users/yawnt/followers",
      "following_url": "https://api.github.com/users/yawnt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yawnt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yawnt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yawnt/subscriptions",
      "organizations_url": "https://api.github.com/users/yawnt/orgs",
      "repos_url": "https://api.github.com/users/yawnt/repos",
      "events_url": "https://api.github.com/users/yawnt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yawnt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-02-26T17:23:22Z",
    "updated_at": "2014-06-21T00:07:40Z",
    "closed_at": "2013-02-28T20:16:27Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1519",
      "html_url": "https://github.com/expressjs/express/pull/1519",
      "diff_url": "https://github.com/expressjs/express/pull/1519.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1519.patch",
      "merged_at": "2013-02-28T20:16:27Z"
    },
    "body": "i'm not sure if there's a reason to prefer `node app` over `node app.js`.. anyway this fixes scripts.start in some situations where you're not running `npm start` directly \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1519/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1518",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1518/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1518/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1518/events",
    "html_url": "https://github.com/expressjs/express/issues/1518",
    "id": 11406027,
    "node_id": "MDU6SXNzdWUxMTQwNjAyNw==",
    "number": 1518,
    "title": "bodyParser in express 3.0.6 doesnt work properly with form multipart/form-data file post",
    "user": {
      "login": "deeveeloop",
      "id": 3243542,
      "node_id": "MDQ6VXNlcjMyNDM1NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3243542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deeveeloop",
      "html_url": "https://github.com/deeveeloop",
      "followers_url": "https://api.github.com/users/deeveeloop/followers",
      "following_url": "https://api.github.com/users/deeveeloop/following{/other_user}",
      "gists_url": "https://api.github.com/users/deeveeloop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deeveeloop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deeveeloop/subscriptions",
      "organizations_url": "https://api.github.com/users/deeveeloop/orgs",
      "repos_url": "https://api.github.com/users/deeveeloop/repos",
      "events_url": "https://api.github.com/users/deeveeloop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deeveeloop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-26T12:29:15Z",
    "updated_at": "2013-09-07T21:50:16Z",
    "closed_at": "2013-09-07T21:50:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "it receives file - save it in /upload dir but doesnt call function in app.post('/upload'........ \nIn firebug send status is pending. When i send post from chrome postman to /upload it works and send ok but not when use form.\n\nThe code:\n\nHTML-JADE\n\n form(action=\"/upload\", method=\"post\", enctype=\"multipart/form-data\")\n  input(type=\"file\", name=\"image\")\n  input(type='submit', value='submit')\n\nApp.js\n\n  var express = require('express')\n, user = require('./routes/user')\n, http = require('http')\n, path = require('path')\n, mongo = require('mongodb')\n, Server = mongo.Server\n, Db = mongo.Db\n, routes = require('./routes')\n\n var  app = express();\n\napp.configure(function(){\napp.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\napp.set('view engine', 'jade');\napp.use(express.favicon());\napp.use(express.logger('dev'));\napp.use(express.bodyParser({uploadDir:'./upload'}));\napp.use(express.methodOverride());\napp.use(express.cookieParser('your secret here'));\napp.use(express.session());\napp.use(app.router);\napp.use(require('stylus').middleware(__dirname + '/public'));\napp.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.post('/upload', function(req, res) {\n  console.log(req.files.image) // this doesn't fire at all\nres.send(200)\n});\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1518/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1517",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1517/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1517/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1517/events",
    "html_url": "https://github.com/expressjs/express/issues/1517",
    "id": 11346773,
    "node_id": "MDU6SXNzdWUxMTM0Njc3Mw==",
    "number": 1517,
    "title": "Sessions not persisting across pages",
    "user": {
      "login": "SpencerC",
      "id": 817672,
      "node_id": "MDQ6VXNlcjgxNzY3Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/817672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SpencerC",
      "html_url": "https://github.com/SpencerC",
      "followers_url": "https://api.github.com/users/SpencerC/followers",
      "following_url": "https://api.github.com/users/SpencerC/following{/other_user}",
      "gists_url": "https://api.github.com/users/SpencerC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SpencerC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SpencerC/subscriptions",
      "organizations_url": "https://api.github.com/users/SpencerC/orgs",
      "repos_url": "https://api.github.com/users/SpencerC/repos",
      "events_url": "https://api.github.com/users/SpencerC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SpencerC/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-02-25T04:34:21Z",
    "updated_at": "2013-09-07T22:00:25Z",
    "closed_at": "2013-09-07T22:00:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Not sure if this is an issue with Express, Passport, or just the way I'm doing things; I'm trying to implement sessions like so:\n\n  app.use(connect.bodyParser());\n  app.use(express.cookieParser());\n  app.use(express.session({\n    cookie: {\n      path: \"/\",\n      httpOnly: true,\n      maxAge: null\n    },\n    store: redisStoreConnect,\n    secret: \"something\",\n    key: 'pksy.sid'\n  }));\n  app.use(passport.initialize());\n  app.use(passport.session());\n\nIf I navigate to a page in my site, a new session is created and stored in redis. If I refresh that page, the session appears to persist. If I navigate to a new page or even if I close the tab and reopen to the same page, a new session is created. Has anyone else had this problem?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1517/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1516",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1516/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1516/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1516/events",
    "html_url": "https://github.com/expressjs/express/pull/1516",
    "id": 11338378,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI5NDY2Mg==",
    "number": 1516,
    "title": "Fix Dotted Relative Redirects in Applications Mounted on Nested Paths",
    "user": {
      "login": "michaelahlers",
      "id": 2034877,
      "node_id": "MDQ6VXNlcjIwMzQ4Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2034877?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelahlers",
      "html_url": "https://github.com/michaelahlers",
      "followers_url": "https://api.github.com/users/michaelahlers/followers",
      "following_url": "https://api.github.com/users/michaelahlers/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelahlers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelahlers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelahlers/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelahlers/orgs",
      "repos_url": "https://api.github.com/users/michaelahlers/repos",
      "events_url": "https://api.github.com/users/michaelahlers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelahlers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-02-24T19:08:12Z",
    "updated_at": "2014-06-25T12:58:44Z",
    "closed_at": "2013-04-01T18:18:50Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1516",
      "html_url": "https://github.com/expressjs/express/pull/1516",
      "diff_url": "https://github.com/expressjs/express/pull/1516.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1516.patch",
      "merged_at": "2013-04-01T18:18:50Z"
    },
    "body": "In order to cope with visitors to nested applications, where the path is missing the trailing slash, and serve static resources it is helpful to redirect to the canonical resource so the browser will then resolve relative resources at the correct location. (For background, see [_Relative URLs and trailing slashes_](http://stackoverflow.com/questions/5457885/relative-urls-and-trailing-slashes) on Stack Overflow, and [this discussion](http://stackoverflow.com/questions/10867052/cannot-serve-static-files-with-express-routing-and-no-trailing-slash) about serving static resources under those conditions.)\n\nIn other words, if the user visits `http://localhost:3000/foo/bear/leaf`, and the markup rendered for that location references a file called `styles.css`, the browser will attempt to resolve that file to `http://localhost:3000/foo/bear/styles.css`. Obviously, [`req.path`](http://expressjs.com/api.html#req.path) is of little use, as it is scoped to the path at which the application is mounted (it will contain `/`).\n\nThat issue would be easily solved with `res.redirect('./index')` in a route for `/`, but the destination URL is [computed incorrectly by the current version of `res.location`](https://github.com/visionmedia/express/blob/a4b2e48dfea095f722a17b6b6d89e0a2ccee3fad/lib/response.js#L637) (again, it uses the application's mount point).\n\nTo illustrate this problem, start with the following setup and assume `server` is the listening Express application.\n\n``` javascript\nvar foo = express()\nserver.use('/foo', foo)\n\nvar bear = express()\nfoo.use('/bear', bear)\n\nvar leaf = express()\nbear.use('/leaf', leaf)\n\nleaf.get('/', function (req, res) {\n  res.redirect('./index')\n})\n\nleaf.get('/index', function (req, res) {\n  res.send('Sending /index...')\n})\n```\n\nWe can use cURL to see the incorrect redirection.\n\n```\n$ curl localhost:3000/foo/bear/leaf\nMoved Temporarily. Redirecting to //./index\n```\n\nThe problem is further exacerbated by the redundant `//` (the browser interprets this as a terminator for the URL protocol, then tries to resolve the path to `http://.index`).\n\nMy fix is simple: as the documentation specifies this type of redirect is relative to the _path_ and not the _mount point_, we should rely on [`req.originalUrl`](http://expressjs.com/api.html#req.originalUrl) to compute the redirect, and check if `req.originalUrl` has a trailing slash before appending another one between it and the relative redirection target.\n\nWith this change in place, you'll see we get the correct redirection.\n\n```\n$ curl localhost:3000/foo/bear/leaf\nMoved Temporarily. Redirecting to /foo/bear/leaf/./index\n```\n\nSee also: my comments in the patch.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1516/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1515",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1515/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1515/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1515/events",
    "html_url": "https://github.com/expressjs/express/issues/1515",
    "id": 11332038,
    "node_id": "MDU6SXNzdWUxMTMzMjAzOA==",
    "number": 1515,
    "title": "Documentation of \"settings\" is messed up",
    "user": {
      "login": "drozzy",
      "id": 140710,
      "node_id": "MDQ6VXNlcjE0MDcxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/140710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drozzy",
      "html_url": "https://github.com/drozzy",
      "followers_url": "https://api.github.com/users/drozzy/followers",
      "following_url": "https://api.github.com/users/drozzy/following{/other_user}",
      "gists_url": "https://api.github.com/users/drozzy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drozzy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drozzy/subscriptions",
      "organizations_url": "https://api.github.com/users/drozzy/orgs",
      "repos_url": "https://api.github.com/users/drozzy/repos",
      "events_url": "https://api.github.com/users/drozzy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drozzy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-24T09:35:14Z",
    "updated_at": "2013-09-07T21:51:35Z",
    "closed_at": "2013-09-07T21:51:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When navigating to \"application settings\" menu in the api.html:\nhttp://expressjs.com/api.html#app-settings\n\nIt (\"application-settings\" entry) shows up on the right-hand menu between \"app.param\" and \"application.routing\". But on the actual page it is preceded by \"app.use\" and followed by \"app.engine\" sections.\n\nAlso, it's not clear where to \"change\" or \"add\" these settings... Posted a question on this on stackoverflow (see answers for possible clarification):\nhttp://stackoverflow.com/questions/15050304/express-js-where-do-the-settings-go/15050396#15050396\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1515/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1514",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1514/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1514/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1514/events",
    "html_url": "https://github.com/expressjs/express/issues/1514",
    "id": 11327326,
    "node_id": "MDU6SXNzdWUxMTMyNzMyNg==",
    "number": 1514,
    "title": "locals.name = \"hello\" does not work",
    "user": {
      "login": "victorandree",
      "id": 52588,
      "node_id": "MDQ6VXNlcjUyNTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/victorandree",
      "html_url": "https://github.com/victorandree",
      "followers_url": "https://api.github.com/users/victorandree/followers",
      "following_url": "https://api.github.com/users/victorandree/following{/other_user}",
      "gists_url": "https://api.github.com/users/victorandree/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/victorandree/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/victorandree/subscriptions",
      "organizations_url": "https://api.github.com/users/victorandree/orgs",
      "repos_url": "https://api.github.com/users/victorandree/repos",
      "events_url": "https://api.github.com/users/victorandree/events{/privacy}",
      "received_events_url": "https://api.github.com/users/victorandree/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2013-02-23T23:58:31Z",
    "updated_at": "2013-09-26T18:18:13Z",
    "closed_at": "2013-09-11T09:39:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Because `(app|res).locals` is a function, it's impossible to have a local named `name` because that's a property of the [Function object](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/name).\n\nI guess one can live with this, but might be useful to make a small note of it in the docs.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1514/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1513",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1513/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1513/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1513/events",
    "html_url": "https://github.com/expressjs/express/pull/1513",
    "id": 11282960,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI3MjkzMQ==",
    "number": 1513,
    "title": "minor typo issue",
    "user": {
      "login": "killmenot",
      "id": 119337,
      "node_id": "MDQ6VXNlcjExOTMzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/119337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/killmenot",
      "html_url": "https://github.com/killmenot",
      "followers_url": "https://api.github.com/users/killmenot/followers",
      "following_url": "https://api.github.com/users/killmenot/following{/other_user}",
      "gists_url": "https://api.github.com/users/killmenot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/killmenot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/killmenot/subscriptions",
      "organizations_url": "https://api.github.com/users/killmenot/orgs",
      "repos_url": "https://api.github.com/users/killmenot/repos",
      "events_url": "https://api.github.com/users/killmenot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/killmenot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-02-22T11:53:56Z",
    "updated_at": "2014-08-06T08:17:56Z",
    "closed_at": "2013-02-22T16:35:39Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1513",
      "html_url": "https://github.com/expressjs/express/pull/1513",
      "diff_url": "https://github.com/expressjs/express/pull/1513.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1513.patch",
      "merged_at": "2013-02-22T16:35:39Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1513/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1512",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1512/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1512/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1512/events",
    "html_url": "https://github.com/expressjs/express/pull/1512",
    "id": 11193976,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyOTExMQ==",
    "number": 1512,
    "title": "Added check for own properties of response.set",
    "user": {
      "login": "dstroynov",
      "id": 3646753,
      "node_id": "MDQ6VXNlcjM2NDY3NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3646753?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dstroynov",
      "html_url": "https://github.com/dstroynov",
      "followers_url": "https://api.github.com/users/dstroynov/followers",
      "following_url": "https://api.github.com/users/dstroynov/following{/other_user}",
      "gists_url": "https://api.github.com/users/dstroynov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dstroynov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dstroynov/subscriptions",
      "organizations_url": "https://api.github.com/users/dstroynov/orgs",
      "repos_url": "https://api.github.com/users/dstroynov/repos",
      "events_url": "https://api.github.com/users/dstroynov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dstroynov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-20T11:46:49Z",
    "updated_at": "2013-02-20T16:44:21Z",
    "closed_at": "2013-02-20T16:44:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1512",
      "html_url": "https://github.com/expressjs/express/pull/1512",
      "diff_url": "https://github.com/expressjs/express/pull/1512.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1512.patch",
      "merged_at": null
    },
    "body": "It'll help if Object.prototype is extended with some methods\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1512/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1511",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1511/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1511/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1511/events",
    "html_url": "https://github.com/expressjs/express/pull/1511",
    "id": 11134486,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE5OTk5MQ==",
    "number": 1511,
    "title": "[WIP] Add app.subroute option for method chaining middleware for routes, as well as automatic OPTIONS responses and 405 Method Not Allowed error codes",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 18,
    "created_at": "2013-02-18T22:48:22Z",
    "updated_at": "2014-06-30T20:09:18Z",
    "closed_at": "2013-04-02T20:48:05Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1511",
      "html_url": "https://github.com/expressjs/express/pull/1511",
      "diff_url": "https://github.com/expressjs/express/pull/1511.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1511.patch",
      "merged_at": null
    },
    "body": "```\napp.subroute('/foo')\n  .use(allMiddleware)\n  .get(getMiddleware)\n  .post(postMiddleware)\n  .all(allMiddleware2)\n  .end()\n```\n\nWill be equivalent to:\n\n```\napp.all('/foo', allMiddleware)\napp.get('/foo', getMiddleware)\napp.post('/foo', postMiddleware)\napp.all('/foo', allMiddleware2)\napp.options('/foo', function(req, res, next){\n  res.setHeader('Allow', 'GET,HEAD,POST,OPTIONS')\n  res.end()\n})\napp.all('/foo', function(req, res, next){\n  var err = new Error()\n  err.status = 405\n  next(err)\n})\n```\n\n`.end()` adds the `app.options()` and the last `app.all()` middleware and is completely optional.\nThere is also a `app.subroute().allow()` and `disallow()` method to add/remove methods from `app.subroute().options()`.\n\nThis kind of implements @guille's #1501 alternative route syntax.\nThis also alleviates #1499 405 Method Not Allowed routing.\n\nThere are, however, issues with this code. If you're interested in merging this, I can work on it more, otherwise I'm not.\n- If a response is sent via `app.subroute().all`, that method will not be added to `OPTIONS` since express doesn't know what method was used. \n- I was under the impression that `app.get` accepted `HEAD` requests but doesn't send a body as per HTTP spec, but I guess that isn't the case in express (I have a test commented out). Not sure how to handle it.\n- All routes have to be declared in the same `app.subroute()` for `OPTIONS` to work. \n\nAlso `routes` for `app.subroute(routes)` can be an array, though I'm not sure if you'd want that.\nI added that because in my case, I have a lot of similar routes.\n\nThen there's less important issues like I don't know where to put stuff, and coding styles.\n\nLet me know what you think.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1511/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1510",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1510/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1510/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1510/events",
    "html_url": "https://github.com/expressjs/express/issues/1510",
    "id": 11099826,
    "node_id": "MDU6SXNzdWUxMTA5OTgyNg==",
    "number": 1510,
    "title": "500 error handler ignored, but exception is caught in process.on('uncaughtException')",
    "user": {
      "login": "binarykitchen",
      "id": 177641,
      "node_id": "MDQ6VXNlcjE3NzY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/binarykitchen",
      "html_url": "https://github.com/binarykitchen",
      "followers_url": "https://api.github.com/users/binarykitchen/followers",
      "following_url": "https://api.github.com/users/binarykitchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/binarykitchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/binarykitchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/binarykitchen/subscriptions",
      "organizations_url": "https://api.github.com/users/binarykitchen/orgs",
      "repos_url": "https://api.github.com/users/binarykitchen/repos",
      "events_url": "https://api.github.com/users/binarykitchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/binarykitchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-02-18T00:55:43Z",
    "updated_at": "2013-02-19T02:27:47Z",
    "closed_at": "2013-02-18T01:55:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello guys\n\nI've googled everywhere about my problem without success so I'm trying here to get some help.\n\nIn my code, express does not show the 500 error page when an error happens but is logged within `process.on('uncaughtException')`.\n\nHere are the relevant parts of my code:\n\n``` javascript\n// near top of server.js\nprocess.on('uncaughtException', function (err) {\n    console.error(err);\n});\n\n..\n\n// further down in the middle ...\napp.configure(function() {\n    ...\n    app.use(function(err, req, res, next) {\n        res.status(err.status || 500);\n        res.render('500', { ...}\n        );\n    });\n});\n\n...\nrequire('./routes/clean')(app);\n```\n\nThen somewhere in the route /clean an error is thrown and caught in  `process.on('uncaughtException')` but is never rendered as 500 within express. Why?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1510/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1509",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1509/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1509/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1509/events",
    "html_url": "https://github.com/expressjs/express/issues/1509",
    "id": 11019101,
    "node_id": "MDU6SXNzdWUxMTAxOTEwMQ==",
    "number": 1509,
    "title": "Routing fails when passed an array of RegExp",
    "user": {
      "login": "ShimShamSam",
      "id": 2212177,
      "node_id": "MDQ6VXNlcjIyMTIxNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2212177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShimShamSam",
      "html_url": "https://github.com/ShimShamSam",
      "followers_url": "https://api.github.com/users/ShimShamSam/followers",
      "following_url": "https://api.github.com/users/ShimShamSam/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShimShamSam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShimShamSam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShimShamSam/subscriptions",
      "organizations_url": "https://api.github.com/users/ShimShamSam/orgs",
      "repos_url": "https://api.github.com/users/ShimShamSam/repos",
      "events_url": "https://api.github.com/users/ShimShamSam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShimShamSam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-14T23:44:16Z",
    "updated_at": "2013-02-18T20:52:10Z",
    "closed_at": "2013-02-18T20:52:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I can create multiple RegExp routes, but cannot pass an array of RegExp objects to a single call to app.get()\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1509/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1508",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1508/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1508/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1508/events",
    "html_url": "https://github.com/expressjs/express/issues/1508",
    "id": 11016107,
    "node_id": "MDU6SXNzdWUxMTAxNjEwNw==",
    "number": 1508,
    "title": "Route doesn't accept callbacks with more than 2 parameters",
    "user": {
      "login": "Antonio-Laguna",
      "id": 946645,
      "node_id": "MDQ6VXNlcjk0NjY0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/946645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Antonio-Laguna",
      "html_url": "https://github.com/Antonio-Laguna",
      "followers_url": "https://api.github.com/users/Antonio-Laguna/followers",
      "following_url": "https://api.github.com/users/Antonio-Laguna/following{/other_user}",
      "gists_url": "https://api.github.com/users/Antonio-Laguna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Antonio-Laguna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Antonio-Laguna/subscriptions",
      "organizations_url": "https://api.github.com/users/Antonio-Laguna/orgs",
      "repos_url": "https://api.github.com/users/Antonio-Laguna/repos",
      "events_url": "https://api.github.com/users/Antonio-Laguna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Antonio-Laguna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-02-14T22:13:49Z",
    "updated_at": "2013-02-14T22:14:31Z",
    "closed_at": "2013-02-14T22:14:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Duplicated\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1508/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1507",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1507/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1507/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1507/events",
    "html_url": "https://github.com/expressjs/express/issues/1507",
    "id": 11016064,
    "node_id": "MDU6SXNzdWUxMTAxNjA2NA==",
    "number": 1507,
    "title": "Route doesn't accept callbacks with more than 2 parameters",
    "user": {
      "login": "Antonio-Laguna",
      "id": 946645,
      "node_id": "MDQ6VXNlcjk0NjY0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/946645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Antonio-Laguna",
      "html_url": "https://github.com/Antonio-Laguna",
      "followers_url": "https://api.github.com/users/Antonio-Laguna/followers",
      "following_url": "https://api.github.com/users/Antonio-Laguna/following{/other_user}",
      "gists_url": "https://api.github.com/users/Antonio-Laguna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Antonio-Laguna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Antonio-Laguna/subscriptions",
      "organizations_url": "https://api.github.com/users/Antonio-Laguna/orgs",
      "repos_url": "https://api.github.com/users/Antonio-Laguna/repos",
      "events_url": "https://api.github.com/users/Antonio-Laguna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Antonio-Laguna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-02-14T22:12:58Z",
    "updated_at": "2013-02-14T22:21:00Z",
    "closed_at": "2013-02-14T22:20:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Today I was trying to reuse some code, so I made a route like `users/:id` so you can find an user by his/her `id` and then it calls this:\n\n```\nfindById : function(req,res){\n    var id = req.params.id;\n    rest.findByField(req,res, '_id', new BSON.ObjectID(id));\n},\nfindByField : function(req, res, field, value){\n    console.log('Finding by item');\n    field = field || req.params.field;\n    value = value || req.params.value;\n\n    var find = {};\n    find[field] = value;\n\n    data.mongoClient.collection(data.collectionName, function(err, collection) {\n        collection.findOne(find, function(err, item){\n            if (item) { res.json(item); }\n                else { res.send(404, { error : 'Item not found'}); }\n            })\n        });\n}\n```\n\nAnd this works good. However, if I match that function to a route like this `users/:field/:value/` it doesn't work and gives 404 instead.\n\nIs this intended?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1507/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1506",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1506/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1506/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1506/events",
    "html_url": "https://github.com/expressjs/express/issues/1506",
    "id": 11007951,
    "node_id": "MDU6SXNzdWUxMTAwNzk1MQ==",
    "number": 1506,
    "title": "Session casts object to string",
    "user": {
      "login": "SomeKittens",
      "id": 1616464,
      "node_id": "MDQ6VXNlcjE2MTY0NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1616464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SomeKittens",
      "html_url": "https://github.com/SomeKittens",
      "followers_url": "https://api.github.com/users/SomeKittens/followers",
      "following_url": "https://api.github.com/users/SomeKittens/following{/other_user}",
      "gists_url": "https://api.github.com/users/SomeKittens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SomeKittens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SomeKittens/subscriptions",
      "organizations_url": "https://api.github.com/users/SomeKittens/orgs",
      "repos_url": "https://api.github.com/users/SomeKittens/repos",
      "events_url": "https://api.github.com/users/SomeKittens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SomeKittens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-14T18:34:08Z",
    "updated_at": "2013-02-18T20:52:46Z",
    "closed_at": "2013-02-18T20:52:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I try to add an object (for instance, a Mongo BSON id) to req.session it is cast to a string in further requests.  You can see that in action here: https://github.com/SomeKittens/express-sessions-issue\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1506/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1505",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1505/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1505/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1505/events",
    "html_url": "https://github.com/expressjs/express/pull/1505",
    "id": 10955544,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDEyNDE4NA==",
    "number": 1505,
    "title": "Update Readme.md",
    "user": {
      "login": "gravis",
      "id": 12752,
      "node_id": "MDQ6VXNlcjEyNzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gravis",
      "html_url": "https://github.com/gravis",
      "followers_url": "https://api.github.com/users/gravis/followers",
      "following_url": "https://api.github.com/users/gravis/following{/other_user}",
      "gists_url": "https://api.github.com/users/gravis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gravis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gravis/subscriptions",
      "organizations_url": "https://api.github.com/users/gravis/orgs",
      "repos_url": "https://api.github.com/users/gravis/repos",
      "events_url": "https://api.github.com/users/gravis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gravis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-02-13T14:28:51Z",
    "updated_at": "2014-08-06T14:46:40Z",
    "closed_at": "2013-02-13T18:54:35Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1505",
      "html_url": "https://github.com/expressjs/express/pull/1505",
      "diff_url": "https://github.com/expressjs/express/pull/1505.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1505.patch",
      "merged_at": "2013-02-13T18:54:35Z"
    },
    "body": "Add dependancies status badge.\nThe badge looks bigger than Travis, because it's using a more recent version:\nhttps://github.com/olivierlacan/shields/\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1505/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1504",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1504/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1504/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1504/events",
    "html_url": "https://github.com/expressjs/express/issues/1504",
    "id": 10785720,
    "node_id": "MDU6SXNzdWUxMDc4NTcyMA==",
    "number": 1504,
    "title": "Form submissions with file input create entry in req.files when no file was selected",
    "user": {
      "login": "ryancole",
      "id": 484801,
      "node_id": "MDQ6VXNlcjQ4NDgwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryancole",
      "html_url": "https://github.com/ryancole",
      "followers_url": "https://api.github.com/users/ryancole/followers",
      "following_url": "https://api.github.com/users/ryancole/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryancole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryancole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryancole/subscriptions",
      "organizations_url": "https://api.github.com/users/ryancole/orgs",
      "repos_url": "https://api.github.com/users/ryancole/repos",
      "events_url": "https://api.github.com/users/ryancole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryancole/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-08T16:32:15Z",
    "updated_at": "2013-09-08T04:36:56Z",
    "closed_at": "2013-09-08T04:36:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This may be something for node-formidable, but I'll start here. I'm using express, and I notice that when I submit a form that contains a file input field, the `request.files` collection contains an entry for a file even if no file was selected / uploaded via the form.\n\nI've worked around this by just looking at the file size, which is zero, but I wanted to create this ticket because this is still creating empty temp files on the system.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1504/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1503",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1503/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1503/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1503/events",
    "html_url": "https://github.com/expressjs/express/pull/1503",
    "id": 10775545,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDA1NDAxNw==",
    "number": 1503,
    "title": "Inherit settings from parent application using [[Prototype]]",
    "user": {
      "login": "shesek",
      "id": 877904,
      "node_id": "MDQ6VXNlcjg3NzkwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shesek",
      "html_url": "https://github.com/shesek",
      "followers_url": "https://api.github.com/users/shesek/followers",
      "following_url": "https://api.github.com/users/shesek/following{/other_user}",
      "gists_url": "https://api.github.com/users/shesek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shesek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
      "organizations_url": "https://api.github.com/users/shesek/orgs",
      "repos_url": "https://api.github.com/users/shesek/repos",
      "events_url": "https://api.github.com/users/shesek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shesek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-02-08T11:06:55Z",
    "updated_at": "2014-06-27T12:40:30Z",
    "closed_at": "2013-04-01T21:29:20Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1503",
      "html_url": "https://github.com/expressjs/express/pull/1503",
      "diff_url": "https://github.com/expressjs/express/pull/1503.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1503.patch",
      "merged_at": "2013-04-01T21:29:20Z"
    },
    "body": "It seems like the current code implements the exact same behavior as using [[Prototype]], so why not use it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1503/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1502",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1502/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1502/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1502/events",
    "html_url": "https://github.com/expressjs/express/pull/1502",
    "id": 10743737,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDAzODk1Ng==",
    "number": 1502,
    "title": "Remove legacy app.configure() method from app template.",
    "user": {
      "login": "qjcg",
      "id": 1133291,
      "node_id": "MDQ6VXNlcjExMzMyOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1133291?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qjcg",
      "html_url": "https://github.com/qjcg",
      "followers_url": "https://api.github.com/users/qjcg/followers",
      "following_url": "https://api.github.com/users/qjcg/following{/other_user}",
      "gists_url": "https://api.github.com/users/qjcg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qjcg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qjcg/subscriptions",
      "organizations_url": "https://api.github.com/users/qjcg/orgs",
      "repos_url": "https://api.github.com/users/qjcg/repos",
      "events_url": "https://api.github.com/users/qjcg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qjcg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-02-07T16:35:37Z",
    "updated_at": "2014-07-10T01:37:03Z",
    "closed_at": "2013-03-11T15:59:24Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1502",
      "html_url": "https://github.com/expressjs/express/pull/1502",
      "diff_url": "https://github.com/expressjs/express/pull/1502.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1502.patch",
      "merged_at": "2013-03-11T15:59:24Z"
    },
    "body": "Quoting from the [app.configure() documentation](http://expressjs.com/api.html#app.configure):\n\n> [...] This method remains for legacy reason, and is effectively an if statement [...]  **not** required in order to use app.set() and other configuration methods.\n\nSo removing this unnecessary legacy method from the new application template seems like the right thing to do.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1502/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1501",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1501/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1501/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1501/events",
    "html_url": "https://github.com/expressjs/express/issues/1501",
    "id": 10695048,
    "node_id": "MDU6SXNzdWUxMDY5NTA0OA==",
    "number": 1501,
    "title": "Alternative route syntax",
    "user": {
      "login": "rauchg",
      "id": 13041,
      "node_id": "MDQ6VXNlcjEzMDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauchg",
      "html_url": "https://github.com/rauchg",
      "followers_url": "https://api.github.com/users/rauchg/followers",
      "following_url": "https://api.github.com/users/rauchg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauchg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauchg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauchg/subscriptions",
      "organizations_url": "https://api.github.com/users/rauchg/orgs",
      "repos_url": "https://api.github.com/users/rauchg/repos",
      "events_url": "https://api.github.com/users/rauchg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauchg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2013-02-06T15:05:30Z",
    "updated_at": "2014-07-29T04:18:19Z",
    "closed_at": "2013-12-13T00:16:24Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "To avoid routes that grow too much horizontally, and to make it easier to visualize / add / remove middleware:\n\n``` js\napp.get('/woot')\n.use(express.compress())\n.use(user.load())\n.use(function(req, res, next){\n  res.send(200);\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1501/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1500",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1500/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1500/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1500/events",
    "html_url": "https://github.com/expressjs/express/issues/1500",
    "id": 10694048,
    "node_id": "MDU6SXNzdWUxMDY5NDA0OA==",
    "number": 1500,
    "title": "Injecting app into router to setup as middleware has odd effects",
    "user": {
      "login": "robraux",
      "id": 145411,
      "node_id": "MDQ6VXNlcjE0NTQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/145411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robraux",
      "html_url": "https://github.com/robraux",
      "followers_url": "https://api.github.com/users/robraux/followers",
      "following_url": "https://api.github.com/users/robraux/following{/other_user}",
      "gists_url": "https://api.github.com/users/robraux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robraux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robraux/subscriptions",
      "organizations_url": "https://api.github.com/users/robraux/orgs",
      "repos_url": "https://api.github.com/users/robraux/repos",
      "events_url": "https://api.github.com/users/robraux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robraux/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2013-02-06T14:40:32Z",
    "updated_at": "2013-02-18T23:18:10Z",
    "closed_at": "2013-02-18T23:17:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When attempting to setup an injected routing pattern, if you setup the router as middleware and inject the app reference into the route configuration, the defined error route behaves oddly.\n\nEach call that uses the error route increases the nodejs stack size, never releasing the references. This causes the stack to grow until you hit the v8 \"max-stack-size\" configured limit.\n\nNote that the stack does not grow if the error (4 args) handler is not utilized.\n\nWhy does this happen? Is this a bug, or just a user error?\n\nHopefully this repo will serve as an example for someone else to investigate or explain. There are two minimal examples, one wrong, and the other right.\n\nhttps://github.com/robraux/expressjs-routes-questions\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1500/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1500/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1499",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1499/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1499/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1499/events",
    "html_url": "https://github.com/expressjs/express/issues/1499",
    "id": 10666746,
    "node_id": "MDU6SXNzdWUxMDY2Njc0Ng==",
    "number": 1499,
    "title": "Should return code 405 for method not allowed",
    "user": {
      "login": "adambrod",
      "id": 359049,
      "node_id": "MDQ6VXNlcjM1OTA0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/359049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adambrod",
      "html_url": "https://github.com/adambrod",
      "followers_url": "https://api.github.com/users/adambrod/followers",
      "following_url": "https://api.github.com/users/adambrod/following{/other_user}",
      "gists_url": "https://api.github.com/users/adambrod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adambrod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adambrod/subscriptions",
      "organizations_url": "https://api.github.com/users/adambrod/orgs",
      "repos_url": "https://api.github.com/users/adambrod/repos",
      "events_url": "https://api.github.com/users/adambrod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adambrod/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-02-05T20:46:31Z",
    "updated_at": "2014-01-07T16:52:13Z",
    "closed_at": "2013-11-20T00:16:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be great if Express would return status code 405 when a client requests a resource (aka a path) with an http verb that is not allowed.  Today express will return a 404, which isn't quite correct since the path may be valid and found, it just doesn't support that verb.  Here is the doc I'm reading for the definitions of status code 404 and 405: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n\n> 404 Not Found\n> The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.\n> \n> 405 Method Not Allowed\n> The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource.\n\nHere is an example.  In my server.coffee file I have the following definition:\n\n```\napp.get '/', (req, res) ->\n  res.json { players: \"/v1/accounts/:accountId/players\" }\n```\n\nAssuming I have not registered app.post '/', (req, res), when a client invokes\n\n```\ncurl -v -d \"some post data\" http://localhost:9000/\n```\n\n The response includes \"HTTP/1.1 404 Not Found\" but it should be \"HTTP/1.1 405 Method Not Allowed\".\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1499/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1498",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1498/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1498/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1498/events",
    "html_url": "https://github.com/expressjs/express/issues/1498",
    "id": 10666416,
    "node_id": "MDU6SXNzdWUxMDY2NjQxNg==",
    "number": 1498,
    "title": "Does Express has a logo?",
    "user": {
      "login": "x1a0",
      "id": 205756,
      "node_id": "MDQ6VXNlcjIwNTc1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/x1a0",
      "html_url": "https://github.com/x1a0",
      "followers_url": "https://api.github.com/users/x1a0/followers",
      "following_url": "https://api.github.com/users/x1a0/following{/other_user}",
      "gists_url": "https://api.github.com/users/x1a0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/x1a0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/x1a0/subscriptions",
      "organizations_url": "https://api.github.com/users/x1a0/orgs",
      "repos_url": "https://api.github.com/users/x1a0/repos",
      "events_url": "https://api.github.com/users/x1a0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/x1a0/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-05T20:38:17Z",
    "updated_at": "2013-02-05T20:44:44Z",
    "closed_at": "2013-02-05T20:44:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am working on a small tool and need logos of libs/frameworks. Thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1498/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1497",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1497/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1497/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1497/events",
    "html_url": "https://github.com/expressjs/express/issues/1497",
    "id": 10651393,
    "node_id": "MDU6SXNzdWUxMDY1MTM5Mw==",
    "number": 1497,
    "title": "forward on post requests",
    "user": {
      "login": "matthewmueller",
      "id": 170299,
      "node_id": "MDQ6VXNlcjE3MDI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/170299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewmueller",
      "html_url": "https://github.com/matthewmueller",
      "followers_url": "https://api.github.com/users/matthewmueller/followers",
      "following_url": "https://api.github.com/users/matthewmueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewmueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewmueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewmueller/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewmueller/orgs",
      "repos_url": "https://api.github.com/users/matthewmueller/repos",
      "events_url": "https://api.github.com/users/matthewmueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewmueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-02-05T14:19:51Z",
    "updated_at": "2013-02-18T21:21:04Z",
    "closed_at": "2013-02-18T21:21:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "wondering if there is any good way to forward on post requests (where you can't guarentee `next()` is the right route).\n\nHere's my example:\n\n``` js\n/**\n * Route in signup\n */\n\napp.post('/signup', function(req, res) {\n  // forward POST to user API\n});\n\n/**\n * Mounted elsewhere, part of the user API\n */\n\napp.put('/user', function(req, res) { ... })\napp.get('/user', function(req, res) { ... })\napp.post('/user', function(req, res) {\n  // save to db\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1497/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1496",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1496/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1496/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1496/events",
    "html_url": "https://github.com/expressjs/express/issues/1496",
    "id": 10615632,
    "node_id": "MDU6SXNzdWUxMDYxNTYzMg==",
    "number": 1496,
    "title": "Raw body",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2013-02-04T16:50:46Z",
    "updated_at": "2013-08-15T16:43:15Z",
    "closed_at": "2013-02-05T08:39:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, is it possible to retrieve the the raw body of the request and use bodyParser() ?\n\nI need to send in the POST body request string file contents, but when I use bodyParser(), I got in req.body a JSON object.\n\nThank you and sorry for my bad english\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1496/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1495",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1495/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1495/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1495/events",
    "html_url": "https://github.com/expressjs/express/issues/1495",
    "id": 10601136,
    "node_id": "MDU6SXNzdWUxMDYwMTEzNg==",
    "number": 1495,
    "title": "res.sendfile seems to be decodeURIComponent-ing the path",
    "user": {
      "login": "kapouer",
      "id": 131406,
      "node_id": "MDQ6VXNlcjEzMTQwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/131406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kapouer",
      "html_url": "https://github.com/kapouer",
      "followers_url": "https://api.github.com/users/kapouer/followers",
      "following_url": "https://api.github.com/users/kapouer/following{/other_user}",
      "gists_url": "https://api.github.com/users/kapouer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kapouer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kapouer/subscriptions",
      "organizations_url": "https://api.github.com/users/kapouer/orgs",
      "repos_url": "https://api.github.com/users/kapouer/repos",
      "events_url": "https://api.github.com/users/kapouer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kapouer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-02-04T09:57:13Z",
    "updated_at": "2013-11-30T05:57:01Z",
    "closed_at": "2013-11-30T05:57:01Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "var file = \"./public/png/http%3A%2F%2Ftoto.com.png\";\nres.sendfile(file);\nError: ENOENT, stat './public/png/http://toto.com.png'\n\nor... i missed something obvious.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1495/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1494",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1494/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1494/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1494/events",
    "html_url": "https://github.com/expressjs/express/issues/1494",
    "id": 10595456,
    "node_id": "MDU6SXNzdWUxMDU5NTQ1Ng==",
    "number": 1494,
    "title": "Question: How to parse email addresses before compiling templates?",
    "user": {
      "login": "binarykitchen",
      "id": 177641,
      "node_id": "MDQ6VXNlcjE3NzY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/binarykitchen",
      "html_url": "https://github.com/binarykitchen",
      "followers_url": "https://api.github.com/users/binarykitchen/followers",
      "following_url": "https://api.github.com/users/binarykitchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/binarykitchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/binarykitchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/binarykitchen/subscriptions",
      "organizations_url": "https://api.github.com/users/binarykitchen/orgs",
      "repos_url": "https://api.github.com/users/binarykitchen/repos",
      "events_url": "https://api.github.com/users/binarykitchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/binarykitchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-02-04T04:26:21Z",
    "updated_at": "2013-09-07T22:01:11Z",
    "closed_at": "2013-09-07T22:01:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey TJ\n\nFor a new npm module I'd like to implement spam protection for mail addresses inside jade templates.\n\nIs there a way I can parse email addresses in jade files, modify them on the go before they get compiled?\n\nProbably I can do that with a new middleware but I need few clues where to begin.\n\nThanks,\nMichael\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1494/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1493",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1493/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1493/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1493/events",
    "html_url": "https://github.com/expressjs/express/issues/1493",
    "id": 10588148,
    "node_id": "MDU6SXNzdWUxMDU4ODE0OA==",
    "number": 1493,
    "title": "Express docs and code don't match on sessions",
    "user": {
      "login": "aaronjgreenberg",
      "id": 1333396,
      "node_id": "MDQ6VXNlcjEzMzMzOTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1333396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaronjgreenberg",
      "html_url": "https://github.com/aaronjgreenberg",
      "followers_url": "https://api.github.com/users/aaronjgreenberg/followers",
      "following_url": "https://api.github.com/users/aaronjgreenberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaronjgreenberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaronjgreenberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaronjgreenberg/subscriptions",
      "organizations_url": "https://api.github.com/users/aaronjgreenberg/orgs",
      "repos_url": "https://api.github.com/users/aaronjgreenberg/repos",
      "events_url": "https://api.github.com/users/aaronjgreenberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaronjgreenberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-02-03T19:42:27Z",
    "updated_at": "2013-09-26T09:23:03Z",
    "closed_at": "2013-09-10T09:49:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the [code that handles middleware](https://github.com/visionmedia/express/blob/master/lib/express.js#L52), Express sessions simply expose Connect sessions, which lets you just\n\n``` js\napp.use(express.session());\n```\n\nHowever, in the [api reference for sessions](http://expressjs.com/api.html#cookieSession), the syntax is different:\n\n``` js\napp.use(express.cookieSession());\n```\n\nIs there a reason for this name change and will it actually be implemented?  Looks like it could require some [awkward logic in the afore-linked code](https://github.com/aaronjgreenberg/express/blob/master/lib/express.js#L55).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1493/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1492",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1492/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1492/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1492/events",
    "html_url": "https://github.com/expressjs/express/issues/1492",
    "id": 10548059,
    "node_id": "MDU6SXNzdWUxMDU0ODA1OQ==",
    "number": 1492,
    "title": "Express handles inputs with array-format field name wrongly",
    "user": {
      "login": "linhmtran168",
      "id": 646436,
      "node_id": "MDQ6VXNlcjY0NjQzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/646436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/linhmtran168",
      "html_url": "https://github.com/linhmtran168",
      "followers_url": "https://api.github.com/users/linhmtran168/followers",
      "following_url": "https://api.github.com/users/linhmtran168/following{/other_user}",
      "gists_url": "https://api.github.com/users/linhmtran168/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/linhmtran168/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/linhmtran168/subscriptions",
      "organizations_url": "https://api.github.com/users/linhmtran168/orgs",
      "repos_url": "https://api.github.com/users/linhmtran168/repos",
      "events_url": "https://api.github.com/users/linhmtran168/events{/privacy}",
      "received_events_url": "https://api.github.com/users/linhmtran168/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-02-01T17:25:46Z",
    "updated_at": "2013-02-01T17:41:10Z",
    "closed_at": "2013-02-01T17:41:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It's seem that the issue mentioned in this thread hasn't been fixed https://groups.google.com/forum/?fromgroups=#!topic/express-js/glyRAALFRis\n\nbodyParser still handle input with array-format field name like this\n\n```\ninput(type='checkbox', value=\"UnionPay\", name='payOptions[]', checked='checked')\ninput(type='checkbox', value=\"VISA\", name='payOptions[]', checked='checked')\ninput(type='checkbox', value=\"Master\", name='payOptions[]', checked='checked')\n\nconsole.log(req.body.payOptions) => [ ['UnionPay', 'VISA', 'Master'] ]\n```\n\nIt does the word rightly when there is only one input field\n\n```\ninput(type='checkbox', value=\"Master\", name='payOptions[]', checked='checked')\n\nconsole.log(req.body.payOptions) => [ 'Master' ]\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1492/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1491",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1491/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1491/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1491/events",
    "html_url": "https://github.com/expressjs/express/issues/1491",
    "id": 10462262,
    "node_id": "MDU6SXNzdWUxMDQ2MjI2Mg==",
    "number": 1491,
    "title": "File Upload broken with 0.9.8",
    "user": {
      "login": "marcwan",
      "id": 525058,
      "node_id": "MDQ6VXNlcjUyNTA1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/525058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcwan",
      "html_url": "https://github.com/marcwan",
      "followers_url": "https://api.github.com/users/marcwan/followers",
      "following_url": "https://api.github.com/users/marcwan/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcwan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcwan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcwan/subscriptions",
      "organizations_url": "https://api.github.com/users/marcwan/orgs",
      "repos_url": "https://api.github.com/users/marcwan/repos",
      "events_url": "https://api.github.com/users/marcwan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcwan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-01-30T15:19:50Z",
    "updated_at": "2013-02-07T03:17:30Z",
    "closed_at": "2013-01-30T17:09:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Testing out 0.9.8 to see how things will work with the new streams in 0.10, seems as though file upload is broken:\n\n``` javascript\nvar express = require('express');\nvar app = express()\n    .use(express.logger('dev'))\n    .use(express.bodyParser())\n    .use(function(req, res){\n        if (!req.files || !req.files.album_cover) {\n            res.end(\"Hunh. Did you send a file?\");\n        } else {\n            console.log(req.files);\n            res.end(\"upload worked'\\n\");\n        }\n    })\n    .listen(8080);\n```\n\nIt prints out the following error:\n\n```\nevents.js:69\n        throw arguments[1]; // Unhandled 'error' event\n                       ^\nError: Invalid data\n    at WriteStream._write (fs.js:1616:31)\n    at onwrite (_stream_writable.js:265:14)\n    at WritableState.onwrite (_stream_writable.js:94:5)\n    at fs.js:1628:5\n    at Object.wrapper [as oncomplete] (fs.js:475:5)\n    at process._makeCallback (node.js:306:20)\n```\n\ni'm running:\n\n```\ncurl -i -H \"Expect:\" --form 'file=@oranges.jpg' --form data=moo http://localhost:8080\n```\n\nAnybody else been seeing problems with the latest versions of node? Something up with formidable?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1491/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1490",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1490/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1490/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1490/events",
    "html_url": "https://github.com/expressjs/express/pull/1490",
    "id": 10454827,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzkwNDEwNw==",
    "number": 1490,
    "title": "Allow an array of string in root setting for template engine",
    "user": {
      "login": "nka11",
      "id": 250248,
      "node_id": "MDQ6VXNlcjI1MDI0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nka11",
      "html_url": "https://github.com/nka11",
      "followers_url": "https://api.github.com/users/nka11/followers",
      "following_url": "https://api.github.com/users/nka11/following{/other_user}",
      "gists_url": "https://api.github.com/users/nka11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nka11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nka11/subscriptions",
      "organizations_url": "https://api.github.com/users/nka11/orgs",
      "repos_url": "https://api.github.com/users/nka11/repos",
      "events_url": "https://api.github.com/users/nka11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nka11/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-01-30T11:15:02Z",
    "updated_at": "2014-07-25T14:16:55Z",
    "closed_at": "2013-01-30T17:14:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1490",
      "html_url": "https://github.com/expressjs/express/pull/1490",
      "diff_url": "https://github.com/expressjs/express/pull/1490.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1490.patch",
      "merged_at": null
    },
    "body": "related to paularmstrong/swig#143\n\nAllows to specify a set of directory for templates lookup.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1490/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1489",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1489/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1489/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1489/events",
    "html_url": "https://github.com/expressjs/express/issues/1489",
    "id": 10447154,
    "node_id": "MDU6SXNzdWUxMDQ0NzE1NA==",
    "number": 1489,
    "title": "use json and session, the request is waiting, always",
    "user": {
      "login": "yhostc",
      "id": 1823025,
      "node_id": "MDQ6VXNlcjE4MjMwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1823025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yhostc",
      "html_url": "https://github.com/yhostc",
      "followers_url": "https://api.github.com/users/yhostc/followers",
      "following_url": "https://api.github.com/users/yhostc/following{/other_user}",
      "gists_url": "https://api.github.com/users/yhostc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yhostc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yhostc/subscriptions",
      "organizations_url": "https://api.github.com/users/yhostc/orgs",
      "repos_url": "https://api.github.com/users/yhostc/repos",
      "events_url": "https://api.github.com/users/yhostc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yhostc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-01-30T06:06:17Z",
    "updated_at": "2013-01-31T07:58:00Z",
    "closed_at": "2013-01-31T07:58:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I use \"session\" and \"json\" in express, the request always is wating. But, it is ok when remove \"session\" middleware. \n\nthe version is 3.1.0\n\nFollowed by examples:\n\nvar express = require('express')\n  , path = require('path')\n  , http = require('http');\n\nvar app = express();\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3300);\n  app.use(express.cookieParser());\n  app.use(express.session({secret:\"autonavi\"}));\n  app.use(express.bodyParser({keepExtensions: true, uploadDir: 'public/tmp'}));\n  app.use(express.methodOverride());\n  app.use(app.router);\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\napp.all('*', function auth(req, res, next){\n    var json = {status:1, info:\"ok\"};\n    res.json(200, json).end();\n});\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Server listening on port \" + app.get('port'));\n});\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1489/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1488",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1488/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1488/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1488/events",
    "html_url": "https://github.com/expressjs/express/issues/1488",
    "id": 10406806,
    "node_id": "MDU6SXNzdWUxMDQwNjgwNg==",
    "number": 1488,
    "title": "Express error messages prone to XSS ?",
    "user": {
      "login": "SomeoneWeird",
      "id": 665754,
      "node_id": "MDQ6VXNlcjY2NTc1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/665754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SomeoneWeird",
      "html_url": "https://github.com/SomeoneWeird",
      "followers_url": "https://api.github.com/users/SomeoneWeird/followers",
      "following_url": "https://api.github.com/users/SomeoneWeird/following{/other_user}",
      "gists_url": "https://api.github.com/users/SomeoneWeird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SomeoneWeird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SomeoneWeird/subscriptions",
      "organizations_url": "https://api.github.com/users/SomeoneWeird/orgs",
      "repos_url": "https://api.github.com/users/SomeoneWeird/repos",
      "events_url": "https://api.github.com/users/SomeoneWeird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SomeoneWeird/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-01-29T06:55:05Z",
    "updated_at": "2013-01-30T05:09:17Z",
    "closed_at": "2013-01-29T20:28:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![pic](https://f.cloud.github.com/assets/665754/106112/bd1604ae-69e0-11e2-9c7e-9026e48970b1.png)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1488/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1487",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1487/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1487/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1487/events",
    "html_url": "https://github.com/expressjs/express/issues/1487",
    "id": 10397471,
    "node_id": "MDU6SXNzdWUxMDM5NzQ3MQ==",
    "number": 1487,
    "title": "req.query doesn't work on URI encoded requests",
    "user": {
      "login": "dusts66",
      "id": 729912,
      "node_id": "MDQ6VXNlcjcyOTkxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/729912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dusts66",
      "html_url": "https://github.com/dusts66",
      "followers_url": "https://api.github.com/users/dusts66/followers",
      "following_url": "https://api.github.com/users/dusts66/following{/other_user}",
      "gists_url": "https://api.github.com/users/dusts66/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dusts66/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dusts66/subscriptions",
      "organizations_url": "https://api.github.com/users/dusts66/orgs",
      "repos_url": "https://api.github.com/users/dusts66/repos",
      "events_url": "https://api.github.com/users/dusts66/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dusts66/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-01-28T23:21:29Z",
    "updated_at": "2013-01-29T20:29:23Z",
    "closed_at": "2013-01-28T23:36:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "On incoming URI encoded requests the req.query method doesn't work correctly.  An example(These requests are encoded):\n\n/example?name=derived&id=0314&signature=baif36+34/55=\n\nIf I did:\n\nreq.query.name\n\nI would get:   derived&id=0314&signature=baif36+34/55=\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1487/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1486",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1486/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1486/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1486/events",
    "html_url": "https://github.com/expressjs/express/pull/1486",
    "id": 10358544,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODE1NA==",
    "number": 1486,
    "title": "Added a command-line option to bin/express to generate engine entries for node and npm in package.json",
    "user": {
      "login": "curious-attempt-bunny",
      "id": 51608,
      "node_id": "MDQ6VXNlcjUxNjA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/curious-attempt-bunny",
      "html_url": "https://github.com/curious-attempt-bunny",
      "followers_url": "https://api.github.com/users/curious-attempt-bunny/followers",
      "following_url": "https://api.github.com/users/curious-attempt-bunny/following{/other_user}",
      "gists_url": "https://api.github.com/users/curious-attempt-bunny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/curious-attempt-bunny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/curious-attempt-bunny/subscriptions",
      "organizations_url": "https://api.github.com/users/curious-attempt-bunny/orgs",
      "repos_url": "https://api.github.com/users/curious-attempt-bunny/repos",
      "events_url": "https://api.github.com/users/curious-attempt-bunny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/curious-attempt-bunny/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2013-01-27T20:32:23Z",
    "updated_at": "2014-06-25T02:18:49Z",
    "closed_at": "2013-09-10T04:43:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1486",
      "html_url": "https://github.com/expressjs/express/pull/1486",
      "diff_url": "https://github.com/expressjs/express/pull/1486.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1486.patch",
      "merged_at": null
    },
    "body": "This is a simplified version of a prior pull request based on feedback: https://github.com/visionmedia/express/pull/1483\n\n@shesek What do you think?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1486/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1485",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1485/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1485/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1485/events",
    "html_url": "https://github.com/expressjs/express/issues/1485",
    "id": 10335229,
    "node_id": "MDU6SXNzdWUxMDMzNTIyOQ==",
    "number": 1485,
    "title": "could I use 'res.redirect()' by method 'post'?",
    "user": {
      "login": "haoxins",
      "id": 2569835,
      "node_id": "MDQ6VXNlcjI1Njk4MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2569835?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haoxins",
      "html_url": "https://github.com/haoxins",
      "followers_url": "https://api.github.com/users/haoxins/followers",
      "following_url": "https://api.github.com/users/haoxins/following{/other_user}",
      "gists_url": "https://api.github.com/users/haoxins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haoxins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haoxins/subscriptions",
      "organizations_url": "https://api.github.com/users/haoxins/orgs",
      "repos_url": "https://api.github.com/users/haoxins/repos",
      "events_url": "https://api.github.com/users/haoxins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haoxins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-01-26T06:13:03Z",
    "updated_at": "2013-01-30T04:36:46Z",
    "closed_at": "2013-01-30T04:36:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1485/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1484",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1484/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1484/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1484/events",
    "html_url": "https://github.com/expressjs/express/issues/1484",
    "id": 10331437,
    "node_id": "MDU6SXNzdWUxMDMzMTQzNw==",
    "number": 1484,
    "title": "bad issue, please ignore",
    "user": {
      "login": "ajacksified",
      "id": 175515,
      "node_id": "MDQ6VXNlcjE3NTUxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/175515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajacksified",
      "html_url": "https://github.com/ajacksified",
      "followers_url": "https://api.github.com/users/ajacksified/followers",
      "following_url": "https://api.github.com/users/ajacksified/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajacksified/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajacksified/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajacksified/subscriptions",
      "organizations_url": "https://api.github.com/users/ajacksified/orgs",
      "repos_url": "https://api.github.com/users/ajacksified/repos",
      "events_url": "https://api.github.com/users/ajacksified/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajacksified/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-01-26T00:19:33Z",
    "updated_at": "2013-01-26T00:21:28Z",
    "closed_at": "2013-01-26T00:21:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "closing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1484/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1483",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1483/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1483/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1483/events",
    "html_url": "https://github.com/expressjs/express/pull/1483",
    "id": 10300904,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzNDYzNw==",
    "number": 1483,
    "title": "Added \"express --paas heroku\" option which adds package.json entries for heroku deployment to work out-of-the-box",
    "user": {
      "login": "curious-attempt-bunny",
      "id": 51608,
      "node_id": "MDQ6VXNlcjUxNjA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/curious-attempt-bunny",
      "html_url": "https://github.com/curious-attempt-bunny",
      "followers_url": "https://api.github.com/users/curious-attempt-bunny/followers",
      "following_url": "https://api.github.com/users/curious-attempt-bunny/following{/other_user}",
      "gists_url": "https://api.github.com/users/curious-attempt-bunny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/curious-attempt-bunny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/curious-attempt-bunny/subscriptions",
      "organizations_url": "https://api.github.com/users/curious-attempt-bunny/orgs",
      "repos_url": "https://api.github.com/users/curious-attempt-bunny/repos",
      "events_url": "https://api.github.com/users/curious-attempt-bunny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/curious-attempt-bunny/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-01-25T05:36:24Z",
    "updated_at": "2014-06-16T05:30:43Z",
    "closed_at": "2013-01-27T20:32:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1483",
      "html_url": "https://github.com/expressjs/express/pull/1483",
      "diff_url": "https://github.com/expressjs/express/pull/1483.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1483.patch",
      "merged_at": null
    },
    "body": "I keep having to copy and paste the correct engines settings for package.json before deploying a new app to heroku. This pull request will make that easier. Simple code, although I may have over-thought the generality of the --paas switch.\n\n----------------- Prior to this pull request the first deploy experience is as follows:\n\n-----> Node.js app detected\n-----> Resolving engine versions\n\n```\n   WARNING: No version of Node.js specified in package.json, see:\n   https://devcenter.heroku.com/articles/nodejs-versions\n\n   WARNING: The default version of Node.js and npm on Heroku will begin\n   tracking the latest stable release starting September 1, 2012.\n\n   Using Node.js version: 0.4.7\n   Using npm version: 1.0.106\n```\n\n-----> Fetching Node.js binaries\n-----> Vendoring node into slug\n-----> Installing dependencies with npm\n       npm ERR! error installing express@3.0.6 Error: Unsupported\n       npm ERR! error installing express@3.0.6     at checkEngine (/tmp/node-npm-5DgI/lib/install.js:493:14)\n       npm ERR! error installing express@3.0.6     at Array.0 (/tmp/node-npm-5DgI/node_modules/slide/lib/bind-actor.js:15:8)\n       npm ERR! error installing express@3.0.6     at LOOP (/tmp/node-npm-5DgI/node_modules/slide/lib/chain.js:15:13)\n       npm ERR! error installing express@3.0.6     at chain (/tmp/node-npm-5DgI/node_modules/slide/lib/chain.js:20:4)\n       npm ERR! error installing express@3.0.6     at installOne_ (/tmp/node-npm-5DgI/lib/install.js:470:3)\n       npm ERR! error installing express@3.0.6     at installOne (/tmp/node-npm-5DgI/lib/install.js:411:3)\n       npm ERR! error installing express@3.0.6     at /tmp/node-npm-5DgI/lib/install.js:347:9\n       npm ERR! error installing express@3.0.6     at /tmp/node-npm-5DgI/node_modules/slide/lib/async-map.js:54:35\n       npm ERR! error installing express@3.0.6     at Array.forEach (native)\n       npm ERR! error installing express@3.0.6     at /tmp/node-npm-5DgI/node_modules/slide/lib/async-map.js:54:11\n       npm ERR! error rolling back express@3.0.6 Error: ENOTEMPTY, Directory not empty '/tmp/build_2tgwfkdt0s1k3/node_modules/express'\n       npm ERR! Unsupported\n       npm ERR! Not compatible with your version of node/npm: connect@2.7.2\n       npm ERR! Required: {\"node\":\">= 0.5.0\"}\n       npm ERR! Actual:   {\"npm\":\"1.0.106\",\"node\":\"0.4.7\"}\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1483/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1482",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1482/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1482/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1482/events",
    "html_url": "https://github.com/expressjs/express/pull/1482",
    "id": 10300286,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzNDM2Mw==",
    "number": 1482,
    "title": "bin/express now generates a .gitignore for node_modules",
    "user": {
      "login": "curious-attempt-bunny",
      "id": 51608,
      "node_id": "MDQ6VXNlcjUxNjA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/curious-attempt-bunny",
      "html_url": "https://github.com/curious-attempt-bunny",
      "followers_url": "https://api.github.com/users/curious-attempt-bunny/followers",
      "following_url": "https://api.github.com/users/curious-attempt-bunny/following{/other_user}",
      "gists_url": "https://api.github.com/users/curious-attempt-bunny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/curious-attempt-bunny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/curious-attempt-bunny/subscriptions",
      "organizations_url": "https://api.github.com/users/curious-attempt-bunny/orgs",
      "repos_url": "https://api.github.com/users/curious-attempt-bunny/repos",
      "events_url": "https://api.github.com/users/curious-attempt-bunny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/curious-attempt-bunny/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-01-25T04:46:46Z",
    "updated_at": "2013-01-28T17:12:42Z",
    "closed_at": "2013-01-28T17:12:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1482",
      "html_url": "https://github.com/expressjs/express/pull/1482",
      "diff_url": "https://github.com/expressjs/express/pull/1482.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1482.patch",
      "merged_at": null
    },
    "body": "I love the generator feature. Each time I use it I create myself a .gitignore that excludes node_modules. So here's a simple patch for that by default. Enjoy!\n\nI've manually verified that the changes work.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1482/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1481",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1481/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1481/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1481/events",
    "html_url": "https://github.com/expressjs/express/pull/1481",
    "id": 10288898,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgyODQwNw==",
    "number": 1481,
    "title": "creating configurable json prefix",
    "user": {
      "login": "es128",
      "id": 1740641,
      "node_id": "MDQ6VXNlcjE3NDA2NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1740641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/es128",
      "html_url": "https://github.com/es128",
      "followers_url": "https://api.github.com/users/es128/followers",
      "following_url": "https://api.github.com/users/es128/following{/other_user}",
      "gists_url": "https://api.github.com/users/es128/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/es128/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/es128/subscriptions",
      "organizations_url": "https://api.github.com/users/es128/orgs",
      "repos_url": "https://api.github.com/users/es128/repos",
      "events_url": "https://api.github.com/users/es128/events{/privacy}",
      "received_events_url": "https://api.github.com/users/es128/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2013-01-24T20:59:36Z",
    "updated_at": "2014-06-20T12:51:46Z",
    "closed_at": "2013-01-29T13:40:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1481",
      "html_url": "https://github.com/expressjs/express/pull/1481",
      "diff_url": "https://github.com/expressjs/express/pull/1481.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1481.patch",
      "merged_at": null
    },
    "body": "example usage: `app.set(\"json prefix\", \")]},\\n\");`\n\nCreated in order to be able to follow [angular's advice](http://docs.angularjs.org/api/ng.$http) regarding JSON Vulnerability protection.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1481/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1480",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1480/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1480/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1480/events",
    "html_url": "https://github.com/expressjs/express/issues/1480",
    "id": 10275052,
    "node_id": "MDU6SXNzdWUxMDI3NTA1Mg==",
    "number": 1480,
    "title": "Request level proxying",
    "user": {
      "login": "juliangruber",
      "id": 10247,
      "node_id": "MDQ6VXNlcjEwMjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliangruber",
      "html_url": "https://github.com/juliangruber",
      "followers_url": "https://api.github.com/users/juliangruber/followers",
      "following_url": "https://api.github.com/users/juliangruber/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliangruber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliangruber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliangruber/subscriptions",
      "organizations_url": "https://api.github.com/users/juliangruber/orgs",
      "repos_url": "https://api.github.com/users/juliangruber/repos",
      "events_url": "https://api.github.com/users/juliangruber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliangruber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-01-24T14:53:10Z",
    "updated_at": "2013-01-29T17:58:59Z",
    "closed_at": "2013-01-29T17:58:59Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I love `app.use(path, fn)` for mounting express apps, but I'd also like to use this on request basis. Something like\n\n``` js\napp.get('/:site/', function (req, res) {\n  res.proxy(require('lib/' + site));\n});\n```\n\nThe use case is this:\n\nIn https://github.com/juliangruber/review-host the apps that I forward to all live in a folder called `sites` and when you drop a new app in `sites/foo` it should be accessible via `/foo`, without restarting the server.\n\nWhat do you think?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1480/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1479",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1479/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1479/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1479/events",
    "html_url": "https://github.com/expressjs/express/issues/1479",
    "id": 10271003,
    "node_id": "MDU6SXNzdWUxMDI3MTAwMw==",
    "number": 1479,
    "title": "Disable auto decoding of router parms.",
    "user": {
      "login": "sergop321",
      "id": 1838071,
      "node_id": "MDQ6VXNlcjE4MzgwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1838071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sergop321",
      "html_url": "https://github.com/sergop321",
      "followers_url": "https://api.github.com/users/sergop321/followers",
      "following_url": "https://api.github.com/users/sergop321/following{/other_user}",
      "gists_url": "https://api.github.com/users/sergop321/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sergop321/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sergop321/subscriptions",
      "organizations_url": "https://api.github.com/users/sergop321/orgs",
      "repos_url": "https://api.github.com/users/sergop321/repos",
      "events_url": "https://api.github.com/users/sergop321/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sergop321/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2013-01-24T12:37:42Z",
    "updated_at": "2013-01-24T13:51:29Z",
    "closed_at": "2013-01-24T13:51:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am useing express 2.5.11 tested over express 3.0.6 and get the same resualt.\n\nI am use this code for my router.  \napp.get('/:ver/:cat/:func/:key/:data', function(req, res, next) {  \n console.log(req.params.data);\n}\nthe last :data parmater is used as parms transfered to my functions via the url.\nEverytime I am getting '&' (even in the decoded %26 way).inside message it ruin my params pairing. \nnow the issue is with the express req params.\nuseing the following url: http://localhost:7002/0.1/test/test/key/a=b&c=%26d\nI would except getting \na=b&c=%26d\nbut actauly I am getting\na=b&c=&d\nThe req.params.data comes with already decoded '&' symbol.\nI couldn't find any way to prevent this.\nSuggestions?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1479/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1478",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1478/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1478/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1478/events",
    "html_url": "https://github.com/expressjs/express/pull/1478",
    "id": 10262533,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxNTEwMQ==",
    "number": 1478,
    "title": "Add test for \"view engine\" setting with leading \".\".",
    "user": {
      "login": "ericf",
      "id": 29096,
      "node_id": "MDQ6VXNlcjI5MDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/29096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericf",
      "html_url": "https://github.com/ericf",
      "followers_url": "https://api.github.com/users/ericf/followers",
      "following_url": "https://api.github.com/users/ericf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericf/subscriptions",
      "organizations_url": "https://api.github.com/users/ericf/orgs",
      "repos_url": "https://api.github.com/users/ericf/repos",
      "events_url": "https://api.github.com/users/ericf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-01-24T05:58:02Z",
    "updated_at": "2014-08-06T15:29:05Z",
    "closed_at": "2013-01-24T16:33:25Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1478",
      "html_url": "https://github.com/expressjs/express/pull/1478",
      "diff_url": "https://github.com/expressjs/express/pull/1478.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1478.patch",
      "merged_at": "2013-01-24T16:33:25Z"
    },
    "body": "This adds a test for: https://github.com/visionmedia/express/pull/1466\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1478/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1477",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1477/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1477/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1477/events",
    "html_url": "https://github.com/expressjs/express/pull/1477",
    "id": 10218686,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc5MzQ4NA==",
    "number": 1477,
    "title": "Allow setting an array of header values in the response",
    "user": {
      "login": "gmethvin",
      "id": 171663,
      "node_id": "MDQ6VXNlcjE3MTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmethvin",
      "html_url": "https://github.com/gmethvin",
      "followers_url": "https://api.github.com/users/gmethvin/followers",
      "following_url": "https://api.github.com/users/gmethvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmethvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmethvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmethvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gmethvin/orgs",
      "repos_url": "https://api.github.com/users/gmethvin/repos",
      "events_url": "https://api.github.com/users/gmethvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmethvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-01-23T02:30:49Z",
    "updated_at": "2014-06-20T12:01:41Z",
    "closed_at": "2013-01-24T04:29:17Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1477",
      "html_url": "https://github.com/expressjs/express/pull/1477",
      "diff_url": "https://github.com/expressjs/express/pull/1477.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1477.patch",
      "merged_at": "2013-01-24T04:29:17Z"
    },
    "body": "Make setting multiple header values using an array work as expected.\nIf the header value is an array, coerce the values to strings instead\nof the entire array.\n\nFixes #1419.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1477/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1476",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1476/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1476/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1476/events",
    "html_url": "https://github.com/expressjs/express/pull/1476",
    "id": 10142508,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1Njk1Ng==",
    "number": 1476,
    "title": "Very small usage message change for express CLI",
    "user": {
      "login": "darrenderidder",
      "id": 627254,
      "node_id": "MDQ6VXNlcjYyNzI1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/627254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrenderidder",
      "html_url": "https://github.com/darrenderidder",
      "followers_url": "https://api.github.com/users/darrenderidder/followers",
      "following_url": "https://api.github.com/users/darrenderidder/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrenderidder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrenderidder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrenderidder/subscriptions",
      "organizations_url": "https://api.github.com/users/darrenderidder/orgs",
      "repos_url": "https://api.github.com/users/darrenderidder/repos",
      "events_url": "https://api.github.com/users/darrenderidder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrenderidder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-01-20T23:06:58Z",
    "updated_at": "2014-06-25T23:48:00Z",
    "closed_at": "2013-10-16T01:23:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1476",
      "html_url": "https://github.com/expressjs/express/pull/1476",
      "diff_url": "https://github.com/expressjs/express/pull/1476.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1476.patch",
      "merged_at": null
    },
    "body": "Adds directory option to express -h usage info: 'express [options] [<directory>]\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1476/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1475",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1475/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1475/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1475/events",
    "html_url": "https://github.com/expressjs/express/pull/1475",
    "id": 10134043,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1NDQxNA==",
    "number": 1475,
    "title": "Add subdomain offset setting",
    "user": {
      "login": "gmethvin",
      "id": 171663,
      "node_id": "MDQ6VXNlcjE3MTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmethvin",
      "html_url": "https://github.com/gmethvin",
      "followers_url": "https://api.github.com/users/gmethvin/followers",
      "following_url": "https://api.github.com/users/gmethvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmethvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmethvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmethvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gmethvin/orgs",
      "repos_url": "https://api.github.com/users/gmethvin/repos",
      "events_url": "https://api.github.com/users/gmethvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmethvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-01-20T08:39:24Z",
    "updated_at": "2014-07-13T17:37:03Z",
    "closed_at": "2013-01-24T04:09:25Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1475",
      "html_url": "https://github.com/expressjs/express/pull/1475",
      "diff_url": "https://github.com/expressjs/express/pull/1475.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1475.patch",
      "merged_at": "2013-01-24T04:09:25Z"
    },
    "body": "Add a setting \"subdomain offset\" for the app, which can be used to\nchange the behavior of req.subdomains. This is useful when our \"base\"\ndomain contains more than two parts, e.g. example.co.uk, and also\nwhen we are running locally with domains like xxx.local.\n\nThe default behavior is still to return all but the last two parts.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1475/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1474",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1474/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1474/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1474/events",
    "html_url": "https://github.com/expressjs/express/issues/1474",
    "id": 10048617,
    "node_id": "MDU6SXNzdWUxMDA0ODYxNw==",
    "number": 1474,
    "title": "bodyParsing and embedded arrays not parsing correctly",
    "user": {
      "login": "reedyrm",
      "id": 1012513,
      "node_id": "MDQ6VXNlcjEwMTI1MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1012513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reedyrm",
      "html_url": "https://github.com/reedyrm",
      "followers_url": "https://api.github.com/users/reedyrm/followers",
      "following_url": "https://api.github.com/users/reedyrm/following{/other_user}",
      "gists_url": "https://api.github.com/users/reedyrm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reedyrm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reedyrm/subscriptions",
      "organizations_url": "https://api.github.com/users/reedyrm/orgs",
      "repos_url": "https://api.github.com/users/reedyrm/repos",
      "events_url": "https://api.github.com/users/reedyrm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reedyrm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-01-17T07:27:29Z",
    "updated_at": "2013-01-24T04:15:50Z",
    "closed_at": "2013-01-24T04:15:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Ran into an issue with parsing arrays\n\n``` html\n<input type=\"text\" name=\"parent[item[0][name]]\">\n<input type=\"text\" name=\"parent[item[0][price]]\">\n```\n\nThe follow is parsed successfully, but each item object is saved as \n\n{ 'name]': '4', 'price]': '5' }    where the brace is added to the object\n\nunder \n\nreq.body.parent.item[0]\n\nI understand there is a workaround where I can just collapse it down to\n\n``` html\n<input type=\"text\" name=\"item[0][name]\">\n<input type=\"text\" name=\"item[0][price]\">\n```\n\nso it parses correctly as req.body.item[0].\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1474/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1473",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1473/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1473/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1473/events",
    "html_url": "https://github.com/expressjs/express/pull/1473",
    "id": 9972879,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY3ODU5MA==",
    "number": 1473,
    "title": "multi view-root support",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-01-15T09:51:22Z",
    "updated_at": "2013-06-02T22:59:14Z",
    "closed_at": "2013-06-02T22:59:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1473",
      "html_url": "https://github.com/expressjs/express/pull/1473",
      "diff_url": "https://github.com/expressjs/express/pull/1473.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1473.patch",
      "merged_at": null
    },
    "body": "For my express app, i needed a way to add multiple template directories to the view root of express. This seems to do just that. Any idea if it's acceptable for a pull request? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1473/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1472",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1472/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1472/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1472/events",
    "html_url": "https://github.com/expressjs/express/issues/1472",
    "id": 9952561,
    "node_id": "MDU6SXNzdWU5OTUyNTYx",
    "number": 1472,
    "title": "Can't pass req variables from .param to .use?",
    "user": {
      "login": "reggi",
      "id": 296798,
      "node_id": "MDQ6VXNlcjI5Njc5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/296798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reggi",
      "html_url": "https://github.com/reggi",
      "followers_url": "https://api.github.com/users/reggi/followers",
      "following_url": "https://api.github.com/users/reggi/following{/other_user}",
      "gists_url": "https://api.github.com/users/reggi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reggi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reggi/subscriptions",
      "organizations_url": "https://api.github.com/users/reggi/orgs",
      "repos_url": "https://api.github.com/users/reggi/repos",
      "events_url": "https://api.github.com/users/reggi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reggi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2013-01-14T18:41:01Z",
    "updated_at": "2013-01-15T17:37:31Z",
    "closed_at": "2013-01-15T17:37:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[stackoverflow](http://stackoverflow.com/questions/14324241/pass-req-variables-from-param-to-use)\n\nThe code below demonstrates trying to log `req.hash_id` from middleware. It's showing up for me as `undefined`. Is there anyway that I can get this to work? Or easily parse \":hash\" out in regular .use middleware?\n\n```\napp.param(\"hash\",function(req, res, next, id){\n  req.hash_id = id;\n  return next();\n});\n\napp.use(function(req, res, next){\n  console.log(req.hash_id);\n  return next();\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1472/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1471",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1471/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1471/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1471/events",
    "html_url": "https://github.com/expressjs/express/pull/1471",
    "id": 9943255,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2MzgwMA==",
    "number": 1471,
    "title": "Allow to pass configuration function to express()",
    "user": {
      "login": "shesek",
      "id": 877904,
      "node_id": "MDQ6VXNlcjg3NzkwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shesek",
      "html_url": "https://github.com/shesek",
      "followers_url": "https://api.github.com/users/shesek/followers",
      "following_url": "https://api.github.com/users/shesek/following{/other_user}",
      "gists_url": "https://api.github.com/users/shesek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shesek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
      "organizations_url": "https://api.github.com/users/shesek/orgs",
      "repos_url": "https://api.github.com/users/shesek/repos",
      "events_url": "https://api.github.com/users/shesek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shesek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-01-14T14:29:39Z",
    "updated_at": "2014-06-14T01:06:57Z",
    "closed_at": "2013-01-17T17:14:03Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1471",
      "html_url": "https://github.com/expressjs/express/pull/1471",
      "diff_url": "https://github.com/expressjs/express/pull/1471.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1471.patch",
      "merged_at": null
    },
    "body": "The configure() function is quite handy, especially in CoffeeScript with `@` being used to access properties on this.\n\nI find myself repeatedly creating an app and running configure() on it w/o an environment, just so I'll be in the app context and could use the `@` sugar, than running the rest of the code inside that function, e.g.:\n\n``` coffee\napp = express()\napp.configure ->\n  @use express.static __dirname\n  @set '....'\n  # ...\n```\n\nWhat if `express()` simply allowed to give it a function, and immediately execute it in the context of the app?\n\n``` coffee\nexpress ->\n  @use express.static __dirname\n  @set '....'\n   # ...\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1471/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1470",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1470/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1470/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1470/events",
    "html_url": "https://github.com/expressjs/express/pull/1470",
    "id": 9922642,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1NTY2MA==",
    "number": 1470,
    "title": "implemented res.location()",
    "user": {
      "login": "juliangruber",
      "id": 10247,
      "node_id": "MDQ6VXNlcjEwMjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juliangruber",
      "html_url": "https://github.com/juliangruber",
      "followers_url": "https://api.github.com/users/juliangruber/followers",
      "following_url": "https://api.github.com/users/juliangruber/following{/other_user}",
      "gists_url": "https://api.github.com/users/juliangruber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juliangruber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juliangruber/subscriptions",
      "organizations_url": "https://api.github.com/users/juliangruber/orgs",
      "repos_url": "https://api.github.com/users/juliangruber/repos",
      "events_url": "https://api.github.com/users/juliangruber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juliangruber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2013-01-13T15:11:34Z",
    "updated_at": "2014-06-17T09:30:19Z",
    "closed_at": "2013-01-24T04:21:58Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1470",
      "html_url": "https://github.com/expressjs/express/pull/1470",
      "diff_url": "https://github.com/expressjs/express/pull/1470.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1470.patch",
      "merged_at": "2013-01-24T04:21:58Z"
    },
    "body": "So far only res.redirect() supports URL-logic like for mounted apps. When setting the location header manually you don't get all that stuff, when you don't want to redirect. This is useful for writing REST apis.\n\nI implemented res.location() to determine the url and set the header. res.redirect() now internally uses res.location().\n\nThe only thing I'm not sure about is about how `res.redirect()` gets the url from `res.location()`, that's kinda ugly. Should this logic be refactored out into a seperate function? Like:\n\n``` js\napp.smartUrl = function (url) { /* ... */ }\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1470/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1469",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1469/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1469/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1469/events",
    "html_url": "https://github.com/expressjs/express/pull/1469",
    "id": 9905012,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1MDgxMA==",
    "number": 1469,
    "title": "Added view option to ignore the physical files",
    "user": {
      "login": "pvencill",
      "id": 48778,
      "node_id": "MDQ6VXNlcjQ4Nzc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/48778?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pvencill",
      "html_url": "https://github.com/pvencill",
      "followers_url": "https://api.github.com/users/pvencill/followers",
      "following_url": "https://api.github.com/users/pvencill/following{/other_user}",
      "gists_url": "https://api.github.com/users/pvencill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pvencill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pvencill/subscriptions",
      "organizations_url": "https://api.github.com/users/pvencill/orgs",
      "repos_url": "https://api.github.com/users/pvencill/repos",
      "events_url": "https://api.github.com/users/pvencill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pvencill/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-01-12T05:43:41Z",
    "updated_at": "2013-01-13T22:54:26Z",
    "closed_at": "2013-01-13T19:20:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1469",
      "html_url": "https://github.com/expressjs/express/pull/1469",
      "diff_url": "https://github.com/expressjs/express/pull/1469.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1469.patch",
      "merged_at": null
    },
    "body": "Just a couple small changes to make it possible to have views stored in a database or in memory if the view engine supports it.\n\napp.set('enableVirtual',true); \n\nduring view setup will make it so that the file system isn't checked, and the input template path is not expanded to an absolute path.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1469/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1468",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1468/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1468/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1468/events",
    "html_url": "https://github.com/expressjs/express/issues/1468",
    "id": 9896234,
    "node_id": "MDU6SXNzdWU5ODk2MjM0",
    "number": 1468,
    "title": "context for routed methods",
    "user": {
      "login": "printercu",
      "id": 1144890,
      "node_id": "MDQ6VXNlcjExNDQ4OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1144890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/printercu",
      "html_url": "https://github.com/printercu",
      "followers_url": "https://api.github.com/users/printercu/followers",
      "following_url": "https://api.github.com/users/printercu/following{/other_user}",
      "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
      "organizations_url": "https://api.github.com/users/printercu/orgs",
      "repos_url": "https://api.github.com/users/printercu/repos",
      "events_url": "https://api.github.com/users/printercu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/printercu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-01-11T21:59:38Z",
    "updated_at": "2013-01-13T19:21:06Z",
    "closed_at": "2013-01-13T19:20:30Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Would be great to have `this` pointing to app instance inside router callbacks:\n\n``` js\n...\napp = express()\napp.all( '*', function( req, res ) {\n  if ( this == app )\n  {\n    great()\n  }\n})\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1468/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1467",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1467/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1467/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1467/events",
    "html_url": "https://github.com/expressjs/express/issues/1467",
    "id": 9891151,
    "node_id": "MDU6SXNzdWU5ODkxMTUx",
    "number": 1467,
    "title": "Error handling with domains doesn't works well",
    "user": {
      "login": "al6x",
      "id": 94196,
      "node_id": "MDQ6VXNlcjk0MTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/94196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/al6x",
      "html_url": "https://github.com/al6x",
      "followers_url": "https://api.github.com/users/al6x/followers",
      "following_url": "https://api.github.com/users/al6x/following{/other_user}",
      "gists_url": "https://api.github.com/users/al6x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/al6x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/al6x/subscriptions",
      "organizations_url": "https://api.github.com/users/al6x/orgs",
      "repos_url": "https://api.github.com/users/al6x/repos",
      "events_url": "https://api.github.com/users/al6x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/al6x/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-01-11T19:21:32Z",
    "updated_at": "2013-05-31T00:26:06Z",
    "closed_at": "2013-01-13T19:22:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`try/catch` statement in the `next` interferes with error handling via domains.\n\nTry this example, one error will be catch another will be not. It's not a critical issue, there are ways to workaround it, but would be nice if it just worked out of the box.\n\n``` JavaScript\nvar Domain  = require('domain')\nvar express = require('express')\n\nvar app = express.createServer()\n\napp.use(function(req, res, next){\n  var domain = Domain.create()\n  domain.on('error', function(err){\n    res.send(\"Catched \" + err.message)\n  })\n  domain.run(next)  \n})\n\napp.get('/failed-to-catch', function(req, res){\n  throw new Error('hello there!')\n})\n\napp.get('/catched', function(req, res){\n  process.nextTick(function(){throw new Error('hello there!')})\n})\n\napp.listen(3000)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1467/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1466",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1466/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1466/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1466/events",
    "html_url": "https://github.com/expressjs/express/pull/1466",
    "id": 9868410,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMzQ1Ng==",
    "number": 1466,
    "title": "Add full extname support to the \"view engine\" setting; e.g., \".jade\".",
    "user": {
      "login": "ericf",
      "id": 29096,
      "node_id": "MDQ6VXNlcjI5MDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/29096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericf",
      "html_url": "https://github.com/ericf",
      "followers_url": "https://api.github.com/users/ericf/followers",
      "following_url": "https://api.github.com/users/ericf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericf/subscriptions",
      "organizations_url": "https://api.github.com/users/ericf/orgs",
      "repos_url": "https://api.github.com/users/ericf/repos",
      "events_url": "https://api.github.com/users/ericf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-01-11T02:57:41Z",
    "updated_at": "2014-06-17T06:06:25Z",
    "closed_at": "2013-01-24T04:17:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1466",
      "html_url": "https://github.com/expressjs/express/pull/1466",
      "diff_url": "https://github.com/expressjs/express/pull/1466.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1466.patch",
      "merged_at": "2013-01-24T04:17:42Z"
    },
    "body": "This allows View to support a `defaultEngine` (a.k.a. an app's \"view engine\" setting) which contains a \".\", for example:\n\n``` javascript\napp.engine('.jade', jadeEngine);\napp.set('view engine', '.jade');\n```\n\nThis brings View's handling of template filename extensions to parity with `app.engine()`. This allows an app's \"view engine\" setting to be a full extension name, including the \".\".\n\nI ran into this issue when trying to extract the configuration for the default view extension name into a config file and represent it as a variable when configuring my Express app. I realized that an app's `engine()` registration and \"view engine\" setting do not behave the same; this give them parity.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1466/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1465",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1465/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1465/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1465/events",
    "html_url": "https://github.com/expressjs/express/issues/1465",
    "id": 9848765,
    "node_id": "MDU6SXNzdWU5ODQ4NzY1",
    "number": 1465,
    "title": "response.sendfile() fails with Error: Forbidden with path includes a symlink",
    "user": {
      "login": "jefflage",
      "id": 1093605,
      "node_id": "MDQ6VXNlcjEwOTM2MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1093605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jefflage",
      "html_url": "https://github.com/jefflage",
      "followers_url": "https://api.github.com/users/jefflage/followers",
      "following_url": "https://api.github.com/users/jefflage/following{/other_user}",
      "gists_url": "https://api.github.com/users/jefflage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jefflage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jefflage/subscriptions",
      "organizations_url": "https://api.github.com/users/jefflage/orgs",
      "repos_url": "https://api.github.com/users/jefflage/repos",
      "events_url": "https://api.github.com/users/jefflage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jefflage/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-01-10T16:12:18Z",
    "updated_at": "2013-01-13T19:26:53Z",
    "closed_at": "2013-01-13T19:26:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "here's the stack:\n\nError: Forbidden\n    at SendStream.error (/Users/jlage/Development/web/server/bootstrap/node_modules/express/node_modules/send/lib/send.js:145:16)\n    at SendStream.pipe (/Users/jlage/Development/web/server/bootstrap/node_modules/express/node_modules/send/lib/send.js:307:39)\n    at ServerResponse.res.sendfile (/Users/jlage/Development/web/server/bootstrap/node_modules/express/lib/response.js:336:8)\n    at module.exports.load_funds_list (/Users/jlage/Development/web/amber/controllers/ref-data.js:23:12)\n    at Object.oncomplete (fs.js:297:15)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1465/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1464",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1464/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1464/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1464/events",
    "html_url": "https://github.com/expressjs/express/issues/1464",
    "id": 9838515,
    "node_id": "MDU6SXNzdWU5ODM4NTE1",
    "number": 1464,
    "title": "req.xhr does not work.",
    "user": {
      "login": "takeshy",
      "id": 112040,
      "node_id": "MDQ6VXNlcjExMjA0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/112040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takeshy",
      "html_url": "https://github.com/takeshy",
      "followers_url": "https://api.github.com/users/takeshy/followers",
      "following_url": "https://api.github.com/users/takeshy/following{/other_user}",
      "gists_url": "https://api.github.com/users/takeshy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takeshy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takeshy/subscriptions",
      "organizations_url": "https://api.github.com/users/takeshy/orgs",
      "repos_url": "https://api.github.com/users/takeshy/repos",
      "events_url": "https://api.github.com/users/takeshy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takeshy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-01-10T11:22:16Z",
    "updated_at": "2013-01-11T01:57:40Z",
    "closed_at": "2013-01-11T01:57:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express App received Ajax request from a browser(chrome), but req.xhr was false. Because node.js set all header's key lowercase(ex. x-requested-with) but Express compare camel case(ex. X-Requested-With)\n\nnode: v0.8.2\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1464/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1463",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1463/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1463/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1463/events",
    "html_url": "https://github.com/expressjs/express/issues/1463",
    "id": 9714559,
    "node_id": "MDU6SXNzdWU5NzE0NTU5",
    "number": 1463,
    "title": "NPM install failed due to missing README.md",
    "user": {
      "login": "sang4lv",
      "id": 2039144,
      "node_id": "MDQ6VXNlcjIwMzkxNDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2039144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sang4lv",
      "html_url": "https://github.com/sang4lv",
      "followers_url": "https://api.github.com/users/sang4lv/followers",
      "following_url": "https://api.github.com/users/sang4lv/following{/other_user}",
      "gists_url": "https://api.github.com/users/sang4lv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sang4lv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sang4lv/subscriptions",
      "organizations_url": "https://api.github.com/users/sang4lv/orgs",
      "repos_url": "https://api.github.com/users/sang4lv/repos",
      "events_url": "https://api.github.com/users/sang4lv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sang4lv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-01-06T09:39:36Z",
    "updated_at": "2013-01-07T02:34:37Z",
    "closed_at": "2013-01-06T16:16:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\n  I'm having issues trying to install express module with NodeJS v0.8.16. I have tried with both version 2.3.8 and the latest version. Error log are available here https://gist.github.com/4466296 and https://gist.github.com/4466191.\n\nRegards,\nAngela\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1463/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1462",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1462/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1462/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1462/events",
    "html_url": "https://github.com/expressjs/express/pull/1462",
    "id": 9713362,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU2MTIyNg==",
    "number": 1462,
    "title": "Allow colons in passwords for req.auth",
    "user": {
      "login": "gmethvin",
      "id": 171663,
      "node_id": "MDQ6VXNlcjE3MTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmethvin",
      "html_url": "https://github.com/gmethvin",
      "followers_url": "https://api.github.com/users/gmethvin/followers",
      "following_url": "https://api.github.com/users/gmethvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmethvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmethvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmethvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gmethvin/orgs",
      "repos_url": "https://api.github.com/users/gmethvin/repos",
      "events_url": "https://api.github.com/users/gmethvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmethvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-01-06T05:50:07Z",
    "updated_at": "2023-02-25T02:15:42Z",
    "closed_at": "2013-01-09T20:47:30Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1462",
      "html_url": "https://github.com/expressjs/express/pull/1462",
      "diff_url": "https://github.com/expressjs/express/pull/1462.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1462.patch",
      "merged_at": "2013-01-09T20:47:30Z"
    },
    "body": "Passwords in basic auth can contain colons (per RFC2617), while\r\nusernames cannot, so assume everything after the colon is a password.\r\nThis makes req.auth return the correct value if the user uses a colon\r\nin their password.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1462/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1461",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1461/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1461/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1461/events",
    "html_url": "https://github.com/expressjs/express/issues/1461",
    "id": 9713191,
    "node_id": "MDU6SXNzdWU5NzEzMTkx",
    "number": 1461,
    "title": "Error: Can't set headers after they are sent.",
    "user": {
      "login": "gahula",
      "id": 1808699,
      "node_id": "MDQ6VXNlcjE4MDg2OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1808699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gahula",
      "html_url": "https://github.com/gahula",
      "followers_url": "https://api.github.com/users/gahula/followers",
      "following_url": "https://api.github.com/users/gahula/following{/other_user}",
      "gists_url": "https://api.github.com/users/gahula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gahula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gahula/subscriptions",
      "organizations_url": "https://api.github.com/users/gahula/orgs",
      "repos_url": "https://api.github.com/users/gahula/repos",
      "events_url": "https://api.github.com/users/gahula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gahula/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-01-06T05:16:38Z",
    "updated_at": "2013-01-09T20:46:55Z",
    "closed_at": "2013-01-07T05:25:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The error occurs when i render my login page and i try to go to a page(without login in) and that page redirects me back to the login page. \n\nSo..\n\nrender (login page)  >> redirect  (settings page) >> render (login page).\nIs there a way around this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1461/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1460",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1460/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1460/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1460/events",
    "html_url": "https://github.com/expressjs/express/pull/1460",
    "id": 9703727,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU1ODE3MQ==",
    "number": 1460,
    "title": "Make vhost example work on localhost",
    "user": {
      "login": "gmethvin",
      "id": 171663,
      "node_id": "MDQ6VXNlcjE3MTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmethvin",
      "html_url": "https://github.com/gmethvin",
      "followers_url": "https://api.github.com/users/gmethvin/followers",
      "following_url": "https://api.github.com/users/gmethvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmethvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmethvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmethvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gmethvin/orgs",
      "repos_url": "https://api.github.com/users/gmethvin/repos",
      "events_url": "https://api.github.com/users/gmethvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmethvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-01-05T08:32:40Z",
    "updated_at": "2014-07-10T22:57:29Z",
    "closed_at": "2013-01-20T06:30:35Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1460",
      "html_url": "https://github.com/expressjs/express/pull/1460",
      "diff_url": "https://github.com/expressjs/express/pull/1460.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1460.patch",
      "merged_at": null
    },
    "body": "Since req.subdomains doesn't return the last two parts of the domain,\nsubdomains of localhost won't show up in the array. Parse the host\ndirectly to get the first part instead.\n\nI think express needs a more flexible API for req.subdomains, since\nignoring the last two parts often doesn't make sense. I'm not sure how\nit's typically used, but it would seem more useful to just return all\nthe parts of the domain.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1460/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1459",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1459/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1459/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1459/events",
    "html_url": "https://github.com/expressjs/express/issues/1459",
    "id": 9692292,
    "node_id": "MDU6SXNzdWU5NjkyMjky",
    "number": 1459,
    "title": "Sessions/Cookies FAIL when using underscore (_) on domain name",
    "user": {
      "login": "ReiGarcia",
      "id": 426476,
      "node_id": "MDQ6VXNlcjQyNjQ3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/426476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReiGarcia",
      "html_url": "https://github.com/ReiGarcia",
      "followers_url": "https://api.github.com/users/ReiGarcia/followers",
      "following_url": "https://api.github.com/users/ReiGarcia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReiGarcia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReiGarcia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReiGarcia/subscriptions",
      "organizations_url": "https://api.github.com/users/ReiGarcia/orgs",
      "repos_url": "https://api.github.com/users/ReiGarcia/repos",
      "events_url": "https://api.github.com/users/ReiGarcia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReiGarcia/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-01-04T19:38:28Z",
    "updated_at": "2013-01-05T16:07:38Z",
    "closed_at": "2013-01-05T16:07:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "sessions / cookies are failing when using IE if the domain name has a \"_\" \n\nie. parbel_experts.nodejitsu.com\n\nfollowing code fails:\n\nhttps://github.com/visionmedia/express/blob/master/examples/cookie-sessions/index.js\n\nremove \"_\" and it works\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1459/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1458",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1458/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1458/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1458/events",
    "html_url": "https://github.com/expressjs/express/pull/1458",
    "id": 9634980,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyOTYyMQ==",
    "number": 1458,
    "title": "Don't mangle the options object in res.cookie",
    "user": {
      "login": "gmethvin",
      "id": 171663,
      "node_id": "MDQ6VXNlcjE3MTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmethvin",
      "html_url": "https://github.com/gmethvin",
      "followers_url": "https://api.github.com/users/gmethvin/followers",
      "following_url": "https://api.github.com/users/gmethvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmethvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmethvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmethvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gmethvin/orgs",
      "repos_url": "https://api.github.com/users/gmethvin/repos",
      "events_url": "https://api.github.com/users/gmethvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmethvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-01-03T03:23:35Z",
    "updated_at": "2014-07-01T06:04:22Z",
    "closed_at": "2013-01-03T20:25:57Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1458",
      "html_url": "https://github.com/expressjs/express/pull/1458",
      "diff_url": "https://github.com/expressjs/express/pull/1458.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1458.patch",
      "merged_at": "2013-01-03T20:25:57Z"
    },
    "body": "Make a copy of the cookie options before mutating it to pass to\ncookie.serialize. This prevents unexpected things from happening when\nwe try to use the same options object multiple times.\n\nAlso add a test to verify that the options object does not change\nafter a request is made.\n\nThis fixes #1449. I had been doing clones to work around this in my\nown code, but I much prefer this solution.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1458/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1457",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1457/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1457/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1457/events",
    "html_url": "https://github.com/expressjs/express/issues/1457",
    "id": 9627207,
    "node_id": "MDU6SXNzdWU5NjI3MjA3",
    "number": 1457,
    "title": "Request specific exclusion of express sub-app",
    "user": {
      "login": "ForbesLindesay",
      "id": 1260646,
      "node_id": "MDQ6VXNlcjEyNjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1260646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ForbesLindesay",
      "html_url": "https://github.com/ForbesLindesay",
      "followers_url": "https://api.github.com/users/ForbesLindesay/followers",
      "following_url": "https://api.github.com/users/ForbesLindesay/following{/other_user}",
      "gists_url": "https://api.github.com/users/ForbesLindesay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ForbesLindesay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ForbesLindesay/subscriptions",
      "organizations_url": "https://api.github.com/users/ForbesLindesay/orgs",
      "repos_url": "https://api.github.com/users/ForbesLindesay/repos",
      "events_url": "https://api.github.com/users/ForbesLindesay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ForbesLindesay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-01-02T20:56:04Z",
    "updated_at": "2013-01-03T01:22:41Z",
    "closed_at": "2013-01-03T01:02:03Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I want to be able to do something along the lines of the following (pseudo-example)\n\n``` javascript\napp.use('/admin', function (req, res, next) {\n  if (req.user.isAdmin) {\n    next();\n  } else {\n    next('route');\n  }\n}, adminApp);\n```\n\nwhere adminApp is another express application is there any way of doing this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1457/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1456",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1456/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1456/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1456/events",
    "html_url": "https://github.com/expressjs/express/issues/1456",
    "id": 9579402,
    "node_id": "MDU6SXNzdWU5NTc5NDAy",
    "number": 1456,
    "title": "error handler not trigger when route is not found.",
    "user": {
      "login": "defunctzombie",
      "id": 84792,
      "node_id": "MDQ6VXNlcjg0Nzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/84792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/defunctzombie",
      "html_url": "https://github.com/defunctzombie",
      "followers_url": "https://api.github.com/users/defunctzombie/followers",
      "following_url": "https://api.github.com/users/defunctzombie/following{/other_user}",
      "gists_url": "https://api.github.com/users/defunctzombie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/defunctzombie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/defunctzombie/subscriptions",
      "organizations_url": "https://api.github.com/users/defunctzombie/orgs",
      "repos_url": "https://api.github.com/users/defunctzombie/repos",
      "events_url": "https://api.github.com/users/defunctzombie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/defunctzombie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-12-30T02:37:39Z",
    "updated_at": "2012-12-30T18:02:05Z",
    "closed_at": "2012-12-30T17:51:37Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "When using a custom error handler and going to a route that is not found, the error handler is not triggered.\n\nThe problem lies with the following line of the router code:\nhttps://github.com/visionmedia/express/blob/8d21f1e45c5149600b7eb00734a7eee6e90677a8/lib/router/index.js#L107\n\nThe issue is that the `err` variable is not set and therefore the error handler middleware is not called.\n\nThe fix would be to call next with a proper 404 created error. Now, this is where I plug the `next(status [, msg])` form of next some more :p since it would be an easy fix if that was available.\n\nAnyhow, let me know how you want this fixed and I can do that and add a test to catch this in the future.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1456/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1455",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1455/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1455/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1455/events",
    "html_url": "https://github.com/expressjs/express/pull/1455",
    "id": 9549128,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ5NTkyNw==",
    "number": 1455,
    "title": "Fix/jsonp json whitespace",
    "user": {
      "login": "rauchg",
      "id": 13041,
      "node_id": "MDQ6VXNlcjEzMDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rauchg",
      "html_url": "https://github.com/rauchg",
      "followers_url": "https://api.github.com/users/rauchg/followers",
      "following_url": "https://api.github.com/users/rauchg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rauchg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rauchg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rauchg/subscriptions",
      "organizations_url": "https://api.github.com/users/rauchg/orgs",
      "repos_url": "https://api.github.com/users/rauchg/repos",
      "events_url": "https://api.github.com/users/rauchg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rauchg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-28T00:32:14Z",
    "updated_at": "2012-12-28T18:10:07Z",
    "closed_at": "2012-12-28T18:10:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1455",
      "html_url": "https://github.com/expressjs/express/pull/1455",
      "diff_url": "https://github.com/expressjs/express/pull/1455.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1455.patch",
      "merged_at": null
    },
    "body": "messed my `support` folder, feel free to cherry pick the commits.\n\nSee: https://medium.com/joys-of-javascript/42a28471221d\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1455/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1454",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1454/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1454/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1454/events",
    "html_url": "https://github.com/expressjs/express/pull/1454",
    "id": 9514106,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3OTk4Nw==",
    "number": 1454,
    "title": "add http verbs methods to Router",
    "user": {
      "login": "defunctzombie",
      "id": 84792,
      "node_id": "MDQ6VXNlcjg0Nzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/84792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/defunctzombie",
      "html_url": "https://github.com/defunctzombie",
      "followers_url": "https://api.github.com/users/defunctzombie/followers",
      "following_url": "https://api.github.com/users/defunctzombie/following{/other_user}",
      "gists_url": "https://api.github.com/users/defunctzombie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/defunctzombie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/defunctzombie/subscriptions",
      "organizations_url": "https://api.github.com/users/defunctzombie/orgs",
      "repos_url": "https://api.github.com/users/defunctzombie/repos",
      "events_url": "https://api.github.com/users/defunctzombie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/defunctzombie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2012-12-25T21:44:18Z",
    "updated_at": "2014-08-06T17:41:47Z",
    "closed_at": "2012-12-28T17:30:20Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1454",
      "html_url": "https://github.com/expressjs/express/pull/1454",
      "diff_url": "https://github.com/expressjs/express/pull/1454.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1454.patch",
      "merged_at": "2012-12-28T17:30:20Z"
    },
    "body": "By having the method verbs available on the router, users can set up\ndisjoint routers and organized paths easier.\n\nIt is now possible to have a .js file export the router.middleware and\nattach these paths using an `app.use('/path', middleware)` call. This\nmeans that any routes written in the separate file do not need to have a\nfull path hardcoded as they can be mounted by the application anywhere.\n\nThis is already possible using `router.route(verb, args)` however is\nneedlessly verbose without this patch.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1454/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1453",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1453/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1453/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1453/events",
    "html_url": "https://github.com/expressjs/express/issues/1453",
    "id": 9495686,
    "node_id": "MDU6SXNzdWU5NDk1Njg2",
    "number": 1453,
    "title": "3.0.5 version, parameterized middleware throwing error",
    "user": {
      "login": "ia3andy",
      "id": 2223984,
      "node_id": "MDQ6VXNlcjIyMjM5ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2223984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ia3andy",
      "html_url": "https://github.com/ia3andy",
      "followers_url": "https://api.github.com/users/ia3andy/followers",
      "following_url": "https://api.github.com/users/ia3andy/following{/other_user}",
      "gists_url": "https://api.github.com/users/ia3andy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ia3andy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ia3andy/subscriptions",
      "organizations_url": "https://api.github.com/users/ia3andy/orgs",
      "repos_url": "https://api.github.com/users/ia3andy/repos",
      "events_url": "https://api.github.com/users/ia3andy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ia3andy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-12-24T03:28:52Z",
    "updated_at": "2012-12-29T15:48:11Z",
    "closed_at": "2012-12-29T00:05:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Since 3.0.5 version parameterized middleware is not possible anymore .\n\"add throwing when a non-function is passed to a route\"\n\nHere is an example:\n\nmethods.checkAccess = (perms) ->\n  middleware = (req, res, next) =>\n    if (_.contains(req.currentWebUser.perms, \"super\") || _.intersection(req.currentWebUser.perms,perms).length >0)\n      next()\n    else \n      res.send 'User rights insuficient', 401\n  return middleware\n\napp.get  '/api...', authController.checkAccess([\"cms\"]), controller.find\n\nDo you have any idea of how i can solve this problem?\n\nThx\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1453/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1452",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1452/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1452/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1452/events",
    "html_url": "https://github.com/expressjs/express/pull/1452",
    "id": 9492808,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ3MTgyMA==",
    "number": 1452,
    "title": "Nothing special, only JSDoc update",
    "user": {
      "login": "andbas",
      "id": 440532,
      "node_id": "MDQ6VXNlcjQ0MDUzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/440532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andbas",
      "html_url": "https://github.com/andbas",
      "followers_url": "https://api.github.com/users/andbas/followers",
      "following_url": "https://api.github.com/users/andbas/following{/other_user}",
      "gists_url": "https://api.github.com/users/andbas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andbas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andbas/subscriptions",
      "organizations_url": "https://api.github.com/users/andbas/orgs",
      "repos_url": "https://api.github.com/users/andbas/repos",
      "events_url": "https://api.github.com/users/andbas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andbas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-23T19:47:46Z",
    "updated_at": "2013-09-08T04:50:03Z",
    "closed_at": "2013-09-08T04:49:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1452",
      "html_url": "https://github.com/expressjs/express/pull/1452",
      "diff_url": "https://github.com/expressjs/express/pull/1452.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1452.patch",
      "merged_at": null
    },
    "body": "Update params declaration to exclude warnings in IDE\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1452/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1451",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1451/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1451/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1451/events",
    "html_url": "https://github.com/expressjs/express/pull/1451",
    "id": 9411175,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQzMjc2Nw==",
    "number": 1451,
    "title": "Explicitly remove Transfer-Encoding header from 204 and 304 responses",
    "user": {
      "login": "aweeks",
      "id": 289403,
      "node_id": "MDQ6VXNlcjI4OTQwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/289403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aweeks",
      "html_url": "https://github.com/aweeks",
      "followers_url": "https://api.github.com/users/aweeks/followers",
      "following_url": "https://api.github.com/users/aweeks/following{/other_user}",
      "gists_url": "https://api.github.com/users/aweeks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aweeks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aweeks/subscriptions",
      "organizations_url": "https://api.github.com/users/aweeks/orgs",
      "repos_url": "https://api.github.com/users/aweeks/repos",
      "events_url": "https://api.github.com/users/aweeks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aweeks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-19T19:07:54Z",
    "updated_at": "2014-07-06T10:23:04Z",
    "closed_at": "2012-12-19T21:34:16Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1451",
      "html_url": "https://github.com/expressjs/express/pull/1451",
      "diff_url": "https://github.com/expressjs/express/pull/1451.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1451.patch",
      "merged_at": "2012-12-19T21:34:16Z"
    },
    "body": "I ran into this issue with responses that set the Transfer-Encoding header, and are then fetched using a conditional get.  Express caches the response, and determines whether it should respond with a 304.  In those cases, the Content-Type and Content-Length headers are removed, but the Transfer-Encoding is not. \n\nUpon a call to response.end(), node recognizes that the Transfer-Encoding: chunked header was set, and inserts an empty terminating chunk.  For example:\n\n```\nHTTP/1.1 304 Not Modified\nTransfer-Encoding: chunked\nDate: Wed, 19 Dec 2012 00:05:09 GMT\nConnection: keep-alive\n\n0\n\n```\n\nBut, per [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) §10.3.6 & §10.2.5 \"The [204/304] response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.\"  This response it invalid.\n\nI first brought this up with node ([issue #4437](https://github.com/joyent/node/issues/4437)), but they do not wish to modify headers as part of the HTTP module.  However, this behavior can be prevented by removing the Transfer-Encoding header in express.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1451/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1450",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1450/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1450/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1450/events",
    "html_url": "https://github.com/expressjs/express/issues/1450",
    "id": 9404572,
    "node_id": "MDU6SXNzdWU5NDA0NTcy",
    "number": 1450,
    "title": "Multiple \"static\" calls and a .get('*') don't work together",
    "user": {
      "login": "tlhunter",
      "id": 551402,
      "node_id": "MDQ6VXNlcjU1MTQwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/551402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tlhunter",
      "html_url": "https://github.com/tlhunter",
      "followers_url": "https://api.github.com/users/tlhunter/followers",
      "following_url": "https://api.github.com/users/tlhunter/following{/other_user}",
      "gists_url": "https://api.github.com/users/tlhunter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tlhunter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tlhunter/subscriptions",
      "organizations_url": "https://api.github.com/users/tlhunter/orgs",
      "repos_url": "https://api.github.com/users/tlhunter/repos",
      "events_url": "https://api.github.com/users/tlhunter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tlhunter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-12-19T15:50:50Z",
    "updated_at": "2013-09-08T04:37:47Z",
    "closed_at": "2013-09-08T04:37:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Normally, one can use multiple static directories without a problem. However, when multiple static directories are used and a 'catch-all' for grabbing 404 errors is in place, only the first static route works, and subsequent ones are ignored.\n\nHere is some example code to show this issue:\n\n```\n// If there are multiple public directories registered, it breaks the 404 catch all\n\nvar http            = require('http');\nvar express         = require('express'); // 3.x\nvar web             = express();\nvar server          = http.createServer(web);\n\n// A public directory\nweb.use('/', express.static(__dirname + '/public1'));\n\n// Normal Route\nweb.get('/good1', function(req, res) {\n    res.status(200).send('HAPPY');\n});\n\n// Another public directory\nweb.use('/another/', express.static(__dirname + '/public2'));\n\n// Another Normal Route\nweb.get('/good2', function(req, res) {\n    res.status(200).send('MORE HAPPY');\n});\n\n// Custom 404 Catcher\n// DELETE THIS, AND /another/* WORKS, KEEP IT AND /another/* DOES NOT WORK\nweb.get('*', function(req, res) {\n    res.status(404).send('SAD');\n});\n\n// Start Server\nserver.listen(2000);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1450/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1449",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1449/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1449/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1449/events",
    "html_url": "https://github.com/expressjs/express/issues/1449",
    "id": 9403554,
    "node_id": "MDU6SXNzdWU5NDAzNTU0",
    "number": 1449,
    "title": "res.cookie mangles the options object",
    "user": {
      "login": "papandreou",
      "id": 373545,
      "node_id": "MDQ6VXNlcjM3MzU0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/373545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/papandreou",
      "html_url": "https://github.com/papandreou",
      "followers_url": "https://api.github.com/users/papandreou/followers",
      "following_url": "https://api.github.com/users/papandreou/following{/other_user}",
      "gists_url": "https://api.github.com/users/papandreou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/papandreou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/papandreou/subscriptions",
      "organizations_url": "https://api.github.com/users/papandreou/orgs",
      "repos_url": "https://api.github.com/users/papandreou/repos",
      "events_url": "https://api.github.com/users/papandreou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/papandreou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-19T15:22:07Z",
    "updated_at": "2013-01-03T20:26:19Z",
    "closed_at": "2013-01-03T20:26:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In an Express app of mine I use the same `options` object each time I call `res.cookie`:\n\n``` javascript\nvar cookieOptions = {maxAge: 10000}; // 10 seconds\n\nrequire('express')()\n    .get('/', function (req, res, next) {\n        res.cookie('name', 'value', cookieOptions);\n        res.send(200);\n    })\n    .listen(1337);\n```\n\nAfter upgrading Express from 2.5.11 to 3.0.4 this stopped working as expected after the first request:\n\n```\n$ curl -i localhost:1337 |grep Set-Cookie\nSet-Cookie: name=value; Max-Age=10; Path=/; Expires=Wed, 19 Dec 2012 14:41:51 GMT\n$ curl -i localhost:1337 |grep Set-Cookie\nSet-Cookie: name=value; Max-Age=0.01; Path=/; Expires=Wed, 19 Dec 2012 14:41:51 GMT\n$ curl -i localhost:1337 |grep Set-Cookie\nSet-Cookie: name=value; Max-Age=0.00001; Path=/; Expires=Wed, 19 Dec 2012 14:41:51 GMT\n$ curl -i localhost:1337 |grep Set-Cookie\nSet-Cookie: name=value; Max-Age=1e-8; Path=/; Expires=Wed, 19 Dec 2012 14:41:51 GMT\n```\n\nTurns out `res.cookie` manipulates the options object in so that it's able to call `cookie.serialize` without creating a new object: https://github.com/visionmedia/express/blob/master/lib/response.js#L581\n\nThis was a bit of a wtf for me. I wanted to create a pull request, but was unsure whether to create a shallow copy of the options object or just implement the Expires/Max-Age handling sugar in the `cookie` module.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1449/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1448",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1448/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1448/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1448/events",
    "html_url": "https://github.com/expressjs/express/issues/1448",
    "id": 9315281,
    "node_id": "MDU6SXNzdWU5MzE1Mjgx",
    "number": 1448,
    "title": "Missing middleware in API reference",
    "user": {
      "login": "erelsgl",
      "id": 1462215,
      "node_id": "MDQ6VXNlcjE0NjIyMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1462215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erelsgl",
      "html_url": "https://github.com/erelsgl",
      "followers_url": "https://api.github.com/users/erelsgl/followers",
      "following_url": "https://api.github.com/users/erelsgl/following{/other_user}",
      "gists_url": "https://api.github.com/users/erelsgl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erelsgl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erelsgl/subscriptions",
      "organizations_url": "https://api.github.com/users/erelsgl/orgs",
      "repos_url": "https://api.github.com/users/erelsgl/repos",
      "events_url": "https://api.github.com/users/erelsgl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erelsgl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-16T11:19:56Z",
    "updated_at": "2012-12-17T23:51:21Z",
    "closed_at": "2012-12-17T23:51:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This link: http://expressjs.com/api.html#middleware\ndetails 7 middlewares, from b\\* to d*. Some middlewares are obviously missing, for example: favicon, logger, methodOverride.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1448/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]