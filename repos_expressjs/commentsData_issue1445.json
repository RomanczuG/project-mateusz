[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11411667",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11411667",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11411667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDExNjY3",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-15T22:59:45Z",
    "updated_at": "2012-12-15T22:59:45Z",
    "author_association": "MEMBER",
    "body": "I cant read coffeescript\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11411667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11424687",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11424687",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11424687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDI0Njg3",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-16T23:26:29Z",
    "updated_at": "2012-12-16T23:27:05Z",
    "author_association": "NONE",
    "body": "I do not understand if the `req.param[YourParameter]` can be determined in function. I do not see that placing the negation of the parameter. If you want to place params validations. It is much better for what you want to do\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11424687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11467774",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11467774",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11467774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDY3Nzc0",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-17T23:50:22Z",
    "updated_at": "2012-12-17T23:50:22Z",
    "author_association": "MEMBER",
    "body": "you're wanting access to the first portion? you can do:\n\n``` js\n      app.param(function(name, regexp){\n        if (regexp instanceof RegExp) {\n          return function(req, res, next, val){\n            var captures;\n            if (captures = regexp.exec(String(val))) {\n              req.params[name] = captures[1];\n              next();\n            } else {\n              next('route');\n            }\n          }\n        }\n```\n\nfor ex\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11467774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11511790",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11511790",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11511790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTExNzkw",
    "user": {
      "login": "braco",
      "id": 2449172,
      "node_id": "MDQ6VXNlcjI0NDkxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2449172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/braco",
      "html_url": "https://github.com/braco",
      "followers_url": "https://api.github.com/users/braco/followers",
      "following_url": "https://api.github.com/users/braco/following{/other_user}",
      "gists_url": "https://api.github.com/users/braco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/braco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/braco/subscriptions",
      "organizations_url": "https://api.github.com/users/braco/orgs",
      "repos_url": "https://api.github.com/users/braco/repos",
      "events_url": "https://api.github.com/users/braco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/braco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T00:08:32Z",
    "updated_at": "2012-12-19T00:08:32Z",
    "author_association": "NONE",
    "body": "Thanks, will try to be more clear and restate:\n\nThere are several base URLs: /foo, /bar, /baz\n\nEach of these has its own id parameter: /foo/:fooid, /bar/:barid, /baz/:bazid\n\nall share a secondary parameter that may or may not exist:\n\n```\n'/foo/:fooid/:maybe?'\n'/bar/:barid/:maybe?'\n'/baz/:bazid/:maybe?'\n```\n\nI assumed that the following would work:\n\n```\napp.param('fooid', function(req,res,next,value) {  // do something with fooid value, next() })\napp.param('maybe', function(req,res,next,value) { // if maybe value exists, do X, if not, do Y, next() }\n```\n\nbut if :maybe is omitted from a URL, app.param will never fire. Given the path above,\nhttp://site.com/foo/123/something // app.param will fire for 'maybe'\nhttp://site.com/foo/123/                   // app.param will not fire for 'maybe'\n\nThis behavior seems intentional as linked in the first post.\n\nMy real world example is using a slug in the URL.\n\n/category/123/slug-contents-here\n\nThe slug is for SEO purposes only, but we still need to validate it and redirect if doesn't match the item ID. Wouldn't it make more sense to let the user handle these cases within app.param? I can think of quite a few reasons why you would want to keep parameters modular and still run through validation logic when they're omitted.\n\nThe way I solved this for now is by doing:\n\n```\napp.param(\"foo\", ... \napp.param(\"bar\", ... \napp.param([\"foo\", \"bar\"], function(req,res,next,value) {\n    // foo or bar have already been validated by the calls above, now we can validate other params they both share\n    // with req.params.maybe\n})\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11511790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11514252",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11514252",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11514252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTE0MjUy",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T01:50:56Z",
    "updated_at": "2012-12-19T01:50:56Z",
    "author_association": "MEMBER",
    "body": "ah I see, yeah that's intentional, I get the use-case but to me it's a little odd to invoke those when they're not present, and it would be backwards incompatible at this point. If the slug is required why make it optional?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11514252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11515005",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11515005",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11515005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTE1MDA1",
    "user": {
      "login": "braco",
      "id": 2449172,
      "node_id": "MDQ6VXNlcjI0NDkxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2449172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/braco",
      "html_url": "https://github.com/braco",
      "followers_url": "https://api.github.com/users/braco/followers",
      "following_url": "https://api.github.com/users/braco/following{/other_user}",
      "gists_url": "https://api.github.com/users/braco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/braco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/braco/subscriptions",
      "organizations_url": "https://api.github.com/users/braco/orgs",
      "repos_url": "https://api.github.com/users/braco/repos",
      "events_url": "https://api.github.com/users/braco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/braco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T02:26:27Z",
    "updated_at": "2012-12-19T02:27:00Z",
    "author_association": "NONE",
    "body": "Slug is just a URL decoration for search engines, not required for looking up a record.  There may be times when it makes more sense to send shorter, slug-free URLs, or the slug isn't generated yet, etc.\n\nI've got another case where I would like to fill in some default values when empty (that depend on previously processed params) before rendering the output. The URLs are not coming in from a closed loop inside the website, so I'm not expecting them to be clean.\n\nUltimately I think emptiness is a valid value, just as var foo = \"\" would be, and should be run through the same app-level conditionals. I dig the logic separation you have in app.params otherwise.\n\nAnyways, I found a suitable workaround -- thanks for the chat and your work on Express.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11515005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11516280",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11516280",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11516280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTE2Mjgw",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T03:33:47Z",
    "updated_at": "2012-12-19T03:33:47Z",
    "author_association": "NONE",
    "body": "The truth is quite interesting to generate the implementation of slug. So much more can be done.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11516280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/11549249",
    "html_url": "https://github.com/expressjs/express/issues/1445#issuecomment-11549249",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "id": 11549249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTQ5MjQ5",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T21:24:06Z",
    "updated_at": "2012-12-19T21:24:06Z",
    "author_association": "MEMBER",
    "body": "@braco  sounds good, I'll keep this in mind if we come across any other use-cases for this sort of thing\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/11549249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]