[
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/643940768",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-643940768",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 643940768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mzk0MDc2OA==",
    "user": {
      "login": "joeynimu",
      "id": 1195863,
      "node_id": "MDQ6VXNlcjExOTU4NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1195863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeynimu",
      "html_url": "https://github.com/joeynimu",
      "followers_url": "https://api.github.com/users/joeynimu/followers",
      "following_url": "https://api.github.com/users/joeynimu/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeynimu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeynimu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeynimu/subscriptions",
      "organizations_url": "https://api.github.com/users/joeynimu/orgs",
      "repos_url": "https://api.github.com/users/joeynimu/repos",
      "events_url": "https://api.github.com/users/joeynimu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeynimu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T06:56:15Z",
    "updated_at": "2020-06-15T06:56:15Z",
    "author_association": "NONE",
    "body": "Hi there,\r\n\r\nMaybe [this SO question](https://stackoverflow.com/a/58055262) will help\r\n\r\nAlso if you have your code on codesandbox it'd help ",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/643940768/reactions",
      "total_count": 7,
      "+1": 0,
      "-1": 7,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/644012962",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-644012962",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 644012962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDAxMjk2Mg==",
    "user": {
      "login": "chrissyast",
      "id": 31564153,
      "node_id": "MDQ6VXNlcjMxNTY0MTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31564153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrissyast",
      "html_url": "https://github.com/chrissyast",
      "followers_url": "https://api.github.com/users/chrissyast/followers",
      "following_url": "https://api.github.com/users/chrissyast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrissyast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrissyast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrissyast/subscriptions",
      "organizations_url": "https://api.github.com/users/chrissyast/orgs",
      "repos_url": "https://api.github.com/users/chrissyast/repos",
      "events_url": "https://api.github.com/users/chrissyast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrissyast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-15T09:24:04Z",
    "updated_at": "2020-06-15T09:49:27Z",
    "author_association": "NONE",
    "body": "@joeynimu Thanks for your reply. Hmm, I seem to be doing everything the same as in that answer. I have defined the debounced function and then calling it later. Only difference seems to be that the actual function in the SO question is void whereas I am returning something. Is this the key? I can work around it by making mine void too but I'd prefer to avoid it if it's possible.\r\n\r\nCodesandbox here https://codesandbox.io/s/confident-bohr-3xjwu",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/644012962/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/646779620",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-646779620",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 646779620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Njc3OTYyMA==",
    "user": {
      "login": "joeynimu",
      "id": 1195863,
      "node_id": "MDQ6VXNlcjExOTU4NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1195863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeynimu",
      "html_url": "https://github.com/joeynimu",
      "followers_url": "https://api.github.com/users/joeynimu/followers",
      "following_url": "https://api.github.com/users/joeynimu/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeynimu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeynimu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeynimu/subscriptions",
      "organizations_url": "https://api.github.com/users/joeynimu/orgs",
      "repos_url": "https://api.github.com/users/joeynimu/repos",
      "events_url": "https://api.github.com/users/joeynimu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeynimu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-19T17:35:12Z",
    "updated_at": "2020-06-19T17:35:12Z",
    "author_association": "NONE",
    "body": "@chrissyast I am not sure where your example isn't working haven't had time to properly have a look at it really, to be honest. But I have put up a [contrived example on here](https://codesandbox.io/s/naughty-poitras-gpf6u?file=/src/App.js). Have a look and hopefully, it can point you in the right direction. ",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/646779620/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/647610648",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-647610648",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 647610648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzYxMDY0OA==",
    "user": {
      "login": "chrissyast",
      "id": 31564153,
      "node_id": "MDQ6VXNlcjMxNTY0MTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31564153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrissyast",
      "html_url": "https://github.com/chrissyast",
      "followers_url": "https://api.github.com/users/chrissyast/followers",
      "following_url": "https://api.github.com/users/chrissyast/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrissyast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrissyast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrissyast/subscriptions",
      "organizations_url": "https://api.github.com/users/chrissyast/orgs",
      "repos_url": "https://api.github.com/users/chrissyast/repos",
      "events_url": "https://api.github.com/users/chrissyast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrissyast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-22T15:52:18Z",
    "updated_at": "2020-06-22T15:52:18Z",
    "author_association": "NONE",
    "body": "@joeynimu Thanks for your reply but this is also a void method rather than one which returns something. Lodash seems to have an issue when awaiting the returned value of a function",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/647610648/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/805433955",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-805433955",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 805433955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNTQzMzk1NQ==",
    "user": {
      "login": "ianmacartney",
      "id": 366683,
      "node_id": "MDQ6VXNlcjM2NjY4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/366683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ianmacartney",
      "html_url": "https://github.com/ianmacartney",
      "followers_url": "https://api.github.com/users/ianmacartney/followers",
      "following_url": "https://api.github.com/users/ianmacartney/following{/other_user}",
      "gists_url": "https://api.github.com/users/ianmacartney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ianmacartney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ianmacartney/subscriptions",
      "organizations_url": "https://api.github.com/users/ianmacartney/orgs",
      "repos_url": "https://api.github.com/users/ianmacartney/repos",
      "events_url": "https://api.github.com/users/ianmacartney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ianmacartney/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-24T02:30:06Z",
    "updated_at": "2021-03-24T02:41:48Z",
    "author_association": "NONE",
    "body": "Here's an async-friendly version of throttle (same idea applies to debounce) that will always return a promise, but only resolve/ reject the promise if the underlying function is called:\r\n```\r\n/**\r\n * Throttles an async function in a way that can be awaited.\r\n * By default throttle doesn't return a promise for async functions unless it's invoking them immediately. See CUR-4769 for details.\r\n * @param func async function to throttle calls for.\r\n * @param wait same function as lodash.throttle's wait parameter.\r\n *             Call this function at most this often.\r\n * @returns a promise which will be resolved/ rejected only if the function is executed, with the result of the underlying call.\r\n */\r\nfunction asyncThrottle<\r\n  F extends (...args: any[]) => Promise<any>\r\n>(func: F, wait?: number) {\r\n  const throttled = _.throttle((resolve, reject, args: Parameters<F>) => {\r\n    func(...args).then(resolve).catch(reject);\r\n  }, wait);\r\n  return (...args: Parameters<F>): ReturnType<F> =>\r\n    new Promise((resolve, reject) => {\r\n      throttled(resolve, reject, args);\r\n    }) as ReturnType<F>;\r\n}\r\n```\r\nworking in [a fork of your sandbox](https://codesandbox.io/s/zealous-microservice-qzu3l?file=/src/InputSection.js)\r\n\r\nnon-typescript:\r\n```\r\nfunction asyncThrottle(func, wait) {\r\n  const throttled = _.throttle((resolve, reject, args) => {\r\n    func(...args).then(resolve).catch(reject);\r\n  }, wait);\r\n  return (...args) =>\r\n    new Promise((resolve, reject) => {\r\n      throttled(resolve, reject, args);\r\n    });\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/805433955/reactions",
      "total_count": 11,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 8,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/815866904",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-815866904",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 815866904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTg2NjkwNA==",
    "user": {
      "login": "Benimation",
      "id": 5503862,
      "node_id": "MDQ6VXNlcjU1MDM4NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5503862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Benimation",
      "html_url": "https://github.com/Benimation",
      "followers_url": "https://api.github.com/users/Benimation/followers",
      "following_url": "https://api.github.com/users/Benimation/following{/other_user}",
      "gists_url": "https://api.github.com/users/Benimation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Benimation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Benimation/subscriptions",
      "organizations_url": "https://api.github.com/users/Benimation/orgs",
      "repos_url": "https://api.github.com/users/Benimation/repos",
      "events_url": "https://api.github.com/users/Benimation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Benimation/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-08T14:23:32Z",
    "updated_at": "2021-04-08T14:23:32Z",
    "author_association": "NONE",
    "body": "> Here's an async-friendly version of throttle (same idea applies to debounce) that will always return a promise, but only resolve/ reject the promise if the underlying function is called:\r\n> \r\n> ```\r\n> /**\r\n>  * Throttles an async function in a way that can be awaited.\r\n>  * By default throttle doesn't return a promise for async functions unless it's invoking them immediately. See CUR-4769 for details.\r\n>  * @param func async function to throttle calls for.\r\n>  * @param wait same function as lodash.throttle's wait parameter.\r\n>  *             Call this function at most this often.\r\n>  * @returns a promise which will be resolved/ rejected only if the function is executed, with the result of the underlying call.\r\n>  */\r\n> function asyncThrottle<\r\n>   F extends (...args: any[]) => Promise<any>\r\n> >(func: F, wait?: number) {\r\n>   const throttled = _.throttle((resolve, reject, args: Parameters<F>) => {\r\n>     func(...args).then(resolve).catch(reject);\r\n>   }, wait);\r\n>   return (...args: Parameters<F>): ReturnType<F> =>\r\n>     new Promise((resolve, reject) => {\r\n>       throttled(resolve, reject, args);\r\n>     }) as ReturnType<F>;\r\n> }\r\n> ```\r\n> \r\n> working in [a fork of your sandbox](https://codesandbox.io/s/zealous-microservice-qzu3l?file=/src/InputSection.js)\r\n> \r\n> non-typescript:\r\n> \r\n> ```\r\n> function asyncThrottle(func, wait) {\r\n>   const throttled = _.throttle((resolve, reject, args) => {\r\n>     func(...args).then(resolve).catch(reject);\r\n>   }, wait);\r\n>   return (...args) =>\r\n>     new Promise((resolve, reject) => {\r\n>       throttled(resolve, reject, args);\r\n>     });\r\n> }\r\n> ```\r\n\r\nThis works for debounce too. All you need to do is switch out \"throttle\" for \"debounce\" (though I renamed the rest too):\r\n\r\n```javascript\r\nfunction asyncDebounce(func, wait) {\r\n  const debounced = _.debounce((resolve, reject, args) => {\r\n    func(...args).then(resolve).catch(reject);\r\n  }, wait);\r\n  return (...args) =>\r\n    new Promise((resolve, reject) => {\r\n      debounced(resolve, reject, args);\r\n    });\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/815866904/reactions",
      "total_count": 22,
      "+1": 6,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 16,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/859379489",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-859379489",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 859379489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTM3OTQ4OQ==",
    "user": {
      "login": "wparad",
      "id": 5056218,
      "node_id": "MDQ6VXNlcjUwNTYyMTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5056218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wparad",
      "html_url": "https://github.com/wparad",
      "followers_url": "https://api.github.com/users/wparad/followers",
      "following_url": "https://api.github.com/users/wparad/following{/other_user}",
      "gists_url": "https://api.github.com/users/wparad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wparad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wparad/subscriptions",
      "organizations_url": "https://api.github.com/users/wparad/orgs",
      "repos_url": "https://api.github.com/users/wparad/repos",
      "events_url": "https://api.github.com/users/wparad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wparad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-11T08:18:43Z",
    "updated_at": "2021-06-11T08:20:21Z",
    "author_association": "NONE",
    "body": "Since you likely want to pass along the context, `this` needs to be continued correctly, to have it working in `vue` for instance:\r\n\r\n```js\r\nimport { debounce } from 'lodash';\r\n\r\nexport default function asyncDebounce(func, wait) {\r\n  const debounced = debounce(async (resolve, reject, bindSelf, args) => {\r\n    try {\r\n      const result = await func.bind(bindSelf)(...args);\r\n      resolve(result);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  }, wait);\r\n\r\n  // This is the function that will be bound by the caller, so it must contain the `function` keyword.\r\n  function returnFunc(...args) {\r\n    return new Promise((resolve, reject) => {\r\n      debounced(resolve, reject, this, args);\r\n    });\r\n  }\r\n\r\n  return returnFunc;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/859379489/reactions",
      "total_count": 19,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 4,
      "confused": 0,
      "heart": 13,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/1006573679",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-1006573679",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 1006573679,
    "node_id": "IC_kwDOADxbv847_xhv",
    "user": {
      "login": "Vyachean",
      "id": 66068072,
      "node_id": "MDQ6VXNlcjY2MDY4MDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/66068072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Vyachean",
      "html_url": "https://github.com/Vyachean",
      "followers_url": "https://api.github.com/users/Vyachean/followers",
      "following_url": "https://api.github.com/users/Vyachean/following{/other_user}",
      "gists_url": "https://api.github.com/users/Vyachean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Vyachean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Vyachean/subscriptions",
      "organizations_url": "https://api.github.com/users/Vyachean/orgs",
      "repos_url": "https://api.github.com/users/Vyachean/repos",
      "events_url": "https://api.github.com/users/Vyachean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Vyachean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-01-06T13:03:50Z",
    "updated_at": "2022-01-06T13:03:50Z",
    "author_association": "NONE",
    "body": "thanks @ianmacartney, for async/await to work I added a solution like this\r\n```ts\r\nexport function asyncDebounce<\r\n  F extends(...args: any[]) => Promise<any>\r\n  >(func: F, wait?: number) {\r\n  const resolveSet = new Set<(p:any)=>void>();\r\n  const rejectSet = new Set<(p:any)=>void>();\r\n\r\n  const debounced = debounce((args: Parameters<F>) => {\r\n    func(...args)\r\n      .then((...res) => {\r\n        resolveSet.forEach((resolve) => resolve(...res));\r\n        resolveSet.clear();\r\n      })\r\n      .catch((...res) => {\r\n        rejectSet.forEach((reject) => reject(...res));\r\n        rejectSet.clear();\r\n      });\r\n  }, wait);\r\n\r\n  return (...args: Parameters<F>): ReturnType<F> => new Promise((resolve, reject) => {\r\n    resolveSet.add(resolve);\r\n    rejectSet.add(reject);\r\n    debounced(args);\r\n  }) as ReturnType<F>;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/1006573679/reactions",
      "total_count": 11,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 11,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/1493143438",
    "html_url": "https://github.com/lodash/lodash/issues/4815#issuecomment-1493143438",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/4815",
    "id": 1493143438,
    "node_id": "IC_kwDOADxbv85Y_4-O",
    "user": {
      "login": "SherifMega",
      "id": 32880766,
      "node_id": "MDQ6VXNlcjMyODgwNzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/32880766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SherifMega",
      "html_url": "https://github.com/SherifMega",
      "followers_url": "https://api.github.com/users/SherifMega/followers",
      "following_url": "https://api.github.com/users/SherifMega/following{/other_user}",
      "gists_url": "https://api.github.com/users/SherifMega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SherifMega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SherifMega/subscriptions",
      "organizations_url": "https://api.github.com/users/SherifMega/orgs",
      "repos_url": "https://api.github.com/users/SherifMega/repos",
      "events_url": "https://api.github.com/users/SherifMega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SherifMega/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-01T22:28:26Z",
    "updated_at": "2023-04-01T22:28:26Z",
    "author_association": "NONE",
    "body": "@Vyachean @wparad @Benimation \r\nbut how can i use `flush()` and `cancel()` in this case for returning result from `asyncDebounce`\r\n\r\n> TypeError: undefined is not a function\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/1493143438/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]