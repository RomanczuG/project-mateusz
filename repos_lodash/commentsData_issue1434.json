[
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137461012",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-137461012",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 137461012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2MTAxMg==",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:07:40Z",
    "updated_at": "2015-09-03T14:33:14Z",
    "author_association": "MEMBER",
    "body": "~~The issue is your `drop` after a `filter`. The `filter` means there's no way to know the end bounds of the `filter` until it is completed to perform the `drop`.~~\n\nIf you remove the `drop` notice shortcut fusion kicks in.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137461012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137462933",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-137462933",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 137462933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2MjkzMw==",
    "user": {
      "login": "PhiLhoSoft",
      "id": 1087902,
      "node_id": "MDQ6VXNlcjEwODc5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1087902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhiLhoSoft",
      "html_url": "https://github.com/PhiLhoSoft",
      "followers_url": "https://api.github.com/users/PhiLhoSoft/followers",
      "following_url": "https://api.github.com/users/PhiLhoSoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhiLhoSoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhiLhoSoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhiLhoSoft/subscriptions",
      "organizations_url": "https://api.github.com/users/PhiLhoSoft/orgs",
      "repos_url": "https://api.github.com/users/PhiLhoSoft/repos",
      "events_url": "https://api.github.com/users/PhiLhoSoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhiLhoSoft/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:15:30Z",
    "updated_at": "2015-09-03T14:15:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you have missed the point of shortcut fusion.\nFrom the current doc: \"_Shortcut fusion is an optimization strategy which merge iteratee calls; this can help to avoid the creation of intermediate data structures and greatly reduce the number of iteratee executions._\"\nYou were perhaps confused by the last part of the sentence.\n\nLet see what we have without shortcut fusion: we take the array, filter it, producing an intermediate array. Then we apply drop, producing a new array as result. Then take is applied, producing yet another array. All these arrays will probably coexist in memory, until garbage collection kicks in.\n\nThe point of shortcut fusion is, by my understanding, to create a unique function processing in a pipeline each value. Thus, only one array is created, the final result.\nThis is the memory optimization.\nAnd the number of iteratee calls is reduced too, because instead of doing 1000 \\* 3 function calls, it does only 1000 function calls, on the fused function.\n\nWhile I typed this answer (based on guess game rather than on extensive study of code), I see @jdalton answered too, with a slightly different interpretation... So if I am wrong, I would be glad to be corrected. :smile: \n\nBTW, does this shortcut fusion uses the same techniques than tranducers, explained in http://stackoverflow.com/a/26856288/15459 answer?\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137462933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137467321",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-137467321",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 137467321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2NzMyMQ==",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:33:01Z",
    "updated_at": "2015-09-03T14:33:01Z",
    "author_association": "MEMBER",
    "body": "@PhiLhoSoft Naw @pkt-zer0  is right on.\n\nI confused `drop` with `dropRight`. When we first introduced shortcut fusion `drop` would work in a lazy sequence when combined with `filter` because we had a more complex path to perform a `dropWhile()` under the hood. This ended up being too much code for 1 method scenario so it was cut to simplify things.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137467321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137486188",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-137486188",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 137486188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ4NjE4OA==",
    "user": {
      "login": "pkt-zer0",
      "id": 5304760,
      "node_id": "MDQ6VXNlcjUzMDQ3NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5304760?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pkt-zer0",
      "html_url": "https://github.com/pkt-zer0",
      "followers_url": "https://api.github.com/users/pkt-zer0/followers",
      "following_url": "https://api.github.com/users/pkt-zer0/following{/other_user}",
      "gists_url": "https://api.github.com/users/pkt-zer0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pkt-zer0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pkt-zer0/subscriptions",
      "organizations_url": "https://api.github.com/users/pkt-zer0/orgs",
      "repos_url": "https://api.github.com/users/pkt-zer0/repos",
      "events_url": "https://api.github.com/users/pkt-zer0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pkt-zer0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T15:30:01Z",
    "updated_at": "2015-09-03T15:30:01Z",
    "author_association": "NONE",
    "body": "Hmm, okay. Maybe this limitation should be documented somewhere to avoid surprising people with sudden performance spikes in slightly differently formulated expressions. Here's an alternative formulation that does work more-or-less as expected:\n\n```\n_(arr).filter(filter).take(5+2).drop(2).value();\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137486188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137501176",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-137501176",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 137501176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzUwMTE3Ng==",
    "user": {
      "login": "PhiLhoSoft",
      "id": 1087902,
      "node_id": "MDQ6VXNlcjEwODc5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1087902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhiLhoSoft",
      "html_url": "https://github.com/PhiLhoSoft",
      "followers_url": "https://api.github.com/users/PhiLhoSoft/followers",
      "following_url": "https://api.github.com/users/PhiLhoSoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhiLhoSoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhiLhoSoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhiLhoSoft/subscriptions",
      "organizations_url": "https://api.github.com/users/PhiLhoSoft/orgs",
      "repos_url": "https://api.github.com/users/PhiLhoSoft/repos",
      "events_url": "https://api.github.com/users/PhiLhoSoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhiLhoSoft/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T16:20:13Z",
    "updated_at": "2015-09-03T17:55:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't get it.\nI tried in Plunkr, even if I drop `drop()` (sic), I still get n lines of log, where n is the number of items in the array. Same with drop() after take(), as @pkt-zer0 shows. I don't see an improvement.\nWhich is consistent with my guess: I don't see how take() can predict the items filter() will deliver to limit the number of iterations. You still have to run filter() on each item to know if it will be filtered out.\n\nBut then again, I am not a functional programming guru by a long run, so I probably miss smart optimizations... :smile: \n\nWhat I am missing?\n\n[EDIT] Ah, yes, take() can choose to stop the iterations as soon as it has the required number of items. But why I still see one line per array entry?\n\nCode:\n\n``` javascript\nvar arr = _.range(20);\nvar filter = function(item) \n{\n    console.log('filtering ' + item);\n    return item % 2;\n};\nshowObject(results, _(arr).filter(filter).take(5 + 2).value()); // Custom display function\n```\n\nResult:\n\n``` js\n[1,3,5,7,9,11,13]\n```\n\nI see 20 lines in the console, in Chrome.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137501176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137504523",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-137504523",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 137504523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzUwNDUyMw==",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T16:32:27Z",
    "updated_at": "2015-09-03T17:42:35Z",
    "author_association": "MEMBER",
    "body": "@PhiLhoSoft shortcut fusion kicks in after a length of 200. The whole point is devs continue coding as they normally do and as a bonus optimizations are applied when applicable.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137504523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137521842",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-137521842",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 137521842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzUyMTg0Mg==",
    "user": {
      "login": "PhiLhoSoft",
      "id": 1087902,
      "node_id": "MDQ6VXNlcjEwODc5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1087902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhiLhoSoft",
      "html_url": "https://github.com/PhiLhoSoft",
      "followers_url": "https://api.github.com/users/PhiLhoSoft/followers",
      "following_url": "https://api.github.com/users/PhiLhoSoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhiLhoSoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhiLhoSoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhiLhoSoft/subscriptions",
      "organizations_url": "https://api.github.com/users/PhiLhoSoft/orgs",
      "repos_url": "https://api.github.com/users/PhiLhoSoft/repos",
      "events_url": "https://api.github.com/users/PhiLhoSoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhiLhoSoft/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T17:33:25Z",
    "updated_at": "2015-09-03T17:33:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Aaah, I see. Indeed, if I put a value of 200 or 500, I get the same number of lines in the console: 14.\nThanks for your patience, I got a better understanding of Lodash.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/137521842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/455824131",
    "html_url": "https://github.com/lodash/lodash/issues/1434#issuecomment-455824131",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1434",
    "id": 455824131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgyNDEzMQ==",
    "user": {
      "login": "lock[bot]",
      "id": 33595554,
      "node_id": "MDM6Qm90MzM1OTU1NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/in/6672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lock%5Bbot%5D",
      "html_url": "https://github.com/apps/lock",
      "followers_url": "https://api.github.com/users/lock%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/lock%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/lock%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lock%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lock%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/lock%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/lock%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/lock%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lock%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-19T23:34:14Z",
    "updated_at": "2019-01-19T23:34:14Z",
    "author_association": "NONE",
    "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/455824131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]