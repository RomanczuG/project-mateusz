[
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57764487",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57764487",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57764487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzY0NDg3",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T07:31:22Z",
    "updated_at": "2014-10-03T21:29:24Z",
    "author_association": "MEMBER",
    "body": "Memoizing chains gets into tricky situations like this:\n\n``` js\nvar a = _([1, 2, 3]);\na.map(function(v) { return v * v; }).value(); // [1, 4, 9]\na.filter(function(v) { return !!(v % 2); }).value(); // you'd want [1, 3]\n```\n\nThis is an issue you can solve by storing a reference to the wrapped value in a variable for reuse later, just as others do with jQuery collections.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57764487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57765488",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57765488",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57765488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzY1NDg4",
    "user": {
      "login": "arestov",
      "id": 69734,
      "node_id": "MDQ6VXNlcjY5NzM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arestov",
      "html_url": "https://github.com/arestov",
      "followers_url": "https://api.github.com/users/arestov/followers",
      "following_url": "https://api.github.com/users/arestov/following{/other_user}",
      "gists_url": "https://api.github.com/users/arestov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arestov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arestov/subscriptions",
      "organizations_url": "https://api.github.com/users/arestov/orgs",
      "repos_url": "https://api.github.com/users/arestov/repos",
      "events_url": "https://api.github.com/users/arestov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arestov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T07:45:54Z",
    "updated_at": "2014-10-03T07:45:54Z",
    "author_association": "NONE",
    "body": "I suggest to not use `__wrapped__` in case where we did not pass arg to `.chain()`. \nOr create new method, something like `.chainyyy()`\nand this code return not old style memoized chain, but function \n\n```\nvar getFirstYoungest = _.chainyyy()\n    .sortBy('age')\n    .map(function(chr) { return chr.name + ' is ' + chr.age; })\n    .first()\n```\n\nWhich has no any connetion to data. And only after call\n\n```\ngetFirstYoungest([array])\n```\n\nit will evaluate anything. I suppose that this feature must be implemented in much much different way than `.chain()`\n\nI do not suggest break anything :)\n\nMain goal is 1) lazy code evaluation support 2) reusable.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57765488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57766248",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57766248",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57766248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzY2MjQ4",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T07:56:59Z",
    "updated_at": "2014-10-03T21:28:52Z",
    "author_association": "MEMBER",
    "body": "> where we did not pass arg to `.chain()`. \n\nAh, I missed that earlier... still I believe you can manage this now by just keeping a reference to your wrapped value:\n\n``` js\nvar wrapped = _([1, 2, 3]);\n```\n\nand simply reuse `wrapped`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57766248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57767001",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57767001",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57767001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzY3MDAx",
    "user": {
      "login": "arestov",
      "id": 69734,
      "node_id": "MDQ6VXNlcjY5NzM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arestov",
      "html_url": "https://github.com/arestov",
      "followers_url": "https://api.github.com/users/arestov/followers",
      "following_url": "https://api.github.com/users/arestov/following{/other_user}",
      "gists_url": "https://api.github.com/users/arestov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arestov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arestov/subscriptions",
      "organizations_url": "https://api.github.com/users/arestov/orgs",
      "repos_url": "https://api.github.com/users/arestov/repos",
      "events_url": "https://api.github.com/users/arestov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arestov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T08:06:55Z",
    "updated_at": "2014-10-03T08:08:12Z",
    "author_association": "NONE",
    "body": "I need apply same chain flow part (`.sortBy('age').map(function(chr) { return chr.name + ' is ' + chr.age; }).first()`) 1000 times for different arrays in different time.\n\nHow i can to not create `chain` object for each of them but calclucate chain flow? \n\nI suppose it must be function something like result of `_.compose`. How I can combine `_.chain` lazy evalutation and `_.compose`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57767001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57821893",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57821893",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57821893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODIxODkz",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T16:46:22Z",
    "updated_at": "2014-10-03T21:24:04Z",
    "author_association": "MEMBER",
    "body": "> I need apply same chain flow part (`.sortBy('age').map(function(chr) { return chr.name + ' is ' + chr.age; }).first()`) 1000 times for different arrays in different time.\n\nMight be able to create a [flyweight](http://en.wikipedia.org/wiki/Flyweight_pattern) wrapper and reuse it. \n\n``` js\nvar fw = _();\n```\n\nThen modify its `__wrapped__` and other properties to reuse the wrapper.\n\n> How i can to not create chain object for each of them but calclucate chain flow?\n\nIn our edge all methods are deferred until `value()` is implicitly or explicitly called so you use a reference wrapper and modify it's queue and other metadata.\n\n> How I can combine `_.chain` lazy evalutation and `_.compose`?\n\nThat doesn't seem like the route to take.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57821893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57827000",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57827000",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57827000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI3MDAw",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T17:26:58Z",
    "updated_at": "2014-10-04T17:51:43Z",
    "author_association": "MEMBER",
    "body": "Continuing with the [flyweight](http://en.wikipedia.org/wiki/Flyweight_pattern) example, in our edge this should be possible:\n\n``` js\nvar fw = _().chain();\n\nvar macro = fw\n  .sortBy('age')\n  .map(function(chr) { return chr.name + ' is ' + chr.age; })\n  .first();\n```\n\nYou can then swap out the original `__wrapped__` value\n\n``` js\nfw.__wrapped__ = array1;\nvar result1 = macro.value();\n\nfw.__wrapped__ = array2;\nvar result2 = macro.value();\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57827000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57827883",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57827883",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57827883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI3ODgz",
    "user": {
      "login": "megawac",
      "id": 3475472,
      "node_id": "MDQ6VXNlcjM0NzU0NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3475472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/megawac",
      "html_url": "https://github.com/megawac",
      "followers_url": "https://api.github.com/users/megawac/followers",
      "following_url": "https://api.github.com/users/megawac/following{/other_user}",
      "gists_url": "https://api.github.com/users/megawac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/megawac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/megawac/subscriptions",
      "organizations_url": "https://api.github.com/users/megawac/orgs",
      "repos_url": "https://api.github.com/users/megawac/repos",
      "events_url": "https://api.github.com/users/megawac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/megawac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T17:34:23Z",
    "updated_at": "2014-10-03T17:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Suggestion, have `.value(<wrapVal>)` take an optional wrap value. (I was going to write a lazy lib just for this purpose then got distracted)\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57827883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57828377",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-57828377",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 57828377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI4Mzc3",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T17:38:18Z",
    "updated_at": "2014-10-03T21:29:53Z",
    "author_association": "MEMBER",
    "body": "> Suggestion, have `.value(<wrapVal>)` take an optional wrap value. (I was going to write a lazy lib just for this purpose then got distracted)\n\nIMO that wouldn't be obvious that it's setting the `__wrapped__` value at the start of the chain. For now I'll leave it as something that's possible and see if the community comes up with sugar around it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/57828377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/58373594",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-58373594",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 58373594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzczNTk0",
    "user": {
      "login": "sankargorthi",
      "id": 924700,
      "node_id": "MDQ6VXNlcjkyNDcwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/924700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sankargorthi",
      "html_url": "https://github.com/sankargorthi",
      "followers_url": "https://api.github.com/users/sankargorthi/followers",
      "following_url": "https://api.github.com/users/sankargorthi/following{/other_user}",
      "gists_url": "https://api.github.com/users/sankargorthi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sankargorthi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sankargorthi/subscriptions",
      "organizations_url": "https://api.github.com/users/sankargorthi/orgs",
      "repos_url": "https://api.github.com/users/sankargorthi/repos",
      "events_url": "https://api.github.com/users/sankargorthi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sankargorthi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-08T15:13:14Z",
    "updated_at": "2014-10-08T15:18:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would read better with an `evaluate` api rather than `value`.\n\n`transform = fw.map(…).reduce(…); return transform.evaluate(array1);`\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/58373594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/72980379",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-72980379",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 72980379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTgwMzc5",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-05T01:54:33Z",
    "updated_at": "2015-02-05T01:54:33Z",
    "author_association": "MEMBER",
    "body": "I can dig a combo of `value(<val>)` (plants and runs the sequence) and `plant(<val>)` to simply plant a new value the sequence is applied on.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/72980379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/105374395",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-105374395",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 105374395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTM3NDM5NQ==",
    "user": {
      "login": "jlgrall",
      "id": 1263537,
      "node_id": "MDQ6VXNlcjEyNjM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1263537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlgrall",
      "html_url": "https://github.com/jlgrall",
      "followers_url": "https://api.github.com/users/jlgrall/followers",
      "following_url": "https://api.github.com/users/jlgrall/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlgrall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlgrall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlgrall/subscriptions",
      "organizations_url": "https://api.github.com/users/jlgrall/orgs",
      "repos_url": "https://api.github.com/users/jlgrall/repos",
      "events_url": "https://api.github.com/users/jlgrall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlgrall/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-26T03:16:14Z",
    "updated_at": "2015-05-26T03:48:25Z",
    "author_association": "NONE",
    "body": "I am using something close:\n\n``` javascript\nvar filterStuff = _.chain()\n                .filter()\n                .filter()\n                .end();\n```\n\nInstead of:\n\n``` javascript\nvar filterStuff = function(stuff) {\n    return _.chain(stuff)\n        .filter()\n        .filter()\n        .value();\n}\n```\n\nEven if I call `filterStuff()` many times, the chain is built only once.\nHere is the definition of my `.end()`:\n\n``` javascript\n_.prototype.end = function() {\n    var chain = this;\n    return function(value) {\n        return chain.plant(value).value();\n    };\n};\n```\n\nI know that `_.plant()` clones the chain, but at least it skips the building of the chain.\nAnd from what I saw, if I put a value in `_.chain()` that is the same type as the value that I will then pass to the ended chain, lodash might optimize the chain with the right lazy wrappers.\n\nAny thought on this? Did you find a better way?\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/105374395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/105378875",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-105378875",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 105378875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTM3ODg3NQ==",
    "user": {
      "login": "jlgrall",
      "id": 1263537,
      "node_id": "MDQ6VXNlcjEyNjM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1263537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlgrall",
      "html_url": "https://github.com/jlgrall",
      "followers_url": "https://api.github.com/users/jlgrall/followers",
      "following_url": "https://api.github.com/users/jlgrall/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlgrall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlgrall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlgrall/subscriptions",
      "organizations_url": "https://api.github.com/users/jlgrall/orgs",
      "repos_url": "https://api.github.com/users/jlgrall/repos",
      "events_url": "https://api.github.com/users/jlgrall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlgrall/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-26T03:34:11Z",
    "updated_at": "2015-05-26T03:34:11Z",
    "author_association": "NONE",
    "body": "Maybe an idea to make it more efficient would be something like that:\n\n``` javascript\n_.prototype.end = function() {\n    var chain = cloneChain(this);\n    return function(value) {\n        return chain.set__wrapped__(value).value();\n    };\n};\n```\n\nWhere:\n1. `cloneChain()` would clone the chain without modifying the `__wrapped__`\n2. `set__wrapped__()` would change the `__wrapped__` property of the chain (or of the nested `__wrapped__`)\n\nWith the benefit that you are working on a private clone of the chain. Allowing the original chain to be reused or modified somewhere else.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/105378875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/455850372",
    "html_url": "https://github.com/lodash/lodash/issues/730#issuecomment-455850372",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/730",
    "id": 455850372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg1MDM3Mg==",
    "user": {
      "login": "lock[bot]",
      "id": 33595554,
      "node_id": "MDM6Qm90MzM1OTU1NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/in/6672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lock%5Bbot%5D",
      "html_url": "https://github.com/apps/lock",
      "followers_url": "https://api.github.com/users/lock%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/lock%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/lock%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lock%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lock%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/lock%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/lock%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/lock%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lock%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-20T09:25:53Z",
    "updated_at": "2019-01-20T09:25:53Z",
    "author_association": "NONE",
    "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/455850372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]