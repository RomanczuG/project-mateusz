[
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78031105",
    "html_url": "https://github.com/lodash/lodash/issues/1035#issuecomment-78031105",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1035",
    "id": 78031105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDMxMTA1",
    "user": {
      "login": "bnjmnt4n",
      "id": 813865,
      "node_id": "MDQ6VXNlcjgxMzg2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/813865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bnjmnt4n",
      "html_url": "https://github.com/bnjmnt4n",
      "followers_url": "https://api.github.com/users/bnjmnt4n/followers",
      "following_url": "https://api.github.com/users/bnjmnt4n/following{/other_user}",
      "gists_url": "https://api.github.com/users/bnjmnt4n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bnjmnt4n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bnjmnt4n/subscriptions",
      "organizations_url": "https://api.github.com/users/bnjmnt4n/orgs",
      "repos_url": "https://api.github.com/users/bnjmnt4n/repos",
      "events_url": "https://api.github.com/users/bnjmnt4n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bnjmnt4n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T10:47:43Z",
    "updated_at": "2015-03-10T11:35:05Z",
    "author_association": "MEMBER",
    "body": "~~Seems like a bug to me. Will try to debug and fix soon.~~ Seems like I got this wrong, @davidkpiano seems correct though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78031105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78034851",
    "html_url": "https://github.com/lodash/lodash/issues/1035#issuecomment-78034851",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1035",
    "id": 78034851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDM0ODUx",
    "user": {
      "login": "davidkpiano",
      "id": 1093738,
      "node_id": "MDQ6VXNlcjEwOTM3Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1093738?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidkpiano",
      "html_url": "https://github.com/davidkpiano",
      "followers_url": "https://api.github.com/users/davidkpiano/followers",
      "following_url": "https://api.github.com/users/davidkpiano/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidkpiano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidkpiano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidkpiano/subscriptions",
      "organizations_url": "https://api.github.com/users/davidkpiano/orgs",
      "repos_url": "https://api.github.com/users/davidkpiano/repos",
      "events_url": "https://api.github.com/users/davidkpiano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidkpiano/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T11:16:18Z",
    "updated_at": "2015-03-10T15:00:14Z",
    "author_association": "NONE",
    "body": "Your first `_.every` is being called with just the collection. Your second `_.every` (in `.takeWhile(_.every)`) is being called with three arguments - the value (each array in the zipped arrays), the index, and the collection - which don't match the signature of `_.every`.\n\nA quick solution is to limit `_.every` to only one argument: `_(foo).zip(bar).takeWhile(_.ary(_.every, 1))`\n\n@jdalton could this benefit from an `isIterateeCall` check? There also doesn't seem to be a unit test for `_.every` should work as iteratee for `_.map`\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78034851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78051900",
    "html_url": "https://github.com/lodash/lodash/issues/1035#issuecomment-78051900",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1035",
    "id": 78051900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDUxOTAw",
    "user": {
      "login": "haphut",
      "id": 4615413,
      "node_id": "MDQ6VXNlcjQ2MTU0MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4615413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haphut",
      "html_url": "https://github.com/haphut",
      "followers_url": "https://api.github.com/users/haphut/followers",
      "following_url": "https://api.github.com/users/haphut/following{/other_user}",
      "gists_url": "https://api.github.com/users/haphut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haphut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haphut/subscriptions",
      "organizations_url": "https://api.github.com/users/haphut/orgs",
      "repos_url": "https://api.github.com/users/haphut/repos",
      "events_url": "https://api.github.com/users/haphut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haphut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T13:26:56Z",
    "updated_at": "2015-03-10T13:26:56Z",
    "author_association": "NONE",
    "body": "Thank you both. That makes sense and is documented behaviour for `_.takeWhile`.\n\nBtw, if you need to consider use cases, my intention was to whip up a quick solution for a `_.zip` that would not continue past the shortest array. It would have worked for my input but not for falsy yet valid values in the arrays. `_(foo).zip(bar).take(minimumSize([foo, bar]))` does not look clean because of the argument repetition but it'll do.\n\nThough I can see myself needing to `AND` zipped arrays of booleans in the future.\n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78051900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78072009",
    "html_url": "https://github.com/lodash/lodash/issues/1035#issuecomment-78072009",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1035",
    "id": 78072009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDcyMDA5",
    "user": {
      "login": "jdalton",
      "id": 4303,
      "node_id": "MDQ6VXNlcjQzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdalton",
      "html_url": "https://github.com/jdalton",
      "followers_url": "https://api.github.com/users/jdalton/followers",
      "following_url": "https://api.github.com/users/jdalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdalton/subscriptions",
      "organizations_url": "https://api.github.com/users/jdalton/orgs",
      "repos_url": "https://api.github.com/users/jdalton/repos",
      "events_url": "https://api.github.com/users/jdalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T15:01:46Z",
    "updated_at": "2015-03-10T15:01:46Z",
    "author_association": "MEMBER",
    "body": "@davidkpiano \n\n> could this benefit from an `isIterateeCall` check? There also doesn't seem to be a unit test for `_.every` should work as iteratee for `_.map`\n\nYap it's being used in a way that would benefit from it so we can add it. There's not a test because we don't have a guard to ensure anything other than its usual behavior. \n",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/78072009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/lodash/lodash/issues/comments/455864552",
    "html_url": "https://github.com/lodash/lodash/issues/1035#issuecomment-455864552",
    "issue_url": "https://api.github.com/repos/lodash/lodash/issues/1035",
    "id": 455864552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg2NDU1Mg==",
    "user": {
      "login": "lock[bot]",
      "id": 33595554,
      "node_id": "MDM6Qm90MzM1OTU1NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/in/6672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lock%5Bbot%5D",
      "html_url": "https://github.com/apps/lock",
      "followers_url": "https://api.github.com/users/lock%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/lock%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/lock%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lock%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lock%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/lock%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/lock%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/lock%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lock%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-20T12:58:54Z",
    "updated_at": "2019-01-20T12:58:54Z",
    "author_association": "NONE",
    "body": "This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.",
    "reactions": {
      "url": "https://api.github.com/repos/lodash/lodash/issues/comments/455864552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]